/*
 * Copyright 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

pluginManagement {
    repositories {
        mavenCentral()
        google()
        gradlePluginPortal().content {
            it.includeModule("org.jetbrains.kotlin.jvm", "org.jetbrains.kotlin.jvm.gradle.plugin")
            it.includeModule("com.gradle.enterprise", "com.gradle.enterprise.gradle.plugin")
            it.includeModule("com.gradle", "gradle-enterprise-gradle-plugin")
        }
    }
}

plugins { 
    id("com.gradle.enterprise") version "3.16.2"
}

dependencyResolutionManagement {
    repositories {
        mavenCentral()
        google()
        gradlePluginPortal().content {
            it.includeModule("com.gradle", "gradle-enterprise-gradle-plugin")
            it.includeModule("com.gradle", "common-custom-user-data-gradle-plugin")
            it.includeModule("org.spdx", "spdx-gradle-plugin")
            it.includeModule("com.github.johnrengelman.shadow",
                    "com.github.johnrengelman.shadow.gradle.plugin")
            it.includeModule("com.github.johnrengelman", "shadow")
        }
    }
}

System.setProperty(
        "CHECKOUT_ROOT",
        buildscript.sourceFile.getParentFile().getParentFile().getParentFile().absolutePath
)
System.setProperty("ALLOW_PUBLIC_REPOS", "true")
rootProject.name = "playground-plugin"
includeBuild("../../buildSrc") {
    // cannot use name buildSrc, it is reserved.
    name = "supportBuildSrc"
    dependencySubstitution {
        substitute module('supportBuildSrc:public') using project(':public')
        substitute module('supportBuildSrc:private') using project(':private')
        substitute module('supportBuildSrc:plugins') using project(':plugins')
    }
}
include(":shared")
// Build cache configuration is duplicated here from the GradleEnterpriseConventionsPlugin,
// so that when building the `playground-plugin` included build the same build cache settings will be used.
// Without this, Gradle Enterprise erroneously reports a problem with 'buildSrc' build cache configuration.
def isCI = System.getenv("CI") == "true"

gradleEnterprise {
    server = "https://ge.solutions-team.gradle.com"
}
buildCache {
    local {
        // Aggressively clean up stale build cache entries on CI
        if (isCI) {
            removeUnusedEntriesAfterDays = 1
        }
    }
     remote(gradleEnterprise.buildCache) {
         def accessKey = System.getenv("GRADLE_ENTERPRISE_ACCESS_KEY")
         push = isCI && accessKey
     }
}
