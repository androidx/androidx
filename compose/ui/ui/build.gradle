/*
 * Copyright 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.AndroidXComposePlugin
import androidx.build.LibraryGroups
import androidx.build.LibraryType
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

import static androidx.inspection.gradle.InspectionPluginKt.packageInspector

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXComposePlugin")
}

AndroidXComposePlugin.applyAndConfigureKotlinPlugin(project)

dependencies {
    kotlinPlugin(projectOrArtifact(":compose:compiler:compiler"))

    if(!AndroidXComposePlugin.isMultiplatformEnabled(project)) {
        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block below
         */
        implementation(libs.kotlinStdlibCommon)
        implementation(libs.kotlinCoroutinesCore)

        api(projectOrArtifact(":compose:runtime:runtime-saveable"))
        api(projectOrArtifact(":compose:ui:ui-geometry"))
        api(projectOrArtifact(":compose:ui:ui-graphics"))
        api(projectOrArtifact(":compose:ui:ui-text"))
        api(projectOrArtifact(":compose:ui:ui-unit"))
        api("androidx.annotation:annotation:1.1.0")

        // This has stub APIs for access to legacy Android APIs, so we don't want
        // any dependency on this module.
        compileOnly(projectOrArtifact(":compose:ui:ui-android-stubs"))

        implementation(projectOrArtifact(":compose:runtime:runtime"))
        implementation(projectOrArtifact(":compose:ui:ui-util"))
        implementation(libs.kotlinStdlib)
        implementation("androidx.autofill:autofill:1.0.0")
        implementation(libs.kotlinCoroutinesAndroid)

        implementation("androidx.savedstate:savedstate:1.1.0")
        implementation("androidx.lifecycle:lifecycle-common-java8:2.3.0")
        implementation("androidx.lifecycle:lifecycle-runtime:2.3.0")
        implementation("androidx.lifecycle:lifecycle-viewmodel:2.3.0")
        implementation(projectOrArtifact(":profileinstaller:profileinstaller"))

        testImplementation(libs.testRules)
        testImplementation(libs.testRunner)
        testImplementation(libs.kotlinCoroutinesTest)
        testImplementation(libs.junit)
        testImplementation(libs.truth)
        testImplementation(libs.mockitoCore)
        testImplementation(libs.mockitoKotlin)
        testImplementation(libs.robolectric)
        testImplementation(projectOrArtifact(":compose:ui:ui-test-junit4"))
        testImplementation(projectOrArtifact(":compose:test-utils"))

        androidTestImplementation(libs.testCore)
        androidTestImplementation(libs.testRules)
        androidTestImplementation(libs.testRunner)
        androidTestImplementation(libs.testExtJunitKtx)
        androidTestImplementation(libs.testUiautomator)
        androidTestImplementation(libs.kotlinTest)
        androidTestImplementation(libs.kotlinCoroutinesTest)
        androidTestImplementation(libs.espressoCore)
        androidTestImplementation(libs.junit)
        androidTestImplementation(libs.dexmakerMockito)
        androidTestImplementation(libs.mockitoCore)
        androidTestImplementation(libs.truth)
        androidTestImplementation(libs.mockitoKotlin)
        androidTestImplementation(projectOrArtifact(":compose:animation:animation-core"))
        androidTestImplementation(projectOrArtifact(":compose:foundation:foundation"))
        androidTestImplementation(projectOrArtifact(":compose:foundation:foundation-layout"))
        androidTestImplementation(projectOrArtifact(":compose:test-utils"))
        androidTestImplementation(projectOrArtifact(":compose:ui:ui-test-font"))
        androidTestImplementation(projectOrArtifact(":compose:ui:ui-test-junit4"))
        androidTestImplementation(projectOrArtifact(":test:screenshot:screenshot"))
        androidTestImplementation("androidx.recyclerview:recyclerview:1.1.0")
        androidTestImplementation("androidx.core:core-ktx:1.1.0")
        androidTestImplementation("androidx.activity:activity-compose:1.3.1")
        androidTestImplementation("androidx.appcompat:appcompat:1.3.0-beta01")
        androidTestImplementation("androidx.fragment:fragment:1.3.0")

        lintChecks(projectOrArtifact(":compose:ui:ui-lint"))
        lintPublish(projectOrArtifact(":compose:ui:ui-lint"))

        samples(projectOrArtifact(":compose:ui:ui:ui-samples"))
    }
}

packageInspector(project, projectOrArtifact(":compose:ui:ui-inspection"))

if(AndroidXComposePlugin.isMultiplatformEnabled(project)) {
    kotlin {
        android()
        jvm("desktop")

        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block above
         */
        sourceSets {
            commonMain.dependencies {
                implementation(libs.kotlinStdlibCommon)
                implementation(libs.kotlinCoroutinesCore)

                api projectOrArtifact(":compose:runtime:runtime-saveable")
                api projectOrArtifact(":compose:ui:ui-geometry")
                api projectOrArtifact(":compose:ui:ui-graphics")
                api projectOrArtifact(":compose:ui:ui-text")
                api projectOrArtifact(":compose:ui:ui-unit")
                implementation(projectOrArtifact(":compose:runtime:runtime"))
                implementation(projectOrArtifact(":compose:ui:ui-util"))
            }

            androidMain.dependencies {
                implementation(libs.kotlinStdlib)
                // This has stub APIs for access to legacy Android APIs, so we don't want
                // any dependency on this module.
                compileOnly(projectOrArtifact(":compose:ui:ui-android-stubs"))
                api("androidx.annotation:annotation:1.1.0")
                implementation("androidx.autofill:autofill:1.0.0")
                implementation(libs.kotlinCoroutinesAndroid)

                implementation("androidx.savedstate:savedstate:1.1.0")
                implementation("androidx.lifecycle:lifecycle-common-java8:2.3.0")
                implementation("androidx.lifecycle:lifecycle-runtime:2.3.0")
                implementation("androidx.lifecycle:lifecycle-viewmodel:2.3.0")
            }

            jvmMain.dependencies {
                implementation(libs.kotlinStdlib)
            }

            androidMain.dependsOn(jvmMain)
            skikoMain {
                dependsOn(commonMain)
                dependencies {
                    api(projectOrArtifact(":compose:ui:ui-graphics"))
                    api(libs.skikoCommon)
                }
            }
            desktopMain {
                dependsOn(skikoMain)
                dependencies {
                    implementation(libs.kotlinStdlibJdk8)
                    api(libs.kotlinCoroutinesSwing)
                }
                dependsOn(jvmMain)
            }

            androidTest.dependencies {
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.kotlinCoroutinesTest)
                implementation(libs.junit)
                implementation(libs.truth)
                implementation(libs.mockitoCore)
                implementation(libs.mockitoKotlin)
                implementation(libs.robolectric)
                implementation(projectOrArtifact(":compose:ui:ui-test-junit4"))
                implementation(projectOrArtifact(":compose:test-utils"))
            }

            androidAndroidTest.dependencies {
                implementation("androidx.fragment:fragment:1.3.0")
                implementation("androidx.appcompat:appcompat:1.3.0-beta01")
                implementation(libs.testUiautomator)
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.testExtJunitKtx)
                implementation(libs.kotlinCoroutinesTest)
                implementation(libs.espressoCore)
                implementation(libs.junit)
                implementation(libs.dexmakerMockito)
                implementation(libs.mockitoCore)
                implementation(libs.truth)
                implementation(libs.mockitoKotlin)
                implementation(projectOrArtifact(":compose:animation:animation-core"))
                implementation(projectOrArtifact(":compose:foundation:foundation"))
                implementation(projectOrArtifact(":compose:foundation:foundation-layout"))
                implementation(projectOrArtifact(":compose:test-utils"))
                implementation(projectOrArtifact(":compose:ui:ui-test-font"))
                implementation(projectOrArtifact(":compose:ui:ui-test-junit4"))
                implementation(projectOrArtifact(":test:screenshot:screenshot"))
                implementation("androidx.recyclerview:recyclerview:1.1.0")
                implementation("androidx.core:core-ktx:1.1.0")
                implementation("androidx.activity:activity-compose:1.3.1")
            }

            desktopTest.dependencies {
                implementation(libs.truth)
                implementation(libs.junit)
                implementation(libs.mockitoCore)
                implementation(libs.mockitoKotlin)
                implementation(libs.skikoCurrentOs)
                implementation(projectOrArtifact(":compose:material:material"))
                implementation(projectOrArtifact(":compose:ui:ui-test-junit4"))
            }
        }
    }
    dependencies {
        samples(projectOrArtifact(":compose:ui:ui:ui-samples"))
    }
}

androidx {
    name = "Compose UI primitives"
    type = LibraryType.PUBLISHED_LIBRARY
    mavenGroup = LibraryGroups.Compose.UI
    inceptionYear = "2019"
    description = "Compose UI primitives. This library contains the primitives that form the Compose UI Toolkit, such as drawing, measurement and layout."
    legacyDisableKotlinStrictApiMode = true
}

if(AndroidXComposePlugin.isMultiplatformEnabled(project)) {
    tasks.findByName("desktopTest").configure {
        systemProperties["GOLDEN_PATH"] = project.rootDir.absolutePath + "/../../golden"
    }
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += [
            "-Xopt-in=kotlin.Experimental",
            "-XXLanguage:+InlineClasses"
        ]
    }
}

android {
    testOptions.unitTests.includeAndroidResources = true
    buildTypes.all {
        consumerProguardFiles("proguard-rules.pro")
    }
}

// Screenshot tests related setup
android {
    sourceSets.androidTest.assets.srcDirs +=
            project.rootDir.absolutePath + "/../../golden/compose/ui/ui"
}

// Diagnostics for b/188565660
def verifyKotlinModule(String variant) {
    project.afterEvaluate {
        def capitalVariant = variant.capitalize()
        def moduleFile = new File("${buildDir}/tmp/kotlin-classes/${variant}/META-INF/ui_${variant}.kotlin_module")
        tasks.named("compile${capitalVariant}Kotlin").configure { t ->
            t.doLast {
                // This file should be large, about 3.2K. If this file is short then many symbols will fail to resolve
                if (moduleFile.length() < 250) {
                    throw new GradleException("kotlin_module file ($moduleFile) too short! See b/188565660 for more information. File text: ${moduleFile.text}")
                }
            }
        }
    }
}
if (!AndroidXComposePlugin.isMultiplatformEnabled(project)) {
    for (variant in ["debug", "release"]) {
        verifyKotlinModule(variant)
    }
}
