# Baseline profile rules for androidx.compose.ui.text
# =============================================

HSPLandroidx/compose/ui/text/AndroidParagraph**->**(**)**
HSPLandroidx/compose/ui/text/AnnotatedString**->**(**)**
HSPLandroidx/compose/ui/text/MultiParagraph;->**(**)**
HSPLandroidx/compose/ui/text/MultiParagraphIntrinsics**->**(**)**
HSPLandroidx/compose/ui/text/ParagraphInfo;->**(**)**
HSPLandroidx/compose/ui/text/ParagraphIntrinsicInfo;->**(**)**
HSPLandroidx/compose/ui/text/ParagraphStyle;->**(**)**
HSPLandroidx/compose/ui/text/ParagraphStyleKt;->**(**)**
HSPLandroidx/compose/ui/text/ParagraphKt;->**(**)**
HSPLandroidx/compose/ui/text/PlatformTextStyle;->**(**)**
HSPLandroidx/compose/ui/text/SpanStyle;->**(**)**
HSPLandroidx/compose/ui/text/SpanStyleKt;->**(**)**
HSPLandroidx/compose/ui/text/TextLayoutInput;->**(**)**
HSPLandroidx/compose/ui/text/TextLayoutResult;->**(**)**
HSPLandroidx/compose/ui/text/TextPainter;->**(**)**
HSPLandroidx/compose/ui/text/TextRange**->**(**)**
HSPLandroidx/compose/ui/text/TextStyle**->**(**)**
HSPLandroidx/compose/ui/text/android/BoringLayoutFactory**->**(**)**
HSPLandroidx/compose/ui/text/android/CharSequenceCharacterIterator;->**(**)**
HSPLandroidx/compose/ui/text/android/LayoutIntrinsics**->**(**)**
HSPLandroidx/compose/ui/text/android/Paint**->**(**)**
HSPLandroidx/compose/ui/text/android/StaticLayoutFactory**->**(**)**
HSPLandroidx/compose/ui/text/android/StaticLayoutParams;->**(**)**
HSPLandroidx/compose/ui/text/android/TextAlignmentAdapter;->**(**)**
HSPLandroidx/compose/ui/text/android/TextLayout;->**(**)**
HSPLandroidx/compose/ui/text/android/TextLayoutKt;->**(**)**
HSPLandroidx/compose/ui/text/android/style/BaselineShiftSpan;->**(**)**
HSPLandroidx/compose/ui/text/android/style/LetterSpacingSpanPx;->**(**)**
HSPLandroidx/compose/ui/text/android/style/LineHeightSpan;->**(**)**
HSPLandroidx/compose/ui/text/android/style/TypefaceSpan;->**(**)**
HSPLandroidx/compose/ui/text/caches/LruCache;->**(**)**
HSPLandroidx/compose/ui/text/caches/SimpleArrayMap;->**(**)**
HSPLandroidx/compose/ui/text/font/AndroidFontLoader;->**(**)**
HSPLandroidx/compose/ui/text/font/AndroidFontResolveInterceptor**->**(**)**
HSPLandroidx/compose/ui/text/font/AsyncTypefaceCache;->**(**)**
HSPLandroidx/compose/ui/text/font/DefaultFontFamily;->**(**)**
HSPLandroidx/compose/ui/text/font/FileBasedFontFamily;->**(**)**
HSPLandroidx/compose/ui/text/font/FontFamily**->**(**)**
HSPLandroidx/compose/ui/text/font/FontFamilyResolverImpl**->**(**)**
HSPLandroidx/compose/ui/text/font/FontListFontFamilyTypefaceAdapter**->**(**)**
HSPLandroidx/compose/ui/text/font/FontKt;->**(**)**
HSPLandroidx/compose/ui/text/font/FontListFontFamily;->**(**)**
HSPLandroidx/compose/ui/text/font/FontMatcher;->**(**)**
HSPLandroidx/compose/ui/text/font/FontStyle;->**(**)**
HSPLandroidx/compose/ui/text/font/FontSynthesis;->**(**)**
HSPLandroidx/compose/ui/text/font/FontWeight**->**(**)**
HSPLandroidx/compose/ui/text/font/PlatformFontFamilyTypefaceAdapter;->**(**)**
HSPLandroidx/compose/ui/text/font/PlatformTypefacesApi28;->**(**)**
HSPLandroidx/compose/ui/text/font/GenericFontFamily;->**(**)**
HSPLandroidx/compose/ui/text/font/SystemFontFamily;->**(**)**
HSPLandroidx/compose/ui/text/font/TypefaceRequest**->**(**)**
HSPLandroidx/compose/ui/text/font/ResourceFont;->**(**)**
HSPLandroidx/compose/ui/text/font/SystemFontFamily;->**(**)**
HSPLandroidx/compose/ui/text/input/InputMethodManagerImpl**->**(**)**
HSPLandroidx/compose/ui/text/input/EditProcessor;->**(**)**
HSPLandroidx/compose/ui/text/input/EditingBuffer;->**(**)**
HSPLandroidx/compose/ui/text/input/ImeAction**->**(**)**
HSPLandroidx/compose/ui/text/input/ImeOptions**->**(**)**
HSPLandroidx/compose/ui/text/input/KeyboardType**->**(**)**
HSPLandroidx/compose/ui/text/input/TextFieldValue;->**(**)**
HSPLandroidx/compose/ui/text/input/TextInputService**->**(**)**
HSPLandroidx/compose/ui/text/input/TransformedText;->**(**)**
HSPLandroidx/compose/ui/text/intl/AndroidLocale**->**(**)**
HSPLandroidx/compose/ui/text/intl/Locale**->**(**)**
HSPLandroidx/compose/ui/text/platform/AndroidAccessibility**->**(**)**
HSPLandroidx/compose/ui/text/platform/AndroidParagraphIntrinsics**->**(**)**
HSPLandroidx/compose/ui/text/platform/AndroidParagraph_androidKt;->**(**)**
HSPLandroidx/compose/ui/text/platform/AndroidTextPaint;->**(**)**
HSPLandroidx/compose/ui/text/platform/DefaultImpl;->**(**)**
HSPLandroidx/compose/ui/text/platform/DispatcherKt;->**(**)**
HSPLandroidx/compose/ui/text/platform/EmojiCompatStatus;->**(**)**
HSPLandroidx/compose/ui/text/platform/ImmutableBool;->**(**)**
HSPLandroidx/compose/ui/text/platform/SynchronizedObject;->**(**)**
HSPLandroidx/compose/ui/text/platform/TypefaceDirtyTracker;->**(**)**
HSPLandroidx/compose/ui/text/platform/TypefaceAdapter;->**(**)**
HSPLandroidx/compose/ui/text/platform/TypefaceAdapterHelperMethods;->**(**)**
HSPLandroidx/compose/ui/text/platform/URLSpanCache;->**(**)**
HSPLandroidx/compose/ui/text/platform/extensions/SpanRange;->**(**)**
HSPLandroidx/compose/ui/text/platform/extensions/SpannableExtensions_androidKt;->**(**)**
HSPLandroidx/compose/ui/text/platform/extensions/TextPaintExtensions_androidKt;->**(**)**
HSPLandroidx/compose/ui/text/style/BaselineShift**->**(**)**
HSPLandroidx/compose/ui/text/style/ColorStyle;->**(**)**
HSPLandroidx/compose/ui/text/style/LineHeightStyle;->**(**)**
HSPLandroidx/compose/ui/text/style/LineHeightStyle$Alignment;->**(**)**
HSPLandroidx/compose/ui/text/style/ResolvedTextDirection;->**(**)**
HSPLandroidx/compose/ui/text/style/TextAlign;->**(**)**
HSPLandroidx/compose/ui/text/style/TextDecoration;->**(**)**
HSPLandroidx/compose/ui/text/style/TextDrawStyle**->**(**)**
HSPLandroidx/compose/ui/text/style/TextDirection;->**(**)**
HSPLandroidx/compose/ui/text/style/TextForegroundStyle**;->**(**)**
HSPLandroidx/compose/ui/text/style/TextGeometricTransform;->**(**)**
HSPLandroidx/compose/ui/text/style/TextIndent;->**(**)**
HSPLandroidx/compose/ui/text/style/TextMotion;->**(**)**

Landroidx/compose/ui/text/**;

#
# We rely heavily on some text methods in kotlin stdlib, so makes sense to include them here
HSPLkotlin/text/CharsKt__CharJVMKt;->isWhitespace(C)Z
HSPLkotlin/text/MatcherMatchResult$groups$1;-><init>(Lkotlin/text/MatcherMatchResult;)V
HSPLkotlin/text/MatcherMatchResult;-><init>(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)V
HSPLkotlin/text/MatcherMatchResult;->getMatchResult()Ljava/util/regex/MatchResult;
HSPLkotlin/text/MatcherMatchResult;->getRange()Lkotlin/ranges/IntRange;
HSPLkotlin/text/MatcherMatchResult;->getValue()Ljava/lang/String;
HSPLkotlin/text/MatcherMatchResult;->next()Lkotlin/text/MatchResult;
HSPLkotlin/text/Regex$Companion;-><init>()V
HSPLkotlin/text/Regex$Companion;-><init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
HSPLkotlin/text/Regex$findAll$1;-><init>(Lkotlin/text/Regex;Ljava/lang/CharSequence;I)V
HSPLkotlin/text/Regex$findAll$1;->invoke()Ljava/lang/Object;
HSPLkotlin/text/Regex$findAll$1;->invoke()Lkotlin/text/MatchResult;
HSPLkotlin/text/Regex$findAll$2;-><init>()V
HSPLkotlin/text/Regex$findAll$2;->invoke(Ljava/lang/Object;)Ljava/lang/Object;
HSPLkotlin/text/Regex$findAll$2;->invoke(Lkotlin/text/MatchResult;)Lkotlin/text/MatchResult;
HSPLkotlin/text/Regex;-><init>(Ljava/lang/String;)V
HSPLkotlin/text/Regex;-><init>(Ljava/util/regex/Pattern;)V
HSPLkotlin/text/Regex;->find(Ljava/lang/CharSequence;I)Lkotlin/text/MatchResult;
HSPLkotlin/text/Regex;->findAll$default(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Lkotlin/sequences/Sequence;
HSPLkotlin/text/Regex;->findAll(Ljava/lang/CharSequence;I)Lkotlin/sequences/Sequence;
HSPLkotlin/text/RegexKt;->access$findNext(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;
HSPLkotlin/text/RegexKt;->access$range(Ljava/util/regex/MatchResult;)Lkotlin/ranges/IntRange;
HSPLkotlin/text/RegexKt;->findNext(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;
HSPLkotlin/text/RegexKt;->range(Ljava/util/regex/MatchResult;)Lkotlin/ranges/IntRange;
HSPLkotlin/text/StringsKt__StringsJVMKt;->endsWith$default(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z
HSPLkotlin/text/StringsKt__StringsJVMKt;->endsWith(Ljava/lang/String;Ljava/lang/String;Z)Z
HSPLkotlin/text/StringsKt__StringsJVMKt;->isBlank(Ljava/lang/CharSequence;)Z
HSPLkotlin/text/StringsKt__StringsJVMKt;->repeat(Ljava/lang/CharSequence;I)Ljava/lang/String;
HSPLkotlin/text/StringsKt__StringsKt;->endsWith$default(Ljava/lang/CharSequence;Ljava/lang/CharSequence;ZILjava/lang/Object;)Z
HSPLkotlin/text/StringsKt__StringsKt;->endsWith(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Z)Z
HSPLkotlin/text/StringsKt__StringsKt;->getIndices(Ljava/lang/CharSequence;)Lkotlin/ranges/IntRange;
HSPLkotlin/text/StringsKt__StringsKt;->getLastIndex(Ljava/lang/CharSequence;)I
HSPLkotlin/text/StringsKt__StringsKt;->lastIndexOf$default(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I
HSPLkotlin/text/StringsKt__StringsKt;->lastIndexOf(Ljava/lang/CharSequence;CIZ)I
HSPLkotlin/text/StringsKt__StringsKt;->substring(Ljava/lang/String;Lkotlin/ranges/IntRange;)Ljava/lang/String;
HSPLkotlin/text/StringsKt__StringsKt;->substringAfterLast$default(Ljava/lang/String;CLjava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
HSPLkotlin/text/StringsKt__StringsKt;->substringAfterLast(Ljava/lang/String;CLjava/lang/String;)Ljava/lang/String;
HSPLkotlin/text/StringsKt__StringsKt;->trim(Ljava/lang/String;[C)Ljava/lang/String;
HSPLkotlin/text/StringsKt___StringsKt;->first(Ljava/lang/CharSequence;)C
HSPLkotlin/text/StringsKt___StringsKt;->slice(Ljava/lang/String;Lkotlin/ranges/IntRange;)Ljava/lang/String;
