/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.AndroidXComposePlugin
import androidx.build.LibraryGroups
import androidx.build.LibraryType
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXComposePlugin")
}

AndroidXComposePlugin.applyAndConfigureKotlinPlugin(project)

if(!AndroidXComposePlugin.isMultiplatformEnabled(project)) {
    dependencies {
        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block below
         */

        api("androidx.annotation:annotation:1.1.0")

        implementation("androidx.compose.runtime:runtime:1.1.0-rc01")
        implementation(project(":compose:ui:ui-util"))
        implementation(libs.kotlinStdlib)

        testImplementation(libs.junit)
        testImplementation(libs.truth)
        testImplementation(libs.kotlinTest)
    }
}

if(AndroidXComposePlugin.isMultiplatformEnabled(project)) {
    androidXComposeMultiplatform {
        android()
        desktop()
    }

    kotlin {
        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block above
         */
        sourceSets {
            commonMain.dependencies {
                implementation(libs.kotlinStdlibCommon)

                implementation(project(":compose:runtime:runtime"))
                implementation(project(":compose:ui:ui-util"))
            }
            jvmMain.dependencies {
                implementation(libs.kotlinStdlib)
            }
            androidMain.dependencies {
                api("androidx.annotation:annotation:1.1.0")
            }
            commonTest.dependencies {
                implementation(kotlin("test-junit"))
            }
        }
    }
}

androidx {
    name = "Compose Geometry"
    type = LibraryType.PUBLISHED_LIBRARY
    mavenGroup = LibraryGroups.Compose.UI
    inceptionYear = "2020"
    description = "Compose classes related to dimensions without units"
    legacyDisableKotlinStrictApiMode = true
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += ["-XXLanguage:+InlineClasses"]
    }
}
