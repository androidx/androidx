/*
 * Copyright 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import androidx.build.AndroidXComposePlugin
import androidx.build.LibraryType
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXComposePlugin")
}

AndroidXComposePlugin.applyAndConfigureKotlinPlugin(project)

if(!AndroidXComposePlugin.isMultiplatformEnabled(project)) {

    dependencies {
        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block below
         */

        implementation(libs.kotlinStdlib)

        api "androidx.annotation:annotation:1.1.0"

        api("androidx.compose.runtime:runtime:1.2.0")
        api(project(":compose:ui:ui"))

        androidTestImplementation project(":compose:ui:ui-test-junit4")

        androidTestImplementation(libs.junit)
        androidTestImplementation(libs.testCore)
        androidTestImplementation(libs.testRunner)
        androidTestImplementation(libs.testRules)

        androidTestImplementation(libs.truth)
        androidTestImplementation(project(":compose:foundation:foundation-layout"))
        androidTestImplementation(project(":compose:foundation:foundation"))
        androidTestImplementation(project(":compose:material:material"))
        androidTestImplementation("androidx.activity:activity-compose:1.3.1")
    }
}

if(AndroidXComposePlugin.isMultiplatformEnabled(project)) {
    androidXComposeMultiplatform {
        android()
        desktop()
    }

    kotlin {

        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block above
         */
        sourceSets {
            commonMain.dependencies {

                implementation(libs.kotlinStdlib)

                api "androidx.annotation:annotation:1.1.0"

                api("androidx.compose.runtime:runtime:1.2.0")
                api(project(":compose:ui:ui"))
            }
            jvmMain.dependencies {
                implementation(libs.kotlinStdlib)
            }
            androidMain.dependencies {
                api("androidx.annotation:annotation:1.1.0")
            }

            commonTest.dependencies {
                implementation(kotlin("test-junit"))
            }

            // TODO(b/214407011): These dependencies leak into instrumented tests as well. If you
            //  need to add Robolectric (which must be kept out of androidAndroidTest), use a top
            //  level dependencies block instead:
            //  `dependencies { testImplementation(libs.robolectric) }`
            androidTest.dependencies {
                implementation(libs.truth)
            }
            androidAndroidTest.dependencies {
                implementation(project(":compose:ui:ui-test-junit4"))

                implementation(libs.junit)
                implementation(libs.testCore)
                implementation(libs.testRunner)
                implementation(libs.testRules)

                implementation(libs.truth)
                implementation(project(":compose:foundation:foundation-layout"))
                implementation(project(":compose:foundation:foundation"))
                implementation(project(":compose:material:material"))
                implementation("androidx.activity:activity-compose:1.3.1")
            }
        }
    }
    dependencies {
        samples(projectOrArtifact(":compose:ui:ui-unit:ui-unit-samples"))
    }
}

androidx {
    name = "Compose Tooling Data"
    type = LibraryType.PUBLISHED_LIBRARY
    mavenGroup = LibraryGroups.COMPOSE_UI
    inceptionYear = "2021"
    description = "Compose tooling library data. This library provides data about compose" +
            " for different tooling purposes."
    legacyDisableKotlinStrictApiMode = true
}

android {
    namespace "androidx.compose.ui.tooling.data"
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }
}
