// Signature format: 4.0
package androidx.compose.material3.windowsizeclass {

  public final class AndroidWindowSizeClass_androidKt {
    method @SuppressCompatibility @androidx.compose.material3.windowsizeclass.ExperimentalMaterial3WindowSizeClassApi @androidx.compose.runtime.Composable public static androidx.compose.material3.windowsizeclass.WindowSizeClass calculateWindowSizeClass(android.app.Activity activity);
  }

  @SuppressCompatibility @kotlin.RequiresOptIn(message="This material3-window-size-class API is experimental and is likely to change or to " + "be removed in the future.") @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) public @interface ExperimentalMaterial3WindowSizeClassApi {
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class WindowHeightSizeClass implements java.lang.Comparable<androidx.compose.material3.windowsizeclass.WindowHeightSizeClass> {
    method public operator int compareTo(int other);
    field public static final androidx.compose.material3.windowsizeclass.WindowHeightSizeClass.Companion Companion;
  }

  public static final class WindowHeightSizeClass.Companion {
    method public java.util.Set<androidx.compose.material3.windowsizeclass.WindowHeightSizeClass> getAllSizeClasses();
    method public int getCompact();
    method public java.util.Set<androidx.compose.material3.windowsizeclass.WindowHeightSizeClass> getDefaultSizeClasses();
    method public int getExpanded();
    method public int getMedium();
    property public final java.util.Set<androidx.compose.material3.windowsizeclass.WindowHeightSizeClass> AllSizeClasses;
    property public final int Compact;
    property public final java.util.Set<androidx.compose.material3.windowsizeclass.WindowHeightSizeClass> DefaultSizeClasses;
    property public final int Expanded;
    property public final int Medium;
  }

  @androidx.compose.runtime.Immutable public final class WindowSizeClass {
    method public int getHeightSizeClass();
    method public int getWidthSizeClass();
    property public final int heightSizeClass;
    property public final int widthSizeClass;
    field public static final androidx.compose.material3.windowsizeclass.WindowSizeClass.Companion Companion;
  }

  public static final class WindowSizeClass.Companion {
    method @SuppressCompatibility @androidx.compose.material3.windowsizeclass.ExperimentalMaterial3WindowSizeClassApi public androidx.compose.material3.windowsizeclass.WindowSizeClass calculateFromSize(long size, optional java.util.Set<androidx.compose.material3.windowsizeclass.WindowWidthSizeClass> supportedWidthSizeClasses, optional java.util.Set<androidx.compose.material3.windowsizeclass.WindowHeightSizeClass> supportedHeightSizeClasses);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class WindowWidthSizeClass implements java.lang.Comparable<androidx.compose.material3.windowsizeclass.WindowWidthSizeClass> {
    method public operator int compareTo(int other);
    field public static final androidx.compose.material3.windowsizeclass.WindowWidthSizeClass.Companion Companion;
  }

  public static final class WindowWidthSizeClass.Companion {
    method public java.util.Set<androidx.compose.material3.windowsizeclass.WindowWidthSizeClass> getAllSizeClasses();
    method public int getCompact();
    method public java.util.Set<androidx.compose.material3.windowsizeclass.WindowWidthSizeClass> getDefaultSizeClasses();
    method public int getExpanded();
    method public int getMedium();
    property public final java.util.Set<androidx.compose.material3.windowsizeclass.WindowWidthSizeClass> AllSizeClasses;
    property public final int Compact;
    property public final java.util.Set<androidx.compose.material3.windowsizeclass.WindowWidthSizeClass> DefaultSizeClasses;
    property public final int Expanded;
    property public final int Medium;
  }

}

