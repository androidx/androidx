/*
 * Copyright 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import androidx.build.AndroidXComposePlugin
import androidx.build.LibraryGroups
import androidx.build.LibraryType

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXComposePlugin")
}

AndroidXComposePlugin.applyAndConfigureKotlinPlugin(project)

dependencies {
    kotlinPlugin(project(":compose:compiler:compiler"))

    if(!AndroidXComposePlugin.isMultiplatformEnabled(project)) {
        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block below
         */

        api("androidx.annotation:annotation:1.1.0")
        api(project(":compose:animation:animation-core"))
        api("androidx.compose.foundation:foundation-layout:1.0.0")
        api("androidx.compose.runtime:runtime:1.1.0-rc01")
        api("androidx.compose.ui:ui:1.0.0")
        api("androidx.compose.ui:ui-geometry:1.0.0")

        implementation("androidx.compose.ui:ui-util:1.0.0")
        implementation(libs.kotlinStdlibCommon)

        testImplementation(libs.testRules)
        testImplementation(libs.testRunner)
        testImplementation(libs.junit)

        androidTestImplementation("androidx.compose.foundation:foundation:1.0.0")
        androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.0.0")
        androidTestImplementation(project(":compose:test-utils"))
        androidTestImplementation(libs.testRules)
        androidTestImplementation(libs.testRunner)
        androidTestImplementation(libs.junit)

        lintPublish project(":compose:animation:animation-lint")

        samples(project(":compose:animation:animation:animation-samples"))
    }
}

if(AndroidXComposePlugin.isMultiplatformEnabled(project)) {
    androidXComposeMultiplatform {
        android()
        desktop()
    }

    kotlin {
        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block above
         */
        sourceSets {
            commonMain.dependencies {
                implementation(libs.kotlinStdlibCommon)

                api(project(":compose:animation:animation-core"))
                api(project(":compose:foundation:foundation-layout"))
                api(project(":compose:runtime:runtime"))
                api(project(":compose:ui:ui"))
                api(project(":compose:ui:ui-geometry"))

                implementation(project(":compose:ui:ui-util"))
            }

            androidMain.dependencies {
                api("androidx.annotation:annotation:1.1.0")
            }

            desktopMain.dependencies {
                implementation(libs.kotlinStdlib)
            }

            androidTest.dependencies {
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.junit)
            }

            androidAndroidTest.dependencies {
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.junit)
                implementation(project(":compose:foundation:foundation"))
                implementation(project(":compose:ui:ui-test-junit4"))
                implementation(project(":compose:test-utils"))
            }
        }
    }
    dependencies {
        samples(project(":compose:animation:animation:animation-samples"))
    }
}

androidx {
    name = "Compose Animation"
    type = LibraryType.PUBLISHED_LIBRARY
    mavenGroup = LibraryGroups.Compose.ANIMATION
    inceptionYear = "2019"
    description = "Compose animation library"
    legacyDisableKotlinStrictApiMode = true
}
