/*
 * Copyright (C) 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.Publish

plugins {
    id('AndroidXPlugin')
    id('com.android.library')
}

android {
    buildTypes.all {
        consumerProguardFiles "proguard-rules.pro"
    }
    namespace "androidx.appsearch"
}

dependencies {
    api('androidx.annotation:annotation:1.1.0')
    api(libs.guavaListenableFuture)

    implementation('androidx.collection:collection:1.2.0')
    implementation('androidx.concurrent:concurrent-futures:1.0.0')
    implementation('androidx.core:core:1.7.0')

    androidTestAnnotationProcessor project(':appsearch:appsearch-compiler')
    androidTestImplementation project(':appsearch:appsearch-local-storage')
    androidTestImplementation project(':appsearch:appsearch-platform-storage')
    androidTestImplementation project(':appsearch:appsearch-test-util')
    androidTestImplementation(libs.testCore)
    androidTestImplementation(libs.testRules)
    androidTestImplementation(libs.truth)
    //TODO(b/149787478) upgrade and link to Dependencies.kt
    androidTestImplementation(libs.junit)
    // This dependency is unused by the test implementation, but it's here to validate that
    // icing's jarjar'ing of the Protobuf_lite doesn't conflict with external dependencies.
    androidTestImplementation(libs.protobufLite)
}

// Create a jar for use by appsearch-compiler:test
android.libraryVariants.all { variant ->
    def name = variant.name
    def suffix = name.capitalize()
    project.tasks.create(name: "jar${suffix}", type: Jar) {
        dependsOn variant.javaCompileProvider.get()
        from variant.javaCompileProvider.get().destinationDirectory
        destinationDirectory.set(new File(project.buildDir, "libJar"))
    }
}

androidx {
    name = 'AndroidX AppSearch'
    publish = Publish.SNAPSHOT_AND_RELEASE
    mavenGroup = LibraryGroups.APPSEARCH
    inceptionYear = '2019'
    description = 'AndroidX AppSearch - App Indexing'
}
