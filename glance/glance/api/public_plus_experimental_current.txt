// Signature format: 4.0
package androidx.glance {

  @androidx.glance.GlanceInternalApi public final class Applier extends androidx.compose.runtime.AbstractApplier<androidx.glance.Emittable> {
    ctor public Applier(androidx.glance.EmittableWithChildren root);
    method public void insertBottomUp(int index, androidx.glance.Emittable instance);
    method public void insertTopDown(int index, androidx.glance.Emittable instance);
    method public void move(int from, int to, int count);
    method protected void onClear();
    method public void remove(int index, int count);
  }

  public final class CombinedModifier implements androidx.glance.Modifier {
    ctor public CombinedModifier(androidx.glance.Modifier outer, androidx.glance.Modifier inner);
    method public boolean all(kotlin.jvm.functions.Function1<? super androidx.glance.Modifier.Element,java.lang.Boolean> predicate);
    method public boolean any(kotlin.jvm.functions.Function1<? super androidx.glance.Modifier.Element,java.lang.Boolean> predicate);
    method public <R> R! foldIn(R? initial, kotlin.jvm.functions.Function2<? super R,? super androidx.glance.Modifier.Element,? extends R> operation);
    method public <R> R! foldOut(R? initial, kotlin.jvm.functions.Function2<? super androidx.glance.Modifier.Element,? super R,? extends R> operation);
  }

  @androidx.glance.GlanceInternalApi public interface Emittable {
    method public androidx.glance.Modifier getModifier();
    method public void setModifier(androidx.glance.Modifier modifier);
    property public abstract androidx.glance.Modifier modifier;
  }

  @androidx.glance.GlanceInternalApi public abstract class EmittableWithChildren implements androidx.glance.Emittable {
    ctor public EmittableWithChildren();
    method protected final String childrenToString();
    method public final java.util.List<androidx.glance.Emittable> getChildren();
    property public final java.util.List<androidx.glance.Emittable> children;
  }

  @kotlin.RequiresOptIn(message="This API is used for the implementation of androidx.glance, and should " + "not be used by API consumers.") @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention) @kotlin.annotation.Target(allowedTargets={kotlin.annotation.AnnotationTarget, kotlin.annotation.AnnotationTarget}) public @interface GlanceInternalApi {
  }

  @androidx.compose.runtime.Stable public interface Modifier {
    method public boolean all(kotlin.jvm.functions.Function1<? super androidx.glance.Modifier.Element,java.lang.Boolean> predicate);
    method public boolean any(kotlin.jvm.functions.Function1<? super androidx.glance.Modifier.Element,java.lang.Boolean> predicate);
    method public <R> R! foldIn(R? initial, kotlin.jvm.functions.Function2<? super R,? super androidx.glance.Modifier.Element,? extends R> operation);
    method public <R> R! foldOut(R? initial, kotlin.jvm.functions.Function2<? super androidx.glance.Modifier.Element,? super R,? extends R> operation);
    method public default infix androidx.glance.Modifier then(androidx.glance.Modifier other);
    field public static final androidx.glance.Modifier.Companion Companion;
  }

  public static final class Modifier.Companion implements androidx.glance.Modifier {
    method public boolean all(kotlin.jvm.functions.Function1<? super androidx.glance.Modifier.Element,java.lang.Boolean> predicate);
    method public boolean any(kotlin.jvm.functions.Function1<? super androidx.glance.Modifier.Element,java.lang.Boolean> predicate);
    method public <R> R! foldIn(R? initial, kotlin.jvm.functions.Function2<? super R,? super androidx.glance.Modifier.Element,? extends R> operation);
    method public <R> R! foldOut(R? initial, kotlin.jvm.functions.Function2<? super androidx.glance.Modifier.Element,? super R,? extends R> operation);
  }

  public static interface Modifier.Element extends androidx.glance.Modifier {
    method public default boolean all(kotlin.jvm.functions.Function1<? super androidx.glance.Modifier.Element,java.lang.Boolean> predicate);
    method public default boolean any(kotlin.jvm.functions.Function1<? super androidx.glance.Modifier.Element,java.lang.Boolean> predicate);
    method public default <R> R! foldIn(R? initial, kotlin.jvm.functions.Function2<? super R,? super androidx.glance.Modifier.Element,? extends R> operation);
    method public default <R> R! foldOut(R? initial, kotlin.jvm.functions.Function2<? super androidx.glance.Modifier.Element,? super R,? extends R> operation);
  }

}

package androidx.glance.layout {

  public final class Alignment {
    ctor public Alignment(int horizontal, int vertical);
    method public int getHorizontal();
    method public int getVertical();
    property public final int horizontal;
    property public final int vertical;
    field public static final androidx.glance.layout.Alignment.Companion Companion;
  }

  public static final class Alignment.Companion {
    method public int getBottom();
    method public androidx.glance.layout.Alignment getBottomCenter();
    method public androidx.glance.layout.Alignment getBottomEnd();
    method public androidx.glance.layout.Alignment getBottomStart();
    method public androidx.glance.layout.Alignment getCenter();
    method public androidx.glance.layout.Alignment getCenterEnd();
    method public int getCenterHorizontally();
    method public androidx.glance.layout.Alignment getCenterStart();
    method public int getCenterVertically();
    method public int getEnd();
    method public int getStart();
    method public int getTop();
    method public androidx.glance.layout.Alignment getTopCenter();
    method public androidx.glance.layout.Alignment getTopEnd();
    method public androidx.glance.layout.Alignment getTopStart();
    property public final int Bottom;
    property public final androidx.glance.layout.Alignment BottomCenter;
    property public final androidx.glance.layout.Alignment BottomEnd;
    property public final androidx.glance.layout.Alignment BottomStart;
    property public final androidx.glance.layout.Alignment Center;
    property public final androidx.glance.layout.Alignment CenterEnd;
    property public final int CenterHorizontally;
    property public final androidx.glance.layout.Alignment CenterStart;
    property public final int CenterVertically;
    property public final int End;
    property public final int Start;
    property public final int Top;
    property public final androidx.glance.layout.Alignment TopCenter;
    property public final androidx.glance.layout.Alignment TopEnd;
    property public final androidx.glance.layout.Alignment TopStart;
  }

  public static final inline class Alignment.Horizontal {
    ctor public Alignment.Horizontal();
  }

  public static final class Alignment.Horizontal.Companion {
    method public int getCenterHorizontally();
    method public int getEnd();
    method public int getStart();
    property public final int CenterHorizontally;
    property public final int End;
    property public final int Start;
  }

  public static final inline class Alignment.Vertical {
    ctor public Alignment.Vertical();
  }

  public static final class Alignment.Vertical.Companion {
    method public int getBottom();
    method public int getCenterVertically();
    method public int getTop();
    property public final int Bottom;
    property public final int CenterVertically;
    property public final int Top;
  }

  public final class BoxKt {
    method @androidx.compose.runtime.Composable public static void Box(optional androidx.glance.Modifier modifier, optional androidx.glance.layout.Alignment contentAlignment, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  public final class ColumnKt {
    method @androidx.compose.runtime.Composable public static void Column(optional androidx.glance.Modifier modifier, optional int verticalAlignment, optional int horizontalAlignment, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  @androidx.glance.GlanceInternalApi public abstract sealed class Dimension {
  }

  public static final class Dimension.Dp extends androidx.glance.layout.Dimension {
    ctor public Dimension.Dp(float dp);
    method public float getDp();
    property public final float dp;
  }

  public static final class Dimension.Expand extends androidx.glance.layout.Dimension {
    field public static final androidx.glance.layout.Dimension.Expand INSTANCE;
  }

  public static final class Dimension.Wrap extends androidx.glance.layout.Dimension {
    field public static final androidx.glance.layout.Dimension.Wrap INSTANCE;
  }

  public final class DimensionKt {
    method public static androidx.glance.Modifier expandHeight(androidx.glance.Modifier);
    method public static androidx.glance.Modifier expandWidth(androidx.glance.Modifier);
    method public static androidx.glance.Modifier height(androidx.glance.Modifier, float height);
    method public static androidx.glance.Modifier size(androidx.glance.Modifier, float size);
    method public static androidx.glance.Modifier size(androidx.glance.Modifier, float width, float height);
    method public static androidx.glance.Modifier width(androidx.glance.Modifier, float width);
    method public static androidx.glance.Modifier wrapHeight(androidx.glance.Modifier);
    method public static androidx.glance.Modifier wrapWidth(androidx.glance.Modifier);
  }

  @androidx.glance.GlanceInternalApi public final class EmittableBox extends androidx.glance.EmittableWithChildren {
    ctor public EmittableBox();
    method public androidx.glance.layout.Alignment getContentAlignment();
    method public androidx.glance.Modifier getModifier();
    method public void setContentAlignment(androidx.glance.layout.Alignment contentAlignment);
    method public void setModifier(androidx.glance.Modifier modifier);
    property public final androidx.glance.layout.Alignment contentAlignment;
    property public androidx.glance.Modifier modifier;
  }

  @androidx.glance.GlanceInternalApi public final class EmittableColumn extends androidx.glance.EmittableWithChildren {
    ctor public EmittableColumn();
    method public int getHorizontalAlignment();
    method public androidx.glance.Modifier getModifier();
    method public int getVerticalAlignment();
    method public void setHorizontalAlignment(int horizontalAlignment);
    method public void setModifier(androidx.glance.Modifier modifier);
    method public void setVerticalAlignment(int verticalAlignment);
    property public final int horizontalAlignment;
    property public androidx.glance.Modifier modifier;
    property public final int verticalAlignment;
  }

  @androidx.glance.GlanceInternalApi public final class EmittableRow extends androidx.glance.EmittableWithChildren {
    ctor public EmittableRow();
    method public int getHorizontalAlignment();
    method public androidx.glance.Modifier getModifier();
    method public int getVerticalAlignment();
    method public void setHorizontalAlignment(int horizontalAlignment);
    method public void setModifier(androidx.glance.Modifier modifier);
    method public void setVerticalAlignment(int verticalAlignment);
    property public final int horizontalAlignment;
    property public androidx.glance.Modifier modifier;
    property public final int verticalAlignment;
  }

  @androidx.glance.GlanceInternalApi public final class HeightModifier implements androidx.glance.Modifier.Element {
    ctor public HeightModifier(androidx.glance.layout.Dimension height);
    method public androidx.glance.layout.Dimension getHeight();
    property public final androidx.glance.layout.Dimension height;
  }

  public final class PaddingKt {
    method public static androidx.glance.Modifier absolutePadding(androidx.glance.Modifier, optional float left, optional float top, optional float right, optional float bottom);
    method public static androidx.glance.Modifier padding(androidx.glance.Modifier, optional float start, optional float top, optional float end, optional float bottom);
    method public static androidx.glance.Modifier padding(androidx.glance.Modifier, optional float horizontal, optional float vertical);
    method public static androidx.glance.Modifier padding(androidx.glance.Modifier, float all);
  }

  @androidx.glance.GlanceInternalApi public final class PaddingModifier implements androidx.glance.Modifier.Element {
    ctor public PaddingModifier(optional float start, optional float top, optional float end, optional float bottom, boolean rtlAware);
    method public float getBottom();
    method public float getEnd();
    method public boolean getRtlAware();
    method public float getStart();
    method public float getTop();
    property public final float bottom;
    property public final float end;
    property public final boolean rtlAware;
    property public final float start;
    property public final float top;
  }

  public final class RowKt {
    method @androidx.compose.runtime.Composable public static void Row(optional androidx.glance.Modifier modifier, optional int horizontalAlignment, optional int verticalAlignment, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  @androidx.glance.GlanceInternalApi public final class WidthModifier implements androidx.glance.Modifier.Element {
    ctor public WidthModifier(androidx.glance.layout.Dimension width);
    method public androidx.glance.layout.Dimension getWidth();
    property public final androidx.glance.layout.Dimension width;
  }

}

package androidx.glance.unit {

  public final inline class Dp implements java.lang.Comparable<androidx.glance.unit.Dp> {
    ctor public Dp();
    method public operator int compareTo(float other);
    method public float getValue();
    property public final float value;
  }

  public final class DpKt {
    method public static inline float getDp(int);
    method public static inline float getDp(double);
    method public static inline float getDp(float);
    method public static float max(float a, float b);
    method public static float min(float a, float b);
    method public static operator float times(float, float other);
    method public static operator float times(double, float other);
    method public static operator float times(int, float other);
  }

  @androidx.compose.runtime.Immutable public final class DpSize {
    ctor public DpSize(float width, float height);
    method @androidx.compose.runtime.Stable public operator float component1();
    method @androidx.compose.runtime.Stable public operator float component2();
    method public androidx.glance.unit.DpSize copy(optional float width, optional float height);
    method @androidx.compose.runtime.Stable public operator androidx.glance.unit.DpSize div(int other);
    method @androidx.compose.runtime.Stable public operator androidx.glance.unit.DpSize div(float other);
    method public float getHeight();
    method public float getWidth();
    method @androidx.compose.runtime.Stable public operator androidx.glance.unit.DpSize minus(androidx.glance.unit.DpSize other);
    method @androidx.compose.runtime.Stable public operator androidx.glance.unit.DpSize plus(androidx.glance.unit.DpSize other);
    method @androidx.compose.runtime.Stable public operator androidx.glance.unit.DpSize times(int other);
    method @androidx.compose.runtime.Stable public operator androidx.glance.unit.DpSize times(float other);
    property public final float height;
    property public final float width;
    field public static final androidx.glance.unit.DpSize.Companion Companion;
  }

  public static final class DpSize.Companion {
    method public androidx.glance.unit.DpSize getZero();
    property public final androidx.glance.unit.DpSize Zero;
  }

  public final class DpSizeKt {
    method @androidx.compose.runtime.Stable public static operator androidx.glance.unit.DpSize times(int, androidx.glance.unit.DpSize size);
    method @androidx.compose.runtime.Stable public static operator androidx.glance.unit.DpSize times(float, androidx.glance.unit.DpSize size);
  }

}

