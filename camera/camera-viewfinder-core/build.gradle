/*
 * Copyright (C) 2023 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */
import androidx.build.LibraryType
import androidx.build.Publish

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("org.jetbrains.kotlin.android")
}

dependencies {
    api("androidx.annotation:annotation:1.2.0")
    implementation("androidx.annotation:annotation-experimental:1.4.0")
    implementation(libs.guavaListenableFuture)
    implementation("androidx.core:core:1.7.0")
    implementation("androidx.concurrent:concurrent-futures:1.1.0")
    implementation("androidx.concurrent:concurrent-futures-ktx:1.1.0")
    implementation(libs.autoValueAnnotations)
    implementation("androidx.appcompat:appcompat:1.1.0")
    implementation("androidx.test.espresso:espresso-idling-resource:3.1.0")
    implementation(libs.kotlinCoroutinesCore)
    implementation(libs.kotlinCoroutinesAndroid)

    annotationProcessor(libs.autoValue)
}

android {
    namespace "androidx.camera.viewfinder.core"
}

androidx {
    name = "Camera ViewFinder Core"
    type = LibraryType.PUBLISHED_LIBRARY
    publish = Publish.SNAPSHOT_AND_RELEASE
    inceptionYear = "2023"
    description = "Core dependencies for ViewFinder"
    metalavaK2UastEnabled = true
    samples(project(":camera:camera-viewfinder-core:camera-viewfinder-core-samples"))
}
