/*
 * Copyright (C) 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("AndroidXPlugin")
    id("com.android.application")
    id("kotlin-android")
    id("AndroidXComposePlugin")
}

apply(from: "../../camera-view/dependencies.gradle")

android {
    defaultConfig {
        applicationId "androidx.camera.integration.view"
        minSdkVersion 21
        versionCode 1
        multiDexEnabled true
    }

    sourceSets {
        main.manifest.srcFile "src/main/AndroidManifest.xml"
        main.java.srcDirs = ["src/main/java"]
        main.java.excludes = ["**/build/**"]
        main.java.includes = ["**/*.java"]
        main.res.srcDirs = ["src/main/res"]
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro")
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // Internal library
    implementation("androidx.camera:camera-camera2:${VIEW_ATOMIC_GROUP_PINNED_VER}")
    implementation("androidx.camera:camera-lifecycle:${VIEW_ATOMIC_GROUP_PINNED_VER}")
    implementation("androidx.lifecycle:lifecycle-runtime:2.3.1")
    implementation(projectOrArtifact(":camera:camera-view"))
    implementation(libs.guavaAndroid)
    implementation("androidx.exifinterface:exifinterface:1.3.2")
    // old version of common-java8 conflicts with newer version, because both have
    // DefaultLifecycleEventObserver.
    // Outside of androidx this is resolved via constraint added to lifecycle-common,
    // but it doesn't work in androidx.
    implementation(projectOrArtifact(":lifecycle:lifecycle-common-java8"))
    compileOnly(libs.kotlinCompiler)

    // Lifecycle and LiveData
    implementation("androidx.lifecycle:lifecycle-livedata:2.2.0")

    // Android Support Library
    implementation("androidx.appcompat:appcompat:1.3.0")

    // Compose UI
    kotlinPlugin(projectOrArtifact(":compose:compiler:compiler"))
    implementation(projectOrArtifact(":compose:runtime:runtime"))
    implementation("androidx.compose.ui:ui:1.0.0-rc02")
    implementation("androidx.compose.material:material:1.0.0-rc02")
    implementation("androidx.compose.ui:ui-tooling:1.0.0-rc02")
    implementation("androidx.activity:activity-compose:1.3.0-beta02")

    // Testing framework
    androidTestImplementation(libs.testExtJunit)
    androidTestImplementation(libs.testCore)
    androidTestImplementation(libs.testRunner)
    androidTestImplementation(libs.testRules)
    androidTestImplementation(libs.testUiautomator)
    androidTestImplementation(libs.espressoCore)
    androidTestImplementation("androidx.lifecycle:lifecycle-runtime-testing:2.3.1")
    androidTestImplementation("androidx.lifecycle:lifecycle-runtime:2.3.1")
    androidTestImplementation("androidx.lifecycle:lifecycle-livedata-ktx:2.2.0")
    androidTestImplementation(libs.truth)
    debugImplementation(libs.testCore)
    debugImplementation("androidx.fragment:fragment-testing:1.2.3")
    // camera-testing added as 'implementation' dependency to include camera-testing activity in APK
    debugImplementation(projectOrArtifact(":camera:camera-testing")) {
        // Ensure camera-testing does not pull in camera-core project dependency which will
        // override pinned dependency.
        exclude(group:"androidx.camera", module:"camera-core")
    }
}
