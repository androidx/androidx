<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.7.0-alpha02" type="baseline" client="gradle" dependencies="false" name="AGP (8.7.0-alpha02)" variant="all" version="8.7.0-alpha02">

    <issue
        id="NewApi"
        message="Call requires API level 24, or core library desugaring (current min is 21): `java.lang.Iterable#forEach`"
        errorLine1="                callbacks.forEach { callback -> addCaptureCallback(callback, executor) }"
        errorLine2="                          ~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/impl/CameraCallbackMap.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 26 (current min is 21): `java.util.regex.Matcher#start` (called from `kotlin.text.MatchGroupCollection#get(String)`)"
        errorLine1="        val quirkSettings = QuirkSettingsHolder.instance().get()"
        errorLine2="                                                           ~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/compat/quirk/CameraQuirks.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        assertThat(fakeRequestControl.torchUpdateEventList.removeFirstKt()).isTrue()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        assertThat(fakeRequestControl.torchUpdateEventList.removeFirstKt()).isFalse()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        assertThat(fakeRequestControl.torchUpdateEventList.removeFirstKt()).isTrue()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        assertThat(fakeRequestControl.torchUpdateEventList.removeFirstKt()).isFalse()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        assertThat(fakeRequestControl.torchUpdateEventList.removeFirstKt()).isTrue()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        assertThat(fakeRequestControl.torchUpdateEventList.removeFirstKt()).isFalse()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 26 (current min is 21): `java.util.regex.Matcher#start` (called from `kotlin.text.MatchGroupCollection#get(String)`)"
        errorLine1="                    .get(2, TimeUnit.SECONDS)"
        errorLine2="                     ~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        assertThat(fakeRequestControl.torchUpdateEventList.removeFirstKt() == state).isTrue()"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/CapturePipelineTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 26 (current min is 21): `java.util.regex.Matcher#start` (called from `kotlin.text.MatchGroupCollection#get(String)`)"
        errorLine1="                        postviewDeferrableSurface.surface.get()!!"
        errorLine2="                                                          ~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/impl/SessionProcessorManager.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24, or core library desugaring (current min is 21): `java.lang.Iterable#forEach`"
        errorLine1="        useCasesExpectedResultMap.keys.forEach {"
        errorLine2="                                       ~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/adapter/SupportedSurfaceCombinationTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24, or core library desugaring (current min is 21): `java.lang.Iterable#forEach`"
        errorLine1="        useCasesExpectedDynamicRangeMap.keys.forEach {"
        errorLine2="                                             ~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/adapter/SupportedSurfaceCombinationTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24, or core library desugaring (current min is 21): `java.lang.Iterable#forEach`"
        errorLine1="                useCases.forEach { put(it, it.currentConfig) }"
        errorLine2="                         ~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/adapter/SupportedSurfaceCombinationTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24, or core library desugaring (current min is 21): `java.lang.Iterable#forEach`"
        errorLine1="                useCaseConfigs.forEach { put(it, supportedSizes.toList()) }"
        errorLine2="                               ~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/adapter/SupportedSurfaceCombinationTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24, or core library desugaring (current min is 21): `java.util.Map#forEach`"
        errorLine1="        streamConfigMap.forEach { (streamConfig, deferrableSurface) ->"
        errorLine2="                        ~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/config/UseCaseCameraConfig.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24, or core library desugaring (current min is 21): `java.lang.Iterable#forEach`"
        errorLine1="        deferrableSurfaces.forEach {"
        errorLine2="                           ~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/config/UseCaseCameraConfig.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24, or core library desugaring (current min is 21): `java.lang.Iterable#forEach`"
        errorLine1="        forEach { captureConfig ->"
        errorLine2="        ~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/impl/UseCaseCameraRequestControl.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        val lastRequest = fakeCameraGraph.fakeCameraGraphSession.repeatingRequests.removeLastKt()"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/UseCaseCameraRequestControlTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="            fakeCameraGraph.fakeCameraGraphSession.repeatingRequests.removeLastKt()"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/UseCaseCameraRequestControlTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="        val lastRequest = fakeCameraGraph.fakeCameraGraphSession.repeatingRequests.removeLastKt()"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/test/java/androidx/camera/camera2/pipe/integration/impl/UseCaseCameraRequestControlTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="                removeFirstKt()"
        errorLine2="                ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/impl/UseCaseCameraState.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="                removeFirstKt()"
        errorLine2="                ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/impl/UseCaseCameraState.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 26 (current min is 21): `java.util.regex.Matcher#start` (called from `kotlin.text.MatchGroupCollection#get(String)`)"
        errorLine1="                        cameraGraph.setSurface(it.id, deferrableSurface.surface.get())"
        errorLine2="                                                                                ~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/impl/UseCaseManager.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24, or core library desugaring (current min is 21): `java.lang.Iterable#forEach`"
        errorLine1="            this@getAttachedSurfaceInfoList.forEach { useCase ->"
        errorLine2="                                            ~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/impl/UseCaseManager.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24, or core library desugaring (current min is 21): `java.lang.Iterable#forEach`"
        errorLine1="            this@getSessionSurfacesConfigs.forEach { useCase ->"
        errorLine2="                                           ~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/impl/UseCaseManager.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24, or core library desugaring (current min is 21): `java.lang.Iterable#forEach`"
        errorLine1="            forEach { useCase -> validatingBuilder.add(useCase.sessionConfig) }"
        errorLine2="            ~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/impl/UseCaseManager.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24, or core library desugaring (current min is 21): `java.lang.Iterable#forEach`"
        errorLine1="            forEach { useCase -> validatingBuilder.add(useCase.sessionConfig) }"
        errorLine2="            ~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/impl/UseCaseManager.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24, or core library desugaring (current min is 21): `java.util.Map#forEach`"
        errorLine1="                        surfaceToStreamMap.forEach {"
        errorLine2="                                           ~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/impl/UseCaseSurfaceManager.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 26 (current min is 23): `java.util.regex.Matcher#start` (called from `kotlin.text.MatchGroupCollection#get(String)`)"
        errorLine1="                        if (surface == testSessionParameters.deferrableSurface.surface.get()) {"
        errorLine2="                                                                                       ~~~">
        <location
            file="src/androidTest/java/androidx/camera/camera2/pipe/integration/UseCaseSurfaceManagerDeviceTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 26 (current min is 23): `java.util.regex.Matcher#start` (called from `kotlin.text.MatchGroupCollection#get(String)`)"
        errorLine1="                        if (surface == testSessionParameters.deferrableSurface.surface.get()) {"
        errorLine2="                                                                                       ~~~">
        <location
            file="src/androidTest/java/androidx/camera/camera2/pipe/integration/UseCaseSurfaceManagerDeviceTest.kt"/>
    </issue>

    <issue
        id="CameraXQuirksClassDetector"
        message="CameraX quirks should include this template in the javadoc:&#xA;&#xA;* &lt;p>QuirkSummary&#xA;*     Bug Id:&#xA;*     Description:&#xA;*     Device(s):"
        errorLine1="public class AspectRatioLegacyApi21Quirk : Quirk {"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/compat/quirk/AspectRatioLegacyApi21Quirk.kt"/>
    </issue>

    <issue
        id="CameraXQuirksClassDetector"
        message="CameraX quirks should include this template in the javadoc:&#xA;&#xA;* &lt;p>QuirkSummary&#xA;*     Bug Id:&#xA;*     Description:&#xA;*     Device(s):"
        errorLine1="public class ExcludedSupportedSizesQuirk : Quirk {"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/compat/quirk/ExcludedSupportedSizesQuirk.kt"/>
    </issue>

    <issue
        id="CameraXQuirksClassDetector"
        message="CameraX quirks should include this template in the javadoc:&#xA;&#xA;* &lt;p>QuirkSummary&#xA;*     Bug Id:&#xA;*     Description:&#xA;*     Device(s):"
        errorLine1="public class ExtraCroppingQuirk : Quirk {"
        errorLine2="             ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/compat/quirk/ExtraCroppingQuirk.kt"/>
    </issue>

    <issue
        id="CameraXQuirksClassDetector"
        message="CameraX quirks should include this template in the javadoc:&#xA;&#xA;* &lt;p>QuirkSummary&#xA;*     Bug Id:&#xA;*     Description:&#xA;*     Device(s):"
        errorLine1="public class ExtraSupportedSurfaceCombinationsQuirk : Quirk {"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/compat/quirk/ExtraSupportedSurfaceCombinationsQuirk.kt"/>
    </issue>

    <issue
        id="CameraXQuirksClassDetector"
        message="CameraX quirks should include this template in the javadoc:&#xA;&#xA;* &lt;p>QuirkSummary&#xA;*     Bug Id:&#xA;*     Description:&#xA;*     Device(s):"
        errorLine1="public class Nexus4AndroidLTargetAspectRatioQuirk : Quirk {"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/camera2/pipe/integration/compat/quirk/Nexus4AndroidLTargetAspectRatioQuirk.kt"/>
    </issue>

</issues>
