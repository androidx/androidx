<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.3.0-beta01" type="baseline" client="gradle" dependencies="false" name="AGP (8.3.0-beta01)" variant="all" version="8.3.0-beta01">

    <issue
        id="RestrictedApiAndroidX"
        message="ListContent can only be accessed from within the same library (androidx.slice:slice-view)"
        errorLine1="        ListContent content = new ListContent(loadedSlice);"
        errorLine2="        ~~~~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ListContent can only be called from within the same library (androidx.slice:slice-view)"
        errorLine1="        ListContent content = new ListContent(loadedSlice);"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ListContent can only be called from within the same library (androidx.slice:slice-view)"
        errorLine1="        ListContent content = new ListContent(loadedSlice);"
        errorLine2="                                              ~~~~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ListContent.getHeader can only be called from within the same library (androidx.slice:slice-view)"
        errorLine1="        SliceItem headerItem = content.getHeader() != null"
        errorLine2="                                       ~~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ListContent.getHeader can only be called from within the same library (androidx.slice:slice-view)"
        errorLine1="                ? content.getHeader().getSliceItem() : null;"
        errorLine2="                          ~~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="SliceContent.getSliceItem can only be called from within the same library (androidx.slice:slice-view)"
        errorLine1="                ? content.getHeader().getSliceItem() : null;"
        errorLine2="                                      ~~~~~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onCreate(Bundle savedInstanceState) {"
        errorLine2="                         ~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceBrowser.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean onOptionsItemSelected(MenuItem item) {"
        errorLine2="                                         ~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceBrowser.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected void onSaveInstanceState(Bundle outState) {"
        errorLine2="                                       ~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceBrowser.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void create(Context context, Consumer&lt;Uri> selectedCallback) {"
        errorLine2="                              ~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void create(Context context, Consumer&lt;Uri> selectedCallback) {"
        errorLine2="                                               ~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected static CharSequence findTitle(Context context, Slice loadedSlice,"
        errorLine2="                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected static CharSequence findTitle(Context context, Slice loadedSlice,"
        errorLine2="                                            ~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected static CharSequence findTitle(Context context, Slice loadedSlice,"
        errorLine2="                                                             ~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            SliceMetadata metaData) {"
        errorLine2="            ~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected static Slice bindSliceSynchronous(Context context, SliceViewManager manager,"
        errorLine2="                     ~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected static Slice bindSliceSynchronous(Context context, SliceViewManager manager,"
        errorLine2="                                                ~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected static Slice bindSliceSynchronous(Context context, SliceViewManager manager,"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            Uri slice) {"
        errorLine2="            ~~~">
        <location
            file="src/main/java/com/example/androidx/slice/demos/SliceSelectionDialog.java"/>
    </issue>

</issues>
