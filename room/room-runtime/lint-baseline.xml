<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.7.0-alpha02" type="baseline" client="gradle" dependencies="false" name="AGP (8.7.0-alpha02)" variant="all" version="8.7.0-alpha02">

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="            val transaction = transactionStack.removeLastKt()"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/room/coroutines/ConnectionPoolImpl.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="                        invalidateTablesQueue.removeFirstKt()"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidUnitTest/kotlin/androidx/room/InvalidationTrackerTest.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="                    quoteStack.removeLastKt()"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/room/util/SchemaInfoUtil.kt"/>
    </issue>

    <issue
        id="NewApi"
        message="This Kotlin extension function will be hidden by `java.util.SequencedCollection` starting in API 35"
        errorLine1="                    quoteStack.removeLastKt()"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/room/util/SchemaInfoUtil.kt"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ProcessLock can only be called from within the same library group (referenced groupId=`androidx.sqlite` from groupId=`androidx.room`)"
        errorLine1="        val copyLock = ProcessLock(name, context.filesDir, processLevelLock)"
        errorLine2="                       ~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/room/support/PrePackagedCopyOpenHelper.android.kt"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ProcessLock can only be called from within the same library group (referenced groupId=`androidx.sqlite` from groupId=`androidx.room`)"
        errorLine1="        val copyLock = ProcessLock(name, context.filesDir, processLevelLock)"
        errorLine2="                                   ~~~~">
        <location
            file="src/androidMain/kotlin/androidx/room/support/PrePackagedCopyOpenHelper.android.kt"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ProcessLock can only be called from within the same library group (referenced groupId=`androidx.sqlite` from groupId=`androidx.room`)"
        errorLine1="        val copyLock = ProcessLock(name, context.filesDir, processLevelLock)"
        errorLine2="                                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/room/support/PrePackagedCopyOpenHelper.android.kt"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ProcessLock.lock can only be called from within the same library group (referenced groupId=`androidx.sqlite` from groupId=`androidx.room`)"
        errorLine1="            copyLock.lock()"
        errorLine2="                     ~~~~">
        <location
            file="src/androidMain/kotlin/androidx/room/support/PrePackagedCopyOpenHelper.android.kt"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ProcessLock.unlock can only be called from within the same library group (referenced groupId=`androidx.sqlite` from groupId=`androidx.room`)"
        errorLine1="            copyLock.unlock()"
        errorLine2="                     ~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/room/support/PrePackagedCopyOpenHelper.android.kt"/>
    </issue>

</issues>
