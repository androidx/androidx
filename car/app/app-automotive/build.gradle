/*
 * Copyright (C) 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */
import androidx.build.LibraryType

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("androidx.stableaidl")
}
dependencies {
    api(project(":car:app:app"))
    api(libs.guavaListenableFuture)
    api("androidx.annotation:annotation-experimental:1.4.0")
    implementation(libs.guavaAndroid)
    implementation("androidx.concurrent:concurrent-futures:1.1.0")
    implementation("androidx.fragment:fragment:1.3.0")
    implementation("androidx.lifecycle:lifecycle-common-java8:2.2.0")
    implementation("androidx.annotation:annotation:1.1.0")
    implementation("androidx.core:core:1.7.0")
    implementation(libs.autoValueAnnotations)

    annotationProcessor(libs.nullaway)
    annotationProcessor(libs.autoValue)

    testImplementation(libs.junit)
    testImplementation(libs.testCore)
    testImplementation(libs.testRules)
    testImplementation(libs.testRunner)
    testImplementation(libs.junit)
    testImplementation(libs.mockitoCore4)
    testImplementation(libs.robolectric)
    testImplementation(libs.truth)
    testImplementation("androidx.fragment:fragment-testing:1.2.3")
    testImplementation project(path: ':car:app:app-testing')
}

android {
    defaultConfig {
        minSdkVersion 29
    }
    buildFeatures {
        aidl = true
    }
    buildTypes.all {
        consumerProguardFiles "proguard-rules.pro"

        stableAidl {
            version 1
        }
    }
    useLibrary 'android.car'
    testOptions.unitTests.includeAndroidResources = true
    namespace "androidx.car.app.automotive"
}

androidx {
    name = "Android for Cars App Automotive Extension"
    type = LibraryType.PUBLISHED_LIBRARY
    inceptionYear = "2021"
    description = "Automotive OS specific functionality to build navigation, parking, and charging apps for cars"
    metalavaK2UastEnabled = true
}
