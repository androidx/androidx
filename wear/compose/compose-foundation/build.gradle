/*
 * Copyright 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.LibraryGroups
import androidx.build.LibraryType
import androidx.build.LibraryVersions
import androidx.build.AndroidXComposePlugin

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXComposePlugin")
}

AndroidXComposePlugin.applyAndConfigureKotlinPlugin(project)

dependencies {
    kotlinPlugin(project(":compose:compiler:compiler"))

    if(!AndroidXComposePlugin.isMultiplatformEnabled(project)) {
        api(project(":compose:foundation:foundation"))
        api(project(":compose:ui:ui"))
        api(project(":compose:ui:ui-text"))
        api(project(":compose:runtime:runtime"))

        implementation(libs.kotlinStdlib)
        implementation(project(":compose:foundation:foundation-layout"))

        testImplementation(libs.testRules)
        testImplementation(libs.testRunner)
        testImplementation(libs.junit)

        androidTestImplementation project(path: ':compose:ui:ui-test')
        androidTestImplementation project(path: ':compose:ui:ui-test-junit4')
        androidTestImplementation project(path: ':compose:test-utils')
        androidTestImplementation(libs.testRunner)

        samples(project(":wear:compose:compose-foundation-samples"))
    }
}

if(AndroidXComposePlugin.isMultiplatformEnabled(project)) {
    kotlin {
        android()
        jvm("desktop")

        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block above
         */
        sourceSets {
            commonMain.dependencies {
                api(project(":compose:foundation:foundation"))
                api(project(":compose:ui:ui"))
                api(project(":compose:ui:ui-text"))
                api(project(":compose:runtime:runtime"))

                implementation(libs.kotlinStdlib)
                implementation(project(":compose:foundation:foundation-layout"))
            }
            jvmMain.dependencies {
                implementation(libs.kotlinStdlib)
            }
            androidMain {
                dependsOn(jvmMain)
            }
            desktopMain {
                dependsOn(jvmMain)
            }

            commonTest.dependencies {
                implementation(kotlin("test-junit"))
            }
            androidAndroidTest.dependencies {
                implementation(libs.testExtJunit)
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.truth)
            }
        }
    }
    dependencies {
        samples(project(":wear:compose:compose-foundation-samples"))
    }
}


android {
    defaultConfig {
        minSdkVersion 25
    }
    buildTypes.all {
        consumerProguardFiles "proguard-rules.pro"
    }
    // Use Robolectric 4.+
    testOptions.unitTests.includeAndroidResources = true
}

androidx {
    name = "Android Wear Compose Foundation"
    type = LibraryType.PUBLISHED_LIBRARY
    mavenGroup = LibraryGroups.WEAR_COMPOSE
    inceptionYear = "2021"
    description = "WearOS Compose Foundation Library. This library makes it easier for developers" +
            "to write Jetpack Compose applications for Wearable devices by providing " +
            "functionality to support wearable specific devices sizes, shapes and navigation " +
            "gestures. It builds upon the Jetpack Compose libraries."
    targetsJavaConsumers = false
}
