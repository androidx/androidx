<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.3.0-beta01" type="baseline" client="gradle" dependencies="false" name="AGP (8.3.0-beta01)" variant="all" version="8.3.0-beta01">

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 23; however, the containing class androidx.media2.integration.testapp.VideoSelectorActivity is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            if (checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/integration/testapp/VideoSelectorActivity.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 23; however, the containing class androidx.media2.integration.testapp.VideoSelectorActivity is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                requestPermissions(new String[] {Manifest.permission.READ_EXTERNAL_STORAGE},"
        errorLine2="                ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/integration/testapp/VideoSelectorActivity.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="MediaItem.getMediaId can only be called from within the same library group (referenced groupId=`androidx.media2` from groupId=`androidx.media2.integration-tests`)"
        errorLine1="                    &amp;&amp; TextUtils.equals(currentItem.getMediaId(), mUri.toString())"
        errorLine2="                                                    ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/integration/testapp/VideoPlayerActivity.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="BaseResult.RESULT_SUCCESS can only be accessed from within the same library group (referenced groupId=`androidx.media2` from groupId=`androidx.media2.integration-tests`)"
        errorLine1="                if (playerResult.getResultCode() != SessionPlayer.PlayerResult.RESULT_SUCCESS) {"
        errorLine2="                                                                               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/integration/testapp/VideoSessionService.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onCreate(Bundle savedInstanceState) {"
        errorLine2="                         ~~~~~~">
        <location
            file="src/main/java/androidx/media2/integration/testapp/VideoPlayerActivity.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onCreate(Bundle savedInstanceState) {"
        errorLine2="                         ~~~~~~">
        <location
            file="src/main/java/androidx/media2/integration/testapp/VideoSelectorActivity.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] results) {"
        errorLine2="                                                            ~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/integration/testapp/VideoSelectorActivity.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] results) {"
        errorLine2="                                                                                  ~~~~~">
        <location
            file="src/main/java/androidx/media2/integration/testapp/VideoSelectorActivity.java"/>
    </issue>

</issues>
