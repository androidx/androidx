<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.3.0-beta01" type="baseline" client="gradle" dependencies="false" name="AGP (8.3.0-beta01)" variant="all" version="8.3.0-beta01">

    <issue
        id="WrongConstant"
        message="Must be one of: VolumeProviderCompat.VOLUME_CONTROL_FIXED, VolumeProviderCompat.VOLUME_CONTROL_RELATIVE, VolumeProviderCompat.VOLUME_CONTROL_ABSOLUTE"
        errorLine1="        return new VolumeProviderCompat(player.getVolumeControlType(), player.getMaxVolume(),"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionLegacyStub.java"/>
    </issue>

    <issue
        id="WrongConstant"
        message="Must be one of: SessionResult.RESULT_SUCCESS, BaseResult.RESULT_ERROR_UNKNOWN, BaseResult.RESULT_ERROR_INVALID_STATE, BaseResult.RESULT_ERROR_BAD_VALUE, BaseResult.RESULT_ERROR_PERMISSION_DENIED, BaseResult.RESULT_ERROR_IO, BaseResult.RESULT_INFO_SKIPPED, RemoteResult.RESULT_ERROR_SESSION_DISCONNECTED, BaseResult.RESULT_ERROR_NOT_SUPPORTED, RemoteResult.RESULT_ERROR_SESSION_AUTHENTICATION_EXPIRED, RemoteResult.RESULT_ERROR_SESSION_PREMIUM_ACCOUNT_REQUIRED, RemoteResult.RESULT_ERROR_SESSION_CONCURRENT_STREAM_LIMIT, RemoteResult.RESULT_ERROR_SESSION_PARENTAL_CONTROL_RESTRICTED, RemoteResult.RESULT_ERROR_SESSION_NOT_AVAILABLE_IN_REGION, RemoteResult.RESULT_ERROR_SESSION_SKIP_LIMIT_REACHED, RemoteResult.RESULT_ERROR_SESSION_SETUP_REQUIRED, but could be BaseResult.RESULT_SUCCESS"
        errorLine1="        return new SessionResult(result.getResultCode(), null, result.getMediaItem(),"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/SessionResult.java"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(TIMEOUT_MS);"
        errorLine2="               ~~~~~">
        <location
            file="src/androidTest/java/androidx/media2/session/MediaBrowserLegacyTest.java"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(TIMEOUT_MS);"
        errorLine2="               ~~~~~">
        <location
            file="src/androidTest/java/androidx/media2/session/MediaBrowserLegacyTest.java"/>
    </issue>

    <issue
        id="UnspecifiedRegisterReceiverFlag"
        message="`mBroadcastReceiver` \&#xA;is missing `RECEIVER_EXPORTED` or `RECEIVER_NOT_EXPORTED` flag for unprotected \&#xA;broadcasts registered for android.intent.action.MEDIA_BUTTON"
        errorLine1="                context.registerReceiver(mBroadcastReceiver, filter);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionImplBase.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onSessionResult(final int seq, final ParcelImpl sessionResult) {"
        errorLine2="                                                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onLibraryResult(final int seq, final ParcelImpl libraryResult) {"
        errorLine2="                                                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onCurrentMediaItemChanged(int seq, final ParcelImpl item, final int currentIdx,"
        errorLine2="                                                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onBufferingStateChanged(int seq, final ParcelImpl item, @BuffState final int state,"
        errorLine2="                                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl metadata, final int currentIdx, final int previousIdx,"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onPlaylistMetadataChanged(int seq, final ParcelImpl metadata)"
        errorLine2="                                                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onPlaybackInfoChanged(int seq, final ParcelImpl playbackInfo)"
        errorLine2="                                                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onVideoSizeChanged(int seq, final ParcelImpl item, final ParcelImpl videoSize) {"
        errorLine2="                                                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onVideoSizeChanged(int seq, final ParcelImpl item, final ParcelImpl videoSize) {"
        errorLine2="                                                                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onSubtitleData(int seq, final ParcelImpl item, final ParcelImpl track,"
        errorLine2="                                              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onSubtitleData(int seq, final ParcelImpl item, final ParcelImpl track,"
        errorLine2="                                                                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl data) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onConnected(int seq, ParcelImpl connectionResult) {"
        errorLine2="                                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onSetCustomLayout(final int seq, final List&lt;ParcelImpl> commandButtonList) {"
        errorLine2="                                                            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onAllowedCommandsChanged(int seq, final ParcelImpl commands) {"
        errorLine2="                                                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onCustomCommand(final int seq, final ParcelImpl commandParcel, final Bundle args) {"
        errorLine2="                                                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onTrackInfoChanged(final int seq, final List&lt;ParcelImpl> trackInfoList,"
        errorLine2="                                                             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl selectedVideoParcel, final ParcelImpl selectedAudioParcel,"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl selectedVideoParcel, final ParcelImpl selectedAudioParcel,"
        errorLine2="                                                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl selectedSubtitleParcel, final ParcelImpl selectedMetadataParcel) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl selectedSubtitleParcel, final ParcelImpl selectedMetadataParcel) {"
        errorLine2="                                                           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onTrackSelected(final int seq, final ParcelImpl trackInfoParcel) {"
        errorLine2="                                                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void onTrackDeselected(final int seq, final ParcelImpl trackInfoParcel) {"
        errorLine2="                                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl libraryParams) throws RuntimeException {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl libraryParams) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaControllerStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="MediaBrowserServiceCompat.onSubscribe can only be called from within the same library (androidx.media:media)"
        errorLine1="    public void onSubscribe(final String id, final Bundle option) {"
        errorLine2="                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaLibraryServiceLegacyStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="MediaBrowserServiceCompat.onUnsubscribe can only be called from within the same library (androidx.media:media)"
        errorLine1="    public void onUnsubscribe(final String id) {"
        errorLine2="                ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaLibraryServiceLegacyStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="        public void connect(final IMediaController caller, final ParcelImpl connectionRequest) {"
        errorLine2="                                                                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionServiceImplBase.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void connect(final IMediaController caller, int seq, ParcelImpl connectionRequest)"
        errorLine2="                                                                ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl sessionResult) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl command, final Bundle args) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl ratingParcelable) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl metadata) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl metadata) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void selectTrack(IMediaController caller, int seq, final ParcelImpl trackInfoParcel) {"
        errorLine2="                                                                    ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public void deselectTrack(IMediaController caller, int seq, final ParcelImpl trackInfoParcel) {"
        errorLine2="                                                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl libraryParams) throws RuntimeException {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final int page, final int pageSize, final ParcelImpl libraryParams)"
        errorLine2="                                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl libraryParams) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final int page, final int pageSize, final ParcelImpl libraryParams) {"
        errorLine2="                                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl libraryParams) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            ParcelImpl videoSizeParcel = MediaParcelUtils.toParcelable(videoSize);"
        errorLine2="            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            List&lt;ParcelImpl> trackInfoList = MediaParcelUtils.toParcelableList(tracks);"
        errorLine2="                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            ParcelImpl itemParcel = MediaParcelUtils.toParcelable(item);"
        errorLine2="            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            ParcelImpl trackParcel = MediaParcelUtils.toParcelable(track);"
        errorLine2="            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            ParcelImpl dataParcel = MediaParcelUtils.toParcelable(data);"
        errorLine2="            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaSessionStub.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="        List&lt;ParcelImpl> parcelImplList = listSlice.getList();"
        errorLine2="             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="            final ParcelImpl itemParcelImpl = parcelImplList.get(i);"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="    public static List&lt;ParcelImpl> convertCommandButtonListToParcelImplList("
        errorLine2="                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="        List&lt;ParcelImpl> parcelImplList = new ArrayList&lt;>();"
        errorLine2="             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="        List&lt;ParcelImpl> itemParcelableList = new ArrayList&lt;>();"
        errorLine2="             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ParcelImpl can only be accessed from within the same library (androidx.versionedparcelable:versionedparcelable)"
        errorLine1="                final ParcelImpl itemParcelImpl = MediaParcelUtils.toParcelable(item);"
        errorLine2="                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static MediaItem convertToMediaItem(MediaBrowserCompat.MediaItem item) {"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static MediaItem convertToMediaItem(MediaBrowserCompat.MediaItem item) {"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static MediaItem convertToMediaItem(QueueItem item) {"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static MediaItem convertToMediaItem(QueueItem item) {"
        errorLine2="                                               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static List&lt;MediaItem> convertMediaItemListToMediaItemList("
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            List&lt;MediaBrowserCompat.MediaItem> items) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static List&lt;MediaItem> convertQueueItemListToMediaItemList(List&lt;QueueItem> items) {"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static List&lt;MediaItem> convertQueueItemListToMediaItemList(List&lt;QueueItem> items) {"
        errorLine2="                                                                      ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static MediaDescriptionCompat createMediaDescriptionCompat(String mediaId) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static MediaDescriptionCompat createMediaDescriptionCompat(String mediaId) {"
        errorLine2="                                                                      ~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static List&lt;QueueItem> convertToQueueItemList(List&lt;MediaItem> items) {"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static List&lt;QueueItem> convertToQueueItemList(List&lt;MediaItem> items) {"
        errorLine2="                                                         ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static List&lt;MediaItem> convertParcelImplListSliceToMediaItemList("
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            ParcelImplListSlice listSlice) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T extends Parcelable> List&lt;T> truncateListBySize(final List&lt;T> list,"
        errorLine2="                                         ~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T extends Parcelable> List&lt;T> truncateListBySize(final List&lt;T> list,"
        errorLine2="                                                                          ~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static MediaMetadata convertToMediaMetadata(CharSequence queueTitle) {"
        errorLine2="                  ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static MediaMetadata convertToMediaMetadata(CharSequence queueTitle) {"
        errorLine2="                                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static MediaMetadataCompat convertToMediaMetadataCompat(MediaMetadata metadata) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static MediaMetadataCompat convertToMediaMetadataCompat(MediaMetadata metadata) {"
        errorLine2="                                                                   ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Rating convertToRating(RatingCompat ratingCompat) {"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Rating convertToRating(RatingCompat ratingCompat) {"
        errorLine2="                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static RatingCompat convertToRatingCompat(Rating rating) {"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static RatingCompat convertToRatingCompat(Rating rating) {"
        errorLine2="                                                     ~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static List&lt;ParcelImpl> convertCommandButtonListToParcelImplList("
        errorLine2="                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            List&lt;CommandButton> commandButtonList) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static ParcelImplListSlice convertMediaItemListToParcelImplListSlice("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            List&lt;MediaItem> mediaItemList) {"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static int convertToPlayerState(PlaybackStateCompat state) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static MediaController.PlaybackInfo toPlaybackInfo2("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            MediaControllerCompat.PlaybackInfo info) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static boolean isUnparcelableBundle(Bundle bundle) {"
        errorLine2="                                               ~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void keepUnparcelableBundlesOnly(final List&lt;Bundle> bundles) {"
        errorLine2="                                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/media2/session/MediaUtils.java"/>
    </issue>

</issues>
