<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright 2021 The Android Open Source Project

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<resources xmlns:xs="http://schemas.android.com/apk/res/android">
    <!-- An attribute for Activity Embedding rules.
         Defines what part of the Task bounds should be given to the primary container in split.
         Values in range `(0.0, 1.0)` define the size of the primary container of the split relative
         to the corresponding parent Task bounds.
         The default is `0.5`, which is to split with equal width. -->
    <attr name="splitRatio" format="float" />
    <!-- An attribute for Activity Embedding rules.
         Defines the layout direction for the Activity Embedding split. -->
    <attr name="splitLayoutDirection" format="enum">
        <!-- A layout direction that splits the task bounds vertically, and the direction is deduced
             from the language script of locale. The direction can be either `rtl` or `ltr` -->
        <enum name="locale" value="0" />
        <!-- The primary container is placed on the left, and the secondary is on the right hand
             side. -->
        <enum name="ltr" value="1" />
        <!-- The primary container is placed on the right, and the secondary is on the left hand
             side. -->
        <enum name="rtl" value="2" />
        <!-- The primary container is placed on top, and the secondary is at the bottom. -->
        <enum name="topToBottom" value="3" />
        <!-- The primary container is placed on bottom, and the secondary is at the top. -->
        <enum name="bottomToTop" value="4" />
    </attr>
    <!-- An attribute for Activity Embedding rules.
         An optional but unique string to identify a `SplitPairRule`, `SplitPlaceholderRule` or
         `ActivityRule`. The suggested usage is to set the tag to be able to differentiate between
         different rules in the callbacks.
         For example, it can be used to compute the right `SplitAttributes` for the given split rule
         in `SplitAttributesCalculator.computeSplitAttributesForParams`. -->
    <attr name="tag" format="string" />
    <!-- An attribute for Activity Embedding rules.
         Background color of Activity Embedding window animation if the animation requires a
         background. Only opaque color is supported.
         The default is to use the current theme's windowBackground. Any non-opaque color will be
         treated the same as default. -->
    <attr name="animationBackgroundColor" format="color" />

    <!-- An attribute for Activity Embedding rules.
         The smallest value of width of the parent Task bounds when the split should be used, in DP.
         Uses `0` to always allow split regardless of the parent Task width.
         The default is `600`. -->
    <attr name="splitMinWidthDp" format="integer" />
    <!-- An attribute for Activity Embedding rules.
         The smallest value of height of the parent Task bounds when the split should be used, in
         DP.
         Uses `0` to always allow split regardless of the parent Task height.
         The default is `600`. -->
    <attr name="splitMinHeightDp" format="integer" />
    <!-- An attribute for Activity Embedding rules.
         The smallest value of the smallest possible width of the parent Task bounds in any rotation
         when the split should be used, in DP.
         Uses `0` to always allow split regardless of the parent Task smallest width.
         The default is `600`. -->
    <attr name="splitMinSmallestWidthDp" format="integer" />
    <!-- An attribute for Activity Embedding rules.
         The largest value of the aspect ratio, expressed as (height / width) in decimal form, of
         the parent Task bounds in portrait when the split should be used.
         Uses `0` or `alwaysAllow` to always allow split in portrait.
         Uses `-1` or `alwaysDisallow` to always disallow split in portrait.
         Any other values less than `1` are invalid.
         The default is `1.4`. -->
    <attr name="splitMaxAspectRatioInPortrait"  format="float">
        <!-- Special value to always allow split in portrait regardless of the aspect ratio. -->
        <enum name="alwaysAllow" value="0" />
        <!-- Special value to always disallow split in portrait regardless of the aspect ratio. -->
        <enum name="alwaysDisallow" value="-1" />
    </attr>
    <!-- An attribute for Activity Embedding rules.
         The largest value of the aspect ratio, expressed as (width / height) in decimal form, of
         the parent Task bounds in landscape when the split should be used.
         Uses `0` or `alwaysAllow` to always allow split in landscape.
         Uses `-1` or `alwaysDisallow` to always disallow split in landscape.
         Any other values less than `1` are invalid.
         The default is `alwaysAllow`. -->
    <attr name="splitMaxAspectRatioInLandscape"  format="float">
        <!-- Special value to always allow split in landscape regardless of the aspect ratio. -->
        <enum name="alwaysAllow" value="0" />
        <!-- Special value to always disallow split in landscape regardless of the aspect ratio. -->
        <enum name="alwaysDisallow" value="-1" />
    </attr>
    <!-- An attribute for Activity Embedding rules.
         Determines what happens with the primary container when all activities are finished in
         the associated secondary container.
         The default is `never`. -->
    <attr name="finishPrimaryWithSecondary" format="enum">
        <!-- Never finish the primary container. -->
        <enum name="never" value="0" />
        <!-- Always finish the primary container. -->
        <enum name="always" value="1" />
        <!-- Only finish the primary container when the primary container is displayed adjacent to
             the secondary container.
             Does not finish the primary one when the secondary container is stacked on top of
             the primary. -->
        <enum name="adjacent" value="2" />
    </attr>

    <!-- An attribute for Activity Embedding rules.
         Determines what happens with the secondary container when all activities are finished
         in the associated primary container.
         The default is `always`. -->
    <attr name="finishSecondaryWithPrimary" format="enum">
        <!-- Never finish the secondary container. -->
        <enum name="never" value="0" />
        <!-- Always finish the secondary container. -->
        <enum name="always" value="1" />
        <!-- Only finish the secondary container when the primary container is displayed adjacent to
             the secondary container.
             Does not finish the secondary one when the secondary container is stacked on top of
             the primary. -->
        <enum name="adjacent" value="2" />
    </attr>
    <!-- An attribute for Activity Embedding rules.
         Determines what happens with the primary container when the associated placeholder
         activity is being finished.
         The default is `always`. -->
    <attr name="finishPrimaryWithPlaceholder" format="enum">
        <!-- Always finish the primary container. -->
        <enum name="always" value="1" />
        <!-- Only finish the primary container when the primary container is displayed adjacent to
             the placeholder container.
             Does not finish the primary one when the placeholder container is stacked on top of
             the primary. -->
        <enum name="adjacent" value="2" />
    </attr>

    <!-- Attributes that are read when parsing a <SplitPairRule> tag, which defines the split
         configuration rules for activity pairs.
         Must contain at least one `SplitPairFilter`. -->
    <declare-styleable name="SplitPairRule">
        <!-- An attribute for Activity Embedding rules.
             If there is an existing split with the same primary container, indicates whether the
             existing secondary container on top and all activities in it should be destroyed when a
             new split is created using this rule. Otherwise the new secondary will appear on top.
             The default is 'false'. -->
        <attr name="clearTop" format="boolean" />
        <attr name="finishPrimaryWithSecondary" />
        <attr name="finishSecondaryWithPrimary" />
        <attr name="splitRatio"/>
        <attr name="splitMinWidthDp"/>
        <attr name="splitMinHeightDp"/>
        <attr name="splitMinSmallestWidthDp"/>
        <attr name="splitMaxAspectRatioInPortrait" />
        <attr name="splitMaxAspectRatioInLandscape" />
        <attr name="splitLayoutDirection"/>
        <attr name="tag"/>
        <attr name="animationBackgroundColor"/>
    </declare-styleable>

    <!-- Attributes that are read when parsing a <SplitPlaceholderRule> tag, which defines the split
         configuration rules for split placeholders.
         Must contain at least one `ActivityFilter` for the primary activity for which the rule
         should be applied. -->
    <declare-styleable name="SplitPlaceholderRule">
        <!-- An attribute for Activity Embedding rules.
             Component name of the placeholder activity to launch in the split.
             Must be non-empty. -->
        <attr name="placeholderActivityName" format="string" />
        <!-- An attribute for Activity Embedding rules.
             Determines whether the placeholder will show on top if Task window constraints are not
             satisfied after it first appeared in a split with sufficient Task window constraints.
             The default is `false`. -->
        <attr name="stickyPlaceholder" format="boolean" />
        <attr name="finishPrimaryWithPlaceholder"/>
        <attr name="splitRatio"/>
        <attr name="splitMinWidthDp"/>
        <attr name="splitMinHeightDp"/>
        <attr name="splitMinSmallestWidthDp"/>
        <attr name="splitMaxAspectRatioInPortrait" />
        <attr name="splitMaxAspectRatioInLandscape" />
        <attr name="splitLayoutDirection"/>
        <attr name="tag"/>
        <attr name="animationBackgroundColor"/>
    </declare-styleable>

    <!-- Attributes that are read when parsing an <ActivityRule> tag, which defines the layout
         configuration rules for individual activities. It takes precedence over `SplitPairRule`.
         Must contain at least one `ActivityFilter`. -->
    <declare-styleable name="ActivityRule">
        <!-- An attribute for Activity Embedding rules.
             Whether the activity should always be expanded on launch.
             The default is `false`. -->
        <attr name="alwaysExpand" format="boolean" />
        <attr name="tag"/>
    </declare-styleable>

    <!-- Attributes that are read when parsing an <SplitPairFilter> tag, which defines the filter
         for `SplitPairRule`. -->
    <declare-styleable name="SplitPairFilter">
        <!-- An attribute for Activity Embedding rules.
             Component name of the primary activity in the split. Must be non-empty. Can contain a
             wildcard at the end or instead of package name and/or class name. -->
        <attr name="primaryActivityName" format="string" />
        <!-- An attribute for Activity Embedding rules.
             Component name of the secondary activity in the split. Must be non-empty. Can contain a
             wildcard at the end or instead of package name and/or class name. -->
        <attr name="secondaryActivityName" format="string" />
        <!-- An attribute for Activity Embedding rules.
             Action used for the secondary activity launch. May be empty. Must not contain
             wildcards.
             When it is set, the filter only matches if the secondary activity is launched with an
             intent with the given action. -->
        <attr name="secondaryActivityAction" format="string" />
    </declare-styleable>

    <!-- Attributes that are read when parsing an <ActivityFilter> tag, which defines the filter
         Filter for `ActivityRule` and `SplitPlaceholderRule`. -->
    <declare-styleable name="ActivityFilter">
        <!-- An attribute for Activity Embedding rules.
             Component name of the launched activity. Must be non-empty. Can contain a single
             wildcard at the end. -->
        <attr name="activityName" format="string" />
        <!-- An attribute for Activity Embedding rules.
             Action used for the activity launch. May be empty. Must not contain wildcards.
             When it is set, the filter only matches if the activity is launched with an intent with
             the given action. -->
        <attr name="activityAction" format="string" />
    </declare-styleable>

    <!-- Attributes that are read when parsing an <DividerAttributes> tag, which defines the divider
         attributes for `SplitPairRule` and `SplitPlaceholderRule`. The <DividerAttributes> tag must
         be a child of the <SplitPairRule> or <SplitPlaceholderRule> tag. If not set, no divider
         is shown. -->
    <declare-styleable name="DividerAttributes">
        <!-- The divider type. The default type is `fixed`. -->
        <attr name="embeddingDividerType" format="enum">
            <!-- Fixed divider type. -->
            <enum name="fixed" value="0" />
            <!-- Draggable divider type. -->
            <enum name="draggable" value="1" />
        </attr>
        <!-- The divider width in dp. If unspecified, the system default value will be used. The
             width may be set to zero for a draggable divider, so that the drag handle is displayed
             without the divider line. -->
        <attr name="embeddingDividerWidthDp" format="integer" />
        <!-- The divider color. The color must be opaque. The default color is black. -->
        <attr name="embeddingDividerColor" format="color|reference" />
        <!-- The minimum split ratio of the primary container that the user is allowed to drag to.
             The value must be in the range (0.0, 1.0). System default value will be used if
             dragRangeMinRatio or dragRangeMaxRatio is unspecified. dragRangeMaxRatio must be
             greater than or equal to dragRangeMinRatio.
             This attribute is only allowed for a draggable divider and an exception is thrown
             otherwise. See DividerAttributes.DragRange for more details. -->
        <attr name="dragRangeMinRatio" format="float" />
        <!-- The maximum split ratio of the primary container that the user is allowed to drag to.
             The value must be in the range (0.0, 1.0). System default value will be used if
             dragRangeMinRatio or dragRangeMaxRatio is unspecified. dragRangeMaxRatio must be
             greater than or equal to dragRangeMinRatio.
             This attribute is only allowed for a draggable divider and an exception is thrown
             otherwise. See DividerAttributes.DragRange for more details. -->
        <attr name="dragRangeMaxRatio" format="float" />
    </declare-styleable>
</resources>