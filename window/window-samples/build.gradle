/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.Publish
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("AndroidXPlugin")
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
}

android {
    defaultConfig {
        applicationId "androidx.window.sample"
        minSdkVersion 23
    }
    buildFeatures {
        viewBinding true
    }
    namespace "androidx.window.sample"
}

dependencies {
    implementation("androidx.appcompat:appcompat:1.2.0")
    implementation("androidx.core:core-ktx:1.3.2")
    implementation("androidx.activity:activity:1.2.0")
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    api(libs.constraintLayout)
    // TODO(b/152245564) Conflicting dependencies cause IDE errors.
    implementation("androidx.lifecycle:lifecycle-viewmodel:2.4.0-alpha02")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.4.0-alpha02")
    implementation "androidx.browser:browser:1.3.0"
    implementation("androidx.startup:startup-runtime:1.1.0")

    implementation(project(":window:window-java"))
    debugImplementation(libs.leakcanary)

    androidTestImplementation(libs.testCore)
    androidTestImplementation(libs.testExtJunit)
    androidTestImplementation(libs.testRunner)
    androidTestImplementation(libs.testRules)
    androidTestImplementation(libs.espressoCore, excludes.espresso)
    androidTestImplementation(project(":window:window-testing"))
}

androidx {
    name = "Jetpack WindowManager library samples"
    publish = Publish.NONE
    mavenGroup = LibraryGroups.WINDOW
    inceptionYear = "2020"
    description = "Demo of Jetpack WindowManager library APIs"
}

// Allow usage of Kotlin's @OptIn.
tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += ["-opt-in=kotlin.RequiresOptIn"]
    }
}
