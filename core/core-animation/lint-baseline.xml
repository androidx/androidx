<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.3.0-beta01" type="baseline" client="gradle" dependencies="false" name="AGP (8.3.0-beta01)" variant="all" version="8.3.0-beta01">

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="                    AndroidResources.STYLEABLE_ACCELERATE_INTERPOLATOR, 0, 0);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AccelerateInterpolator.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="            a = res.obtainAttributes(attrs, AndroidResources.STYLEABLE_ACCELERATE_INTERPOLATOR);"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AccelerateInterpolator.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="    static final int STYLEABLE_ANTICIPATEOVERSHOOT_INTERPOLATOR_EXTRA_TENSION = 1;"
        errorLine2="                                                                                ~">
        <location
            file="src/main/java/androidx/core/animation/AndroidResources.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="                    a = theme.obtainStyledAttributes(attrs, AndroidResources.STYLEABLE_ANIMATOR_SET,"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnimatorInflater.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="                    a = res.obtainAttributes(attrs, AndroidResources.STYLEABLE_ANIMATOR_SET);"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnimatorInflater.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="                            AndroidResources.STYLEABLE_PROPERTY_VALUES_HOLDER, 0, 0);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnimatorInflater.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="                            AndroidResources.STYLEABLE_PROPERTY_VALUES_HOLDER);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnimatorInflater.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="            a = theme.obtainStyledAttributes(attrs, AndroidResources.STYLEABLE_KEYFRAME, 0, 0);"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnimatorInflater.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="            a = res.obtainAttributes(attrs, AndroidResources.STYLEABLE_KEYFRAME);"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnimatorInflater.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="            a = theme.obtainStyledAttributes(attrs, AndroidResources.STYLEABLE_KEYFRAME, 0, 0);"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnimatorInflater.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="            a = res.obtainAttributes(attrs, AndroidResources.STYLEABLE_KEYFRAME);"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnimatorInflater.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="            arrayAnimator = theme.obtainStyledAttributes(attrs, AndroidResources.STYLEABLE_ANIMATOR,"
        errorLine2="                                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnimatorInflater.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="            arrayAnimator = res.obtainAttributes(attrs, AndroidResources.STYLEABLE_ANIMATOR);"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnimatorInflater.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="                        AndroidResources.STYLEABLE_PROPERTY_ANIMATOR, 0, 0);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnimatorInflater.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="                        AndroidResources.STYLEABLE_PROPERTY_ANIMATOR);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnimatorInflater.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="                    AndroidResources.STYLEABLE_ANTICIPATEOVERSHOOT_INTERPOLATOR, 0, 0);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnticipateInterpolator.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="                    AndroidResources.STYLEABLE_ANTICIPATEOVERSHOOT_INTERPOLATOR);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnticipateInterpolator.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="                    AndroidResources.STYLEABLE_ANTICIPATEOVERSHOOT_INTERPOLATOR, 0, 0);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnticipateOvershootInterpolator.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="                    AndroidResources.STYLEABLE_ANTICIPATEOVERSHOOT_INTERPOLATOR);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/AnticipateOvershootInterpolator.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="            a = theme.obtainStyledAttributes(attrs, AndroidResources.STYLEABLE_CYCLE_INTERPOLATOR,"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/CycleInterpolator.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="            a = resources.obtainAttributes(attrs, AndroidResources.STYLEABLE_CYCLE_INTERPOLATOR);"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/CycleInterpolator.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="                    AndroidResources.STYLEABLE_DECELERATE_INTERPOLATOR, 0, 0);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/DecelerateInterpolator.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="            a = res.obtainAttributes(attrs, AndroidResources.STYLEABLE_DECELERATE_INTERPOLATOR);"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/DecelerateInterpolator.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="                    AndroidResources.STYLEABLE_OVERSHOOT_INTERPOLATOR, 0, 0);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/OvershootInterpolator.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="            a = res.obtainAttributes(attrs, AndroidResources.STYLEABLE_OVERSHOOT_INTERPOLATOR);"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/OvershootInterpolator.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="            a = theme.obtainStyledAttributes(attrs, AndroidResources.STYLEABLE_PATH_INTERPOLATOR,"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PathInterpolator.java"/>
    </issue>

    <issue
        id="ResourceType"
        message="Expected resource of type styleable"
        errorLine1="            a = res.obtainAttributes(attrs, AndroidResources.STYLEABLE_PATH_INTERPOLATOR);"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PathInterpolator.java"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Method.invoke requires both an upper and lower SDK bounds checks to be safe, and the upper bound must be below SdkVersionInfo.HIGHEST_KNOWN_API."
        errorLine1="                        Object value = convertBack(mGetter.invoke(target));"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PropertyValuesHolder.java"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Method.invoke requires both an upper and lower SDK bounds checks to be safe, and the upper bound must be below SdkVersionInfo.HIGHEST_KNOWN_API."
        errorLine1="                Object value = convertBack(mGetter.invoke(target));"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PropertyValuesHolder.java"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Method.invoke requires both an upper and lower SDK bounds checks to be safe, and the upper bound must be below SdkVersionInfo.HIGHEST_KNOWN_API."
        errorLine1="                mSetter.invoke(target, mTmpValueArray);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PropertyValuesHolder.java"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Method.invoke requires both an upper and lower SDK bounds checks to be safe, and the upper bound must be below SdkVersionInfo.HIGHEST_KNOWN_API."
        errorLine1="                mSetter.invoke(target, mTmpValueArray);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PropertyValuesHolder.java"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Method.invoke requires both an upper and lower SDK bounds checks to be safe, and the upper bound must be below SdkVersionInfo.HIGHEST_KNOWN_API."
        errorLine1="                    mSetter.invoke(target, mTmpValueArray);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PropertyValuesHolder.java"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Method.invoke requires both an upper and lower SDK bounds checks to be safe, and the upper bound must be below SdkVersionInfo.HIGHEST_KNOWN_API."
        errorLine1="                    mSetter.invoke(target, boxedValues);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PropertyValuesHolder.java"/>
    </issue>

    <issue
        id="BanUncheckedReflection"
        message="Method.invoke requires both an upper and lower SDK bounds checks to be safe, and the upper bound must be below SdkVersionInfo.HIGHEST_KNOWN_API."
        errorLine1="                    mSetter.invoke(target, boxedValues);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PropertyValuesHolder.java"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="The getter return type (`PropertyValuesHolder[]`) and setter parameter type (`PropertyValuesHolder...`) getter and setter methods for property `values` should have exactly the same type to allow be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public PropertyValuesHolder[] getValues() {"
        errorLine2="                                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/ValueAnimator.java"/>
        <location
            file="src/main/java/androidx/core/animation/ValueAnimator.java"
            message="Setter here"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 4, &quot;evaluator&quot;, in androidx.core.animation.ObjectAnimator.ofMultiInt) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull TypeEvaluator&lt;T> evaluator, @NonNull T... values) {"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/ObjectAnimator.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 4, &quot;evaluator&quot;, in androidx.core.animation.ObjectAnimator.ofMultiFloat) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull TypeEvaluator&lt;T> evaluator, @NonNull T... values) {"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/ObjectAnimator.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 3, &quot;evaluator&quot;, in androidx.core.animation.ObjectAnimator.ofObject) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull TypeEvaluator evaluator, @NonNull Object... values) {"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/ObjectAnimator.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 3, &quot;evaluator&quot;, in androidx.core.animation.ObjectAnimator.ofObject) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull V... values) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/ObjectAnimator.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 4, &quot;evaluator&quot;, in androidx.core.animation.ObjectAnimator.ofObject) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull TypeEvaluator&lt;V> evaluator, @NonNull V... values) {"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/ObjectAnimator.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 3, &quot;evaluator&quot;, in androidx.core.animation.PropertyValuesHolder.ofMultiInt) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull TypeEvaluator&lt;V> evaluator, @NonNull V... values) {"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PropertyValuesHolder.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 3, &quot;evaluator&quot;, in androidx.core.animation.PropertyValuesHolder.ofMultiInt) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull Keyframe... values) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PropertyValuesHolder.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 3, &quot;evaluator&quot;, in androidx.core.animation.PropertyValuesHolder.ofMultiFloat) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull TypeEvaluator&lt;V> evaluator, @NonNull V... values) {"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PropertyValuesHolder.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 3, &quot;evaluator&quot;, in androidx.core.animation.PropertyValuesHolder.ofMultiFloat) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull Keyframe... values) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PropertyValuesHolder.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 2, &quot;evaluator&quot;, in androidx.core.animation.PropertyValuesHolder.ofObject) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull TypeEvaluator evaluator, @NonNull Object... values) {"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PropertyValuesHolder.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 2, &quot;evaluator&quot;, in androidx.core.animation.PropertyValuesHolder.ofObject) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull TypeEvaluator&lt;V> evaluator, @NonNull V... values) {"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PropertyValuesHolder.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 3, &quot;evaluator&quot;, in androidx.core.animation.PropertyValuesHolder.ofObject) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull T... values) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/PropertyValuesHolder.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 1, &quot;evaluator&quot;, in androidx.core.animation.ValueAnimator.ofObject) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull Object... values) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/animation/ValueAnimator.java"/>
    </issue>

</issues>
