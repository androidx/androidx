// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <androidx.collection:collection>
final class <#A: kotlin/Any, #B: kotlin/Any> androidx.collection/SieveCache { // androidx.collection/SieveCache|null[0]
    constructor <init>(kotlin/Int, kotlin/Int = ..., kotlin/Function2<#A, #B, kotlin/Int> = ..., kotlin/Function1<#A, #B?> = ..., kotlin/Function4<#A, #B, #B?, kotlin/Boolean, kotlin/Unit> = ...) // androidx.collection/SieveCache.<init>|<init>(kotlin.Int;kotlin.Int;kotlin.Function2<1:0,1:1,kotlin.Int>;kotlin.Function1<1:0,1:1?>;kotlin.Function4<1:0,1:1,1:1?,kotlin.Boolean,kotlin.Unit>){}[0]

    final val capacity // androidx.collection/SieveCache.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/SieveCache.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val count // androidx.collection/SieveCache.count|{}count[0]
        final fun <get-count>(): kotlin/Int // androidx.collection/SieveCache.count.<get-count>|<get-count>(){}[0]
    final val maxSize // androidx.collection/SieveCache.maxSize|{}maxSize[0]
        final fun <get-maxSize>(): kotlin/Int // androidx.collection/SieveCache.maxSize.<get-maxSize>|<get-maxSize>(){}[0]
    final val size // androidx.collection/SieveCache.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/SieveCache.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/SieveCache.keys|{}keys[0]
        final fun <get-keys>(): kotlin/Array<kotlin/Any?> // androidx.collection/SieveCache.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/Array<kotlin/Any?>) // androidx.collection/SieveCache.keys.<set-keys>|<set-keys>(kotlin.Array<kotlin.Any?>){}[0]
    final var metadata // androidx.collection/SieveCache.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/SieveCache.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/SieveCache.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/SieveCache.values|{}values[0]
        final fun <get-values>(): kotlin/Array<kotlin/Any?> // androidx.collection/SieveCache.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/Array<kotlin/Any?>) // androidx.collection/SieveCache.values.<set-values>|<set-values>(kotlin.Array<kotlin.Any?>){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/SieveCache.any|any(){}[0]
    final fun contains(#A): kotlin/Boolean // androidx.collection/SieveCache.contains|contains(1:0){}[0]
    final fun containsKey(#A): kotlin/Boolean // androidx.collection/SieveCache.containsKey|containsKey(1:0){}[0]
    final fun containsValue(#B): kotlin/Boolean // androidx.collection/SieveCache.containsValue|containsValue(1:1){}[0]
    final fun count(): kotlin/Int // androidx.collection/SieveCache.count|count(){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/SieveCache.equals|equals(kotlin.Any?){}[0]
    final fun evictAll() // androidx.collection/SieveCache.evictAll|evictAll(){}[0]
    final fun get(#A): #B? // androidx.collection/SieveCache.get|get(1:0){}[0]
    final fun hashCode(): kotlin/Int // androidx.collection/SieveCache.hashCode|hashCode(){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/SieveCache.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/SieveCache.isNotEmpty|isNotEmpty(){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/SieveCache.none|none(){}[0]
    final fun put(#A, #B): #B? // androidx.collection/SieveCache.put|put(1:0;1:1){}[0]
    final fun putAll(androidx.collection/ScatterMap<#A, #B>) // androidx.collection/SieveCache.putAll|putAll(androidx.collection.ScatterMap<1:0,1:1>){}[0]
    final fun putAll(androidx.collection/SieveCache<#A, #B>) // androidx.collection/SieveCache.putAll|putAll(androidx.collection.SieveCache<1:0,1:1>){}[0]
    final fun putAll(kotlin.collections/Iterable<kotlin/Pair<#A, #B>>) // androidx.collection/SieveCache.putAll|putAll(kotlin.collections.Iterable<kotlin.Pair<1:0,1:1>>){}[0]
    final fun putAll(kotlin.collections/Map<#A, #B>) // androidx.collection/SieveCache.putAll|putAll(kotlin.collections.Map<1:0,1:1>){}[0]
    final fun putAll(kotlin.sequences/Sequence<kotlin/Pair<#A, #B>>) // androidx.collection/SieveCache.putAll|putAll(kotlin.sequences.Sequence<kotlin.Pair<1:0,1:1>>){}[0]
    final fun putAll(kotlin/Array<out kotlin/Pair<#A, #B>>) // androidx.collection/SieveCache.putAll|putAll(kotlin.Array<out|kotlin.Pair<1:0,1:1>>){}[0]
    final fun remove(#A): #B? // androidx.collection/SieveCache.remove|remove(1:0){}[0]
    final fun remove(#A, #B): kotlin/Boolean // androidx.collection/SieveCache.remove|remove(1:0;1:1){}[0]
    final fun removeIf(kotlin/Function2<#A, #B, kotlin/Boolean>) // androidx.collection/SieveCache.removeIf|removeIf(kotlin.Function2<1:0,1:1,kotlin.Boolean>){}[0]
    final fun resize(kotlin/Int) // androidx.collection/SieveCache.resize|resize(kotlin.Int){}[0]
    final fun toString(): kotlin/String // androidx.collection/SieveCache.toString|toString(){}[0]
    final fun trimToSize(kotlin/Int) // androidx.collection/SieveCache.trimToSize|trimToSize(kotlin.Int){}[0]
    final inline fun all(kotlin/Function2<#A, #B, kotlin/Boolean>): kotlin/Boolean // androidx.collection/SieveCache.all|all(kotlin.Function2<1:0,1:1,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<#A, #B, kotlin/Boolean>): kotlin/Boolean // androidx.collection/SieveCache.any|any(kotlin.Function2<1:0,1:1,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<#A, #B, kotlin/Boolean>): kotlin/Int // androidx.collection/SieveCache.count|count(kotlin.Function2<1:0,1:1,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<#A, #B, kotlin/Unit>) // androidx.collection/SieveCache.forEach|forEach(kotlin.Function2<1:0,1:1,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/SieveCache.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<#A, kotlin/Unit>) // androidx.collection/SieveCache.forEachKey|forEachKey(kotlin.Function1<1:0,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<#B, kotlin/Unit>) // androidx.collection/SieveCache.forEachValue|forEachValue(kotlin.Function1<1:1,kotlin.Unit>){}[0]
    final inline fun minusAssign(#A) // androidx.collection/SieveCache.minusAssign|minusAssign(1:0){}[0]
    final inline fun minusAssign(androidx.collection/ObjectList<#A>) // androidx.collection/SieveCache.minusAssign|minusAssign(androidx.collection.ObjectList<1:0>){}[0]
    final inline fun minusAssign(androidx.collection/ScatterSet<#A>) // androidx.collection/SieveCache.minusAssign|minusAssign(androidx.collection.ScatterSet<1:0>){}[0]
    final inline fun minusAssign(kotlin.collections/Iterable<#A>) // androidx.collection/SieveCache.minusAssign|minusAssign(kotlin.collections.Iterable<1:0>){}[0]
    final inline fun minusAssign(kotlin.sequences/Sequence<#A>) // androidx.collection/SieveCache.minusAssign|minusAssign(kotlin.sequences.Sequence<1:0>){}[0]
    final inline fun minusAssign(kotlin/Array<out #A>) // androidx.collection/SieveCache.minusAssign|minusAssign(kotlin.Array<out|1:0>){}[0]
    final inline fun plusAssign(androidx.collection/ScatterMap<#A, #B>) // androidx.collection/SieveCache.plusAssign|plusAssign(androidx.collection.ScatterMap<1:0,1:1>){}[0]
    final inline fun plusAssign(androidx.collection/SieveCache<#A, #B>) // androidx.collection/SieveCache.plusAssign|plusAssign(androidx.collection.SieveCache<1:0,1:1>){}[0]
    final inline fun plusAssign(kotlin.collections/Iterable<kotlin/Pair<#A, #B>>) // androidx.collection/SieveCache.plusAssign|plusAssign(kotlin.collections.Iterable<kotlin.Pair<1:0,1:1>>){}[0]
    final inline fun plusAssign(kotlin.collections/Map<#A, #B>) // androidx.collection/SieveCache.plusAssign|plusAssign(kotlin.collections.Map<1:0,1:1>){}[0]
    final inline fun plusAssign(kotlin.sequences/Sequence<kotlin/Pair<#A, #B>>) // androidx.collection/SieveCache.plusAssign|plusAssign(kotlin.sequences.Sequence<kotlin.Pair<1:0,1:1>>){}[0]
    final inline fun plusAssign(kotlin/Array<out kotlin/Pair<#A, #B>>) // androidx.collection/SieveCache.plusAssign|plusAssign(kotlin.Array<out|kotlin.Pair<1:0,1:1>>){}[0]
    final inline fun plusAssign(kotlin/Pair<#A, #B>) // androidx.collection/SieveCache.plusAssign|plusAssign(kotlin.Pair<1:0,1:1>){}[0]
    final inline fun set(#A, #B) // androidx.collection/SieveCache.set|set(1:0;1:1){}[0]
}

final class <#A: kotlin/Any?, #B: kotlin/Any?> androidx.collection/MutableScatterMap : androidx.collection/ScatterMap<#A, #B> { // androidx.collection/MutableScatterMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableScatterMap.<init>|<init>(kotlin.Int){}[0]

    final fun asMutableMap(): kotlin.collections/MutableMap<#A, #B> // androidx.collection/MutableScatterMap.asMutableMap|asMutableMap(){}[0]
    final fun clear() // androidx.collection/MutableScatterMap.clear|clear(){}[0]
    final fun findInsertIndex(#A): kotlin/Int // androidx.collection/MutableScatterMap.findInsertIndex|findInsertIndex(1:0){}[0]
    final fun put(#A, #B): #B? // androidx.collection/MutableScatterMap.put|put(1:0;1:1){}[0]
    final fun putAll(androidx.collection/ScatterMap<#A, #B>) // androidx.collection/MutableScatterMap.putAll|putAll(androidx.collection.ScatterMap<1:0,1:1>){}[0]
    final fun putAll(kotlin.collections/Iterable<kotlin/Pair<#A, #B>>) // androidx.collection/MutableScatterMap.putAll|putAll(kotlin.collections.Iterable<kotlin.Pair<1:0,1:1>>){}[0]
    final fun putAll(kotlin.collections/Map<#A, #B>) // androidx.collection/MutableScatterMap.putAll|putAll(kotlin.collections.Map<1:0,1:1>){}[0]
    final fun putAll(kotlin.sequences/Sequence<kotlin/Pair<#A, #B>>) // androidx.collection/MutableScatterMap.putAll|putAll(kotlin.sequences.Sequence<kotlin.Pair<1:0,1:1>>){}[0]
    final fun putAll(kotlin/Array<out kotlin/Pair<#A, #B>>) // androidx.collection/MutableScatterMap.putAll|putAll(kotlin.Array<out|kotlin.Pair<1:0,1:1>>){}[0]
    final fun remove(#A): #B? // androidx.collection/MutableScatterMap.remove|remove(1:0){}[0]
    final fun remove(#A, #B): kotlin/Boolean // androidx.collection/MutableScatterMap.remove|remove(1:0;1:1){}[0]
    final fun removeValueAt(kotlin/Int): #B? // androidx.collection/MutableScatterMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(#A, #B) // androidx.collection/MutableScatterMap.set|set(1:0;1:1){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableScatterMap.trim|trim(){}[0]
    final inline fun compute(#A, kotlin/Function2<#A, #B?, #B>): #B // androidx.collection/MutableScatterMap.compute|compute(1:0;kotlin.Function2<1:0,1:1?,1:1>){}[0]
    final inline fun getOrPut(#A, kotlin/Function0<#B>): #B // androidx.collection/MutableScatterMap.getOrPut|getOrPut(1:0;kotlin.Function0<1:1>){}[0]
    final inline fun minusAssign(#A) // androidx.collection/MutableScatterMap.minusAssign|minusAssign(1:0){}[0]
    final inline fun minusAssign(androidx.collection/ObjectList<#A>) // androidx.collection/MutableScatterMap.minusAssign|minusAssign(androidx.collection.ObjectList<1:0>){}[0]
    final inline fun minusAssign(androidx.collection/ScatterSet<#A>) // androidx.collection/MutableScatterMap.minusAssign|minusAssign(androidx.collection.ScatterSet<1:0>){}[0]
    final inline fun minusAssign(kotlin.collections/Iterable<#A>) // androidx.collection/MutableScatterMap.minusAssign|minusAssign(kotlin.collections.Iterable<1:0>){}[0]
    final inline fun minusAssign(kotlin.sequences/Sequence<#A>) // androidx.collection/MutableScatterMap.minusAssign|minusAssign(kotlin.sequences.Sequence<1:0>){}[0]
    final inline fun minusAssign(kotlin/Array<out #A>) // androidx.collection/MutableScatterMap.minusAssign|minusAssign(kotlin.Array<out|1:0>){}[0]
    final inline fun plusAssign(androidx.collection/ScatterMap<#A, #B>) // androidx.collection/MutableScatterMap.plusAssign|plusAssign(androidx.collection.ScatterMap<1:0,1:1>){}[0]
    final inline fun plusAssign(kotlin.collections/Iterable<kotlin/Pair<#A, #B>>) // androidx.collection/MutableScatterMap.plusAssign|plusAssign(kotlin.collections.Iterable<kotlin.Pair<1:0,1:1>>){}[0]
    final inline fun plusAssign(kotlin.collections/Map<#A, #B>) // androidx.collection/MutableScatterMap.plusAssign|plusAssign(kotlin.collections.Map<1:0,1:1>){}[0]
    final inline fun plusAssign(kotlin.sequences/Sequence<kotlin/Pair<#A, #B>>) // androidx.collection/MutableScatterMap.plusAssign|plusAssign(kotlin.sequences.Sequence<kotlin.Pair<1:0,1:1>>){}[0]
    final inline fun plusAssign(kotlin/Array<out kotlin/Pair<#A, #B>>) // androidx.collection/MutableScatterMap.plusAssign|plusAssign(kotlin.Array<out|kotlin.Pair<1:0,1:1>>){}[0]
    final inline fun plusAssign(kotlin/Pair<#A, #B>) // androidx.collection/MutableScatterMap.plusAssign|plusAssign(kotlin.Pair<1:0,1:1>){}[0]
    final inline fun removeIf(kotlin/Function2<#A, #B, kotlin/Boolean>) // androidx.collection/MutableScatterMap.removeIf|removeIf(kotlin.Function2<1:0,1:1,kotlin.Boolean>){}[0]
}

final class <#A: kotlin/Any?> androidx.collection/ArraySet : kotlin.collections/MutableCollection<#A>, kotlin.collections/MutableSet<#A> { // androidx.collection/ArraySet|null[0]
    constructor <init>(androidx.collection/ArraySet<out #A>?) // androidx.collection/ArraySet.<init>|<init>(androidx.collection.ArraySet<out|1:0>?){}[0]
    constructor <init>(kotlin.collections/Collection<#A>?) // androidx.collection/ArraySet.<init>|<init>(kotlin.collections.Collection<1:0>?){}[0]
    constructor <init>(kotlin/Array<out #A>?) // androidx.collection/ArraySet.<init>|<init>(kotlin.Array<out|1:0>?){}[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/ArraySet.<init>|<init>(kotlin.Int){}[0]

    final val size // androidx.collection/ArraySet.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/ArraySet.size.<get-size>|<get-size>(){}[0]

    final fun add(#A): kotlin/Boolean // androidx.collection/ArraySet.add|add(1:0){}[0]
    final fun addAll(androidx.collection/ArraySet<out #A>) // androidx.collection/ArraySet.addAll|addAll(androidx.collection.ArraySet<out|1:0>){}[0]
    final fun addAll(kotlin.collections/Collection<#A>): kotlin/Boolean // androidx.collection/ArraySet.addAll|addAll(kotlin.collections.Collection<1:0>){}[0]
    final fun clear() // androidx.collection/ArraySet.clear|clear(){}[0]
    final fun contains(#A): kotlin/Boolean // androidx.collection/ArraySet.contains|contains(1:0){}[0]
    final fun containsAll(kotlin.collections/Collection<#A>): kotlin/Boolean // androidx.collection/ArraySet.containsAll|containsAll(kotlin.collections.Collection<1:0>){}[0]
    final fun ensureCapacity(kotlin/Int) // androidx.collection/ArraySet.ensureCapacity|ensureCapacity(kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/ArraySet.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.collection/ArraySet.hashCode|hashCode(){}[0]
    final fun indexOf(kotlin/Any?): kotlin/Int // androidx.collection/ArraySet.indexOf|indexOf(kotlin.Any?){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/ArraySet.isEmpty|isEmpty(){}[0]
    final fun iterator(): kotlin.collections/MutableIterator<#A> // androidx.collection/ArraySet.iterator|iterator(){}[0]
    final fun remove(#A): kotlin/Boolean // androidx.collection/ArraySet.remove|remove(1:0){}[0]
    final fun removeAll(androidx.collection/ArraySet<out #A>): kotlin/Boolean // androidx.collection/ArraySet.removeAll|removeAll(androidx.collection.ArraySet<out|1:0>){}[0]
    final fun removeAll(kotlin.collections/Collection<#A>): kotlin/Boolean // androidx.collection/ArraySet.removeAll|removeAll(kotlin.collections.Collection<1:0>){}[0]
    final fun removeAt(kotlin/Int): #A // androidx.collection/ArraySet.removeAt|removeAt(kotlin.Int){}[0]
    final fun retainAll(kotlin.collections/Collection<#A>): kotlin/Boolean // androidx.collection/ArraySet.retainAll|retainAll(kotlin.collections.Collection<1:0>){}[0]
    final fun toString(): kotlin/String // androidx.collection/ArraySet.toString|toString(){}[0]
    final fun valueAt(kotlin/Int): #A // androidx.collection/ArraySet.valueAt|valueAt(kotlin.Int){}[0]
}

final class <#A: kotlin/Any?> androidx.collection/CircularArray { // androidx.collection/CircularArray|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/CircularArray.<init>|<init>(kotlin.Int){}[0]

    final val first // androidx.collection/CircularArray.first|{}first[0]
        final fun <get-first>(): #A // androidx.collection/CircularArray.first.<get-first>|<get-first>(){}[0]
    final val last // androidx.collection/CircularArray.last|{}last[0]
        final fun <get-last>(): #A // androidx.collection/CircularArray.last.<get-last>|<get-last>(){}[0]

    final fun addFirst(#A) // androidx.collection/CircularArray.addFirst|addFirst(1:0){}[0]
    final fun addLast(#A) // androidx.collection/CircularArray.addLast|addLast(1:0){}[0]
    final fun clear() // androidx.collection/CircularArray.clear|clear(){}[0]
    final fun get(kotlin/Int): #A // androidx.collection/CircularArray.get|get(kotlin.Int){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/CircularArray.isEmpty|isEmpty(){}[0]
    final fun popFirst(): #A // androidx.collection/CircularArray.popFirst|popFirst(){}[0]
    final fun popLast(): #A // androidx.collection/CircularArray.popLast|popLast(){}[0]
    final fun removeFromEnd(kotlin/Int) // androidx.collection/CircularArray.removeFromEnd|removeFromEnd(kotlin.Int){}[0]
    final fun removeFromStart(kotlin/Int) // androidx.collection/CircularArray.removeFromStart|removeFromStart(kotlin.Int){}[0]
    final fun size(): kotlin/Int // androidx.collection/CircularArray.size|size(){}[0]
}

final class <#A: kotlin/Any?> androidx.collection/MutableFloatObjectMap : androidx.collection/FloatObjectMap<#A> { // androidx.collection/MutableFloatObjectMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableFloatObjectMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableFloatObjectMap.clear|clear(){}[0]
    final fun put(kotlin/Float, #A): #A? // androidx.collection/MutableFloatObjectMap.put|put(kotlin.Float;1:0){}[0]
    final fun putAll(androidx.collection/FloatObjectMap<#A>) // androidx.collection/MutableFloatObjectMap.putAll|putAll(androidx.collection.FloatObjectMap<1:0>){}[0]
    final fun remove(kotlin/Float): #A? // androidx.collection/MutableFloatObjectMap.remove|remove(kotlin.Float){}[0]
    final fun remove(kotlin/Float, #A): kotlin/Boolean // androidx.collection/MutableFloatObjectMap.remove|remove(kotlin.Float;1:0){}[0]
    final fun removeValueAt(kotlin/Int): #A? // androidx.collection/MutableFloatObjectMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(kotlin/Float, #A) // androidx.collection/MutableFloatObjectMap.set|set(kotlin.Float;1:0){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableFloatObjectMap.trim|trim(){}[0]
    final inline fun getOrPut(kotlin/Float, kotlin/Function0<#A>): #A // androidx.collection/MutableFloatObjectMap.getOrPut|getOrPut(kotlin.Float;kotlin.Function0<1:0>){}[0]
    final inline fun minusAssign(androidx.collection/FloatList) // androidx.collection/MutableFloatObjectMap.minusAssign|minusAssign(androidx.collection.FloatList){}[0]
    final inline fun minusAssign(androidx.collection/FloatSet) // androidx.collection/MutableFloatObjectMap.minusAssign|minusAssign(androidx.collection.FloatSet){}[0]
    final inline fun minusAssign(kotlin/Float) // androidx.collection/MutableFloatObjectMap.minusAssign|minusAssign(kotlin.Float){}[0]
    final inline fun minusAssign(kotlin/FloatArray) // androidx.collection/MutableFloatObjectMap.minusAssign|minusAssign(kotlin.FloatArray){}[0]
    final inline fun plusAssign(androidx.collection/FloatObjectMap<#A>) // androidx.collection/MutableFloatObjectMap.plusAssign|plusAssign(androidx.collection.FloatObjectMap<1:0>){}[0]
    final inline fun removeIf(kotlin/Function2<kotlin/Float, #A, kotlin/Boolean>) // androidx.collection/MutableFloatObjectMap.removeIf|removeIf(kotlin.Function2<kotlin.Float,1:0,kotlin.Boolean>){}[0]
}

final class <#A: kotlin/Any?> androidx.collection/MutableIntObjectMap : androidx.collection/IntObjectMap<#A> { // androidx.collection/MutableIntObjectMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableIntObjectMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableIntObjectMap.clear|clear(){}[0]
    final fun put(kotlin/Int, #A): #A? // androidx.collection/MutableIntObjectMap.put|put(kotlin.Int;1:0){}[0]
    final fun putAll(androidx.collection/IntObjectMap<#A>) // androidx.collection/MutableIntObjectMap.putAll|putAll(androidx.collection.IntObjectMap<1:0>){}[0]
    final fun remove(kotlin/Int): #A? // androidx.collection/MutableIntObjectMap.remove|remove(kotlin.Int){}[0]
    final fun remove(kotlin/Int, #A): kotlin/Boolean // androidx.collection/MutableIntObjectMap.remove|remove(kotlin.Int;1:0){}[0]
    final fun removeValueAt(kotlin/Int): #A? // androidx.collection/MutableIntObjectMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(kotlin/Int, #A) // androidx.collection/MutableIntObjectMap.set|set(kotlin.Int;1:0){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableIntObjectMap.trim|trim(){}[0]
    final inline fun getOrPut(kotlin/Int, kotlin/Function0<#A>): #A // androidx.collection/MutableIntObjectMap.getOrPut|getOrPut(kotlin.Int;kotlin.Function0<1:0>){}[0]
    final inline fun minusAssign(androidx.collection/IntList) // androidx.collection/MutableIntObjectMap.minusAssign|minusAssign(androidx.collection.IntList){}[0]
    final inline fun minusAssign(androidx.collection/IntSet) // androidx.collection/MutableIntObjectMap.minusAssign|minusAssign(androidx.collection.IntSet){}[0]
    final inline fun minusAssign(kotlin/Int) // androidx.collection/MutableIntObjectMap.minusAssign|minusAssign(kotlin.Int){}[0]
    final inline fun minusAssign(kotlin/IntArray) // androidx.collection/MutableIntObjectMap.minusAssign|minusAssign(kotlin.IntArray){}[0]
    final inline fun plusAssign(androidx.collection/IntObjectMap<#A>) // androidx.collection/MutableIntObjectMap.plusAssign|plusAssign(androidx.collection.IntObjectMap<1:0>){}[0]
    final inline fun removeIf(kotlin/Function2<kotlin/Int, #A, kotlin/Boolean>) // androidx.collection/MutableIntObjectMap.removeIf|removeIf(kotlin.Function2<kotlin.Int,1:0,kotlin.Boolean>){}[0]
}

final class <#A: kotlin/Any?> androidx.collection/MutableLongObjectMap : androidx.collection/LongObjectMap<#A> { // androidx.collection/MutableLongObjectMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableLongObjectMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableLongObjectMap.clear|clear(){}[0]
    final fun put(kotlin/Long, #A): #A? // androidx.collection/MutableLongObjectMap.put|put(kotlin.Long;1:0){}[0]
    final fun putAll(androidx.collection/LongObjectMap<#A>) // androidx.collection/MutableLongObjectMap.putAll|putAll(androidx.collection.LongObjectMap<1:0>){}[0]
    final fun remove(kotlin/Long): #A? // androidx.collection/MutableLongObjectMap.remove|remove(kotlin.Long){}[0]
    final fun remove(kotlin/Long, #A): kotlin/Boolean // androidx.collection/MutableLongObjectMap.remove|remove(kotlin.Long;1:0){}[0]
    final fun removeValueAt(kotlin/Int): #A? // androidx.collection/MutableLongObjectMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(kotlin/Long, #A) // androidx.collection/MutableLongObjectMap.set|set(kotlin.Long;1:0){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableLongObjectMap.trim|trim(){}[0]
    final inline fun getOrPut(kotlin/Long, kotlin/Function0<#A>): #A // androidx.collection/MutableLongObjectMap.getOrPut|getOrPut(kotlin.Long;kotlin.Function0<1:0>){}[0]
    final inline fun minusAssign(androidx.collection/LongList) // androidx.collection/MutableLongObjectMap.minusAssign|minusAssign(androidx.collection.LongList){}[0]
    final inline fun minusAssign(androidx.collection/LongSet) // androidx.collection/MutableLongObjectMap.minusAssign|minusAssign(androidx.collection.LongSet){}[0]
    final inline fun minusAssign(kotlin/Long) // androidx.collection/MutableLongObjectMap.minusAssign|minusAssign(kotlin.Long){}[0]
    final inline fun minusAssign(kotlin/LongArray) // androidx.collection/MutableLongObjectMap.minusAssign|minusAssign(kotlin.LongArray){}[0]
    final inline fun plusAssign(androidx.collection/LongObjectMap<#A>) // androidx.collection/MutableLongObjectMap.plusAssign|plusAssign(androidx.collection.LongObjectMap<1:0>){}[0]
    final inline fun removeIf(kotlin/Function2<kotlin/Long, #A, kotlin/Boolean>) // androidx.collection/MutableLongObjectMap.removeIf|removeIf(kotlin.Function2<kotlin.Long,1:0,kotlin.Boolean>){}[0]
}

final class <#A: kotlin/Any?> androidx.collection/MutableObjectFloatMap : androidx.collection/ObjectFloatMap<#A> { // androidx.collection/MutableObjectFloatMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableObjectFloatMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableObjectFloatMap.clear|clear(){}[0]
    final fun put(#A, kotlin/Float) // androidx.collection/MutableObjectFloatMap.put|put(1:0;kotlin.Float){}[0]
    final fun put(#A, kotlin/Float, kotlin/Float): kotlin/Float // androidx.collection/MutableObjectFloatMap.put|put(1:0;kotlin.Float;kotlin.Float){}[0]
    final fun putAll(androidx.collection/ObjectFloatMap<#A>) // androidx.collection/MutableObjectFloatMap.putAll|putAll(androidx.collection.ObjectFloatMap<1:0>){}[0]
    final fun remove(#A) // androidx.collection/MutableObjectFloatMap.remove|remove(1:0){}[0]
    final fun remove(#A, kotlin/Float): kotlin/Boolean // androidx.collection/MutableObjectFloatMap.remove|remove(1:0;kotlin.Float){}[0]
    final fun removeValueAt(kotlin/Int) // androidx.collection/MutableObjectFloatMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(#A, kotlin/Float) // androidx.collection/MutableObjectFloatMap.set|set(1:0;kotlin.Float){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableObjectFloatMap.trim|trim(){}[0]
    final inline fun getOrPut(#A, kotlin/Function0<kotlin/Float>): kotlin/Float // androidx.collection/MutableObjectFloatMap.getOrPut|getOrPut(1:0;kotlin.Function0<kotlin.Float>){}[0]
    final inline fun minusAssign(#A) // androidx.collection/MutableObjectFloatMap.minusAssign|minusAssign(1:0){}[0]
    final inline fun minusAssign(androidx.collection/ScatterSet<#A>) // androidx.collection/MutableObjectFloatMap.minusAssign|minusAssign(androidx.collection.ScatterSet<1:0>){}[0]
    final inline fun minusAssign(kotlin.collections/Iterable<#A>) // androidx.collection/MutableObjectFloatMap.minusAssign|minusAssign(kotlin.collections.Iterable<1:0>){}[0]
    final inline fun minusAssign(kotlin.sequences/Sequence<#A>) // androidx.collection/MutableObjectFloatMap.minusAssign|minusAssign(kotlin.sequences.Sequence<1:0>){}[0]
    final inline fun minusAssign(kotlin/Array<out #A>) // androidx.collection/MutableObjectFloatMap.minusAssign|minusAssign(kotlin.Array<out|1:0>){}[0]
    final inline fun plusAssign(androidx.collection/ObjectFloatMap<#A>) // androidx.collection/MutableObjectFloatMap.plusAssign|plusAssign(androidx.collection.ObjectFloatMap<1:0>){}[0]
    final inline fun removeIf(kotlin/Function2<#A, kotlin/Float, kotlin/Boolean>) // androidx.collection/MutableObjectFloatMap.removeIf|removeIf(kotlin.Function2<1:0,kotlin.Float,kotlin.Boolean>){}[0]
}

final class <#A: kotlin/Any?> androidx.collection/MutableObjectIntMap : androidx.collection/ObjectIntMap<#A> { // androidx.collection/MutableObjectIntMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableObjectIntMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableObjectIntMap.clear|clear(){}[0]
    final fun put(#A, kotlin/Int) // androidx.collection/MutableObjectIntMap.put|put(1:0;kotlin.Int){}[0]
    final fun put(#A, kotlin/Int, kotlin/Int): kotlin/Int // androidx.collection/MutableObjectIntMap.put|put(1:0;kotlin.Int;kotlin.Int){}[0]
    final fun putAll(androidx.collection/ObjectIntMap<#A>) // androidx.collection/MutableObjectIntMap.putAll|putAll(androidx.collection.ObjectIntMap<1:0>){}[0]
    final fun remove(#A) // androidx.collection/MutableObjectIntMap.remove|remove(1:0){}[0]
    final fun remove(#A, kotlin/Int): kotlin/Boolean // androidx.collection/MutableObjectIntMap.remove|remove(1:0;kotlin.Int){}[0]
    final fun removeValueAt(kotlin/Int) // androidx.collection/MutableObjectIntMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(#A, kotlin/Int) // androidx.collection/MutableObjectIntMap.set|set(1:0;kotlin.Int){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableObjectIntMap.trim|trim(){}[0]
    final inline fun getOrPut(#A, kotlin/Function0<kotlin/Int>): kotlin/Int // androidx.collection/MutableObjectIntMap.getOrPut|getOrPut(1:0;kotlin.Function0<kotlin.Int>){}[0]
    final inline fun minusAssign(#A) // androidx.collection/MutableObjectIntMap.minusAssign|minusAssign(1:0){}[0]
    final inline fun minusAssign(androidx.collection/ScatterSet<#A>) // androidx.collection/MutableObjectIntMap.minusAssign|minusAssign(androidx.collection.ScatterSet<1:0>){}[0]
    final inline fun minusAssign(kotlin.collections/Iterable<#A>) // androidx.collection/MutableObjectIntMap.minusAssign|minusAssign(kotlin.collections.Iterable<1:0>){}[0]
    final inline fun minusAssign(kotlin.sequences/Sequence<#A>) // androidx.collection/MutableObjectIntMap.minusAssign|minusAssign(kotlin.sequences.Sequence<1:0>){}[0]
    final inline fun minusAssign(kotlin/Array<out #A>) // androidx.collection/MutableObjectIntMap.minusAssign|minusAssign(kotlin.Array<out|1:0>){}[0]
    final inline fun plusAssign(androidx.collection/ObjectIntMap<#A>) // androidx.collection/MutableObjectIntMap.plusAssign|plusAssign(androidx.collection.ObjectIntMap<1:0>){}[0]
    final inline fun removeIf(kotlin/Function2<#A, kotlin/Int, kotlin/Boolean>) // androidx.collection/MutableObjectIntMap.removeIf|removeIf(kotlin.Function2<1:0,kotlin.Int,kotlin.Boolean>){}[0]
}

final class <#A: kotlin/Any?> androidx.collection/MutableObjectList : androidx.collection/ObjectList<#A> { // androidx.collection/MutableObjectList|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableObjectList.<init>|<init>(kotlin.Int){}[0]

    final val capacity // androidx.collection/MutableObjectList.capacity|{}capacity[0]
        final inline fun <get-capacity>(): kotlin/Int // androidx.collection/MutableObjectList.capacity.<get-capacity>|<get-capacity>(){}[0]

    final fun add(#A): kotlin/Boolean // androidx.collection/MutableObjectList.add|add(1:0){}[0]
    final fun add(kotlin/Int, #A) // androidx.collection/MutableObjectList.add|add(kotlin.Int;1:0){}[0]
    final fun addAll(androidx.collection/ObjectList<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.addAll|addAll(androidx.collection.ObjectList<1:0>){}[0]
    final fun addAll(androidx.collection/ScatterSet<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.addAll|addAll(androidx.collection.ScatterSet<1:0>){}[0]
    final fun addAll(kotlin.collections/Iterable<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.addAll|addAll(kotlin.collections.Iterable<1:0>){}[0]
    final fun addAll(kotlin.collections/List<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.addAll|addAll(kotlin.collections.List<1:0>){}[0]
    final fun addAll(kotlin.sequences/Sequence<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.addAll|addAll(kotlin.sequences.Sequence<1:0>){}[0]
    final fun addAll(kotlin/Array<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.addAll|addAll(kotlin.Array<1:0>){}[0]
    final fun addAll(kotlin/Int, androidx.collection/ObjectList<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.addAll|addAll(kotlin.Int;androidx.collection.ObjectList<1:0>){}[0]
    final fun addAll(kotlin/Int, kotlin.collections/Collection<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.addAll|addAll(kotlin.Int;kotlin.collections.Collection<1:0>){}[0]
    final fun addAll(kotlin/Int, kotlin/Array<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.addAll|addAll(kotlin.Int;kotlin.Array<1:0>){}[0]
    final fun asList(): kotlin.collections/List<#A> // androidx.collection/MutableObjectList.asList|asList(){}[0]
    final fun asMutableList(): kotlin.collections/MutableList<#A> // androidx.collection/MutableObjectList.asMutableList|asMutableList(){}[0]
    final fun clear() // androidx.collection/MutableObjectList.clear|clear(){}[0]
    final fun ensureCapacity(kotlin/Int) // androidx.collection/MutableObjectList.ensureCapacity|ensureCapacity(kotlin.Int){}[0]
    final fun minusAssign(androidx.collection/ObjectList<#A>) // androidx.collection/MutableObjectList.minusAssign|minusAssign(androidx.collection.ObjectList<1:0>){}[0]
    final fun minusAssign(androidx.collection/ScatterSet<#A>) // androidx.collection/MutableObjectList.minusAssign|minusAssign(androidx.collection.ScatterSet<1:0>){}[0]
    final fun minusAssign(kotlin.collections/Iterable<#A>) // androidx.collection/MutableObjectList.minusAssign|minusAssign(kotlin.collections.Iterable<1:0>){}[0]
    final fun minusAssign(kotlin.collections/List<#A>) // androidx.collection/MutableObjectList.minusAssign|minusAssign(kotlin.collections.List<1:0>){}[0]
    final fun minusAssign(kotlin.sequences/Sequence<#A>) // androidx.collection/MutableObjectList.minusAssign|minusAssign(kotlin.sequences.Sequence<1:0>){}[0]
    final fun minusAssign(kotlin/Array<#A>) // androidx.collection/MutableObjectList.minusAssign|minusAssign(kotlin.Array<1:0>){}[0]
    final fun plusAssign(androidx.collection/ObjectList<#A>) // androidx.collection/MutableObjectList.plusAssign|plusAssign(androidx.collection.ObjectList<1:0>){}[0]
    final fun plusAssign(androidx.collection/ScatterSet<#A>) // androidx.collection/MutableObjectList.plusAssign|plusAssign(androidx.collection.ScatterSet<1:0>){}[0]
    final fun plusAssign(kotlin.collections/Iterable<#A>) // androidx.collection/MutableObjectList.plusAssign|plusAssign(kotlin.collections.Iterable<1:0>){}[0]
    final fun plusAssign(kotlin.collections/List<#A>) // androidx.collection/MutableObjectList.plusAssign|plusAssign(kotlin.collections.List<1:0>){}[0]
    final fun plusAssign(kotlin.sequences/Sequence<#A>) // androidx.collection/MutableObjectList.plusAssign|plusAssign(kotlin.sequences.Sequence<1:0>){}[0]
    final fun plusAssign(kotlin/Array<#A>) // androidx.collection/MutableObjectList.plusAssign|plusAssign(kotlin.Array<1:0>){}[0]
    final fun remove(#A): kotlin/Boolean // androidx.collection/MutableObjectList.remove|remove(1:0){}[0]
    final fun removeAll(androidx.collection/ObjectList<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.removeAll|removeAll(androidx.collection.ObjectList<1:0>){}[0]
    final fun removeAll(androidx.collection/ScatterSet<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.removeAll|removeAll(androidx.collection.ScatterSet<1:0>){}[0]
    final fun removeAll(kotlin.collections/Iterable<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.removeAll|removeAll(kotlin.collections.Iterable<1:0>){}[0]
    final fun removeAll(kotlin.collections/List<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.removeAll|removeAll(kotlin.collections.List<1:0>){}[0]
    final fun removeAll(kotlin.sequences/Sequence<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.removeAll|removeAll(kotlin.sequences.Sequence<1:0>){}[0]
    final fun removeAll(kotlin/Array<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.removeAll|removeAll(kotlin.Array<1:0>){}[0]
    final fun removeAt(kotlin/Int): #A // androidx.collection/MutableObjectList.removeAt|removeAt(kotlin.Int){}[0]
    final fun removeRange(kotlin/Int, kotlin/Int) // androidx.collection/MutableObjectList.removeRange|removeRange(kotlin.Int;kotlin.Int){}[0]
    final fun retainAll(androidx.collection/ObjectList<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.retainAll|retainAll(androidx.collection.ObjectList<1:0>){}[0]
    final fun retainAll(kotlin.collections/Collection<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.retainAll|retainAll(kotlin.collections.Collection<1:0>){}[0]
    final fun retainAll(kotlin.collections/Iterable<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.retainAll|retainAll(kotlin.collections.Iterable<1:0>){}[0]
    final fun retainAll(kotlin.sequences/Sequence<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.retainAll|retainAll(kotlin.sequences.Sequence<1:0>){}[0]
    final fun retainAll(kotlin/Array<#A>): kotlin/Boolean // androidx.collection/MutableObjectList.retainAll|retainAll(kotlin.Array<1:0>){}[0]
    final fun set(kotlin/Int, #A): #A // androidx.collection/MutableObjectList.set|set(kotlin.Int;1:0){}[0]
    final fun trim(kotlin/Int = ...) // androidx.collection/MutableObjectList.trim|trim(kotlin.Int){}[0]
    final inline fun minusAssign(#A) // androidx.collection/MutableObjectList.minusAssign|minusAssign(1:0){}[0]
    final inline fun plusAssign(#A) // androidx.collection/MutableObjectList.plusAssign|plusAssign(1:0){}[0]
    final inline fun removeIf(kotlin/Function1<#A, kotlin/Boolean>) // androidx.collection/MutableObjectList.removeIf|removeIf(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
}

final class <#A: kotlin/Any?> androidx.collection/MutableObjectLongMap : androidx.collection/ObjectLongMap<#A> { // androidx.collection/MutableObjectLongMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableObjectLongMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableObjectLongMap.clear|clear(){}[0]
    final fun put(#A, kotlin/Long) // androidx.collection/MutableObjectLongMap.put|put(1:0;kotlin.Long){}[0]
    final fun put(#A, kotlin/Long, kotlin/Long): kotlin/Long // androidx.collection/MutableObjectLongMap.put|put(1:0;kotlin.Long;kotlin.Long){}[0]
    final fun putAll(androidx.collection/ObjectLongMap<#A>) // androidx.collection/MutableObjectLongMap.putAll|putAll(androidx.collection.ObjectLongMap<1:0>){}[0]
    final fun remove(#A) // androidx.collection/MutableObjectLongMap.remove|remove(1:0){}[0]
    final fun remove(#A, kotlin/Long): kotlin/Boolean // androidx.collection/MutableObjectLongMap.remove|remove(1:0;kotlin.Long){}[0]
    final fun removeValueAt(kotlin/Int) // androidx.collection/MutableObjectLongMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(#A, kotlin/Long) // androidx.collection/MutableObjectLongMap.set|set(1:0;kotlin.Long){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableObjectLongMap.trim|trim(){}[0]
    final inline fun getOrPut(#A, kotlin/Function0<kotlin/Long>): kotlin/Long // androidx.collection/MutableObjectLongMap.getOrPut|getOrPut(1:0;kotlin.Function0<kotlin.Long>){}[0]
    final inline fun minusAssign(#A) // androidx.collection/MutableObjectLongMap.minusAssign|minusAssign(1:0){}[0]
    final inline fun minusAssign(androidx.collection/ScatterSet<#A>) // androidx.collection/MutableObjectLongMap.minusAssign|minusAssign(androidx.collection.ScatterSet<1:0>){}[0]
    final inline fun minusAssign(kotlin.collections/Iterable<#A>) // androidx.collection/MutableObjectLongMap.minusAssign|minusAssign(kotlin.collections.Iterable<1:0>){}[0]
    final inline fun minusAssign(kotlin.sequences/Sequence<#A>) // androidx.collection/MutableObjectLongMap.minusAssign|minusAssign(kotlin.sequences.Sequence<1:0>){}[0]
    final inline fun minusAssign(kotlin/Array<out #A>) // androidx.collection/MutableObjectLongMap.minusAssign|minusAssign(kotlin.Array<out|1:0>){}[0]
    final inline fun plusAssign(androidx.collection/ObjectLongMap<#A>) // androidx.collection/MutableObjectLongMap.plusAssign|plusAssign(androidx.collection.ObjectLongMap<1:0>){}[0]
    final inline fun removeIf(kotlin/Function2<#A, kotlin/Long, kotlin/Boolean>) // androidx.collection/MutableObjectLongMap.removeIf|removeIf(kotlin.Function2<1:0,kotlin.Long,kotlin.Boolean>){}[0]
}

final class <#A: kotlin/Any?> androidx.collection/MutableOrderedScatterSet : androidx.collection/OrderedScatterSet<#A> { // androidx.collection/MutableOrderedScatterSet|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableOrderedScatterSet.<init>|<init>(kotlin.Int){}[0]

    final fun add(#A): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.add|add(1:0){}[0]
    final fun addAll(androidx.collection/ObjectList<#A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.addAll|addAll(androidx.collection.ObjectList<1:0>){}[0]
    final fun addAll(androidx.collection/OrderedScatterSet<#A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.addAll|addAll(androidx.collection.OrderedScatterSet<1:0>){}[0]
    final fun addAll(androidx.collection/ScatterSet<#A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.addAll|addAll(androidx.collection.ScatterSet<1:0>){}[0]
    final fun addAll(kotlin.collections/Iterable<#A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.addAll|addAll(kotlin.collections.Iterable<1:0>){}[0]
    final fun addAll(kotlin.sequences/Sequence<#A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.addAll|addAll(kotlin.sequences.Sequence<1:0>){}[0]
    final fun addAll(kotlin/Array<out #A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.addAll|addAll(kotlin.Array<out|1:0>){}[0]
    final fun asMutableSet(): kotlin.collections/MutableSet<#A> // androidx.collection/MutableOrderedScatterSet.asMutableSet|asMutableSet(){}[0]
    final fun clear() // androidx.collection/MutableOrderedScatterSet.clear|clear(){}[0]
    final fun minusAssign(#A) // androidx.collection/MutableOrderedScatterSet.minusAssign|minusAssign(1:0){}[0]
    final fun minusAssign(androidx.collection/ObjectList<#A>) // androidx.collection/MutableOrderedScatterSet.minusAssign|minusAssign(androidx.collection.ObjectList<1:0>){}[0]
    final fun minusAssign(androidx.collection/OrderedScatterSet<#A>) // androidx.collection/MutableOrderedScatterSet.minusAssign|minusAssign(androidx.collection.OrderedScatterSet<1:0>){}[0]
    final fun minusAssign(androidx.collection/ScatterSet<#A>) // androidx.collection/MutableOrderedScatterSet.minusAssign|minusAssign(androidx.collection.ScatterSet<1:0>){}[0]
    final fun minusAssign(kotlin.collections/Iterable<#A>) // androidx.collection/MutableOrderedScatterSet.minusAssign|minusAssign(kotlin.collections.Iterable<1:0>){}[0]
    final fun minusAssign(kotlin.sequences/Sequence<#A>) // androidx.collection/MutableOrderedScatterSet.minusAssign|minusAssign(kotlin.sequences.Sequence<1:0>){}[0]
    final fun minusAssign(kotlin/Array<out #A>) // androidx.collection/MutableOrderedScatterSet.minusAssign|minusAssign(kotlin.Array<out|1:0>){}[0]
    final fun plusAssign(#A) // androidx.collection/MutableOrderedScatterSet.plusAssign|plusAssign(1:0){}[0]
    final fun plusAssign(androidx.collection/ObjectList<#A>) // androidx.collection/MutableOrderedScatterSet.plusAssign|plusAssign(androidx.collection.ObjectList<1:0>){}[0]
    final fun plusAssign(androidx.collection/OrderedScatterSet<#A>) // androidx.collection/MutableOrderedScatterSet.plusAssign|plusAssign(androidx.collection.OrderedScatterSet<1:0>){}[0]
    final fun plusAssign(androidx.collection/ScatterSet<#A>) // androidx.collection/MutableOrderedScatterSet.plusAssign|plusAssign(androidx.collection.ScatterSet<1:0>){}[0]
    final fun plusAssign(kotlin.collections/Iterable<#A>) // androidx.collection/MutableOrderedScatterSet.plusAssign|plusAssign(kotlin.collections.Iterable<1:0>){}[0]
    final fun plusAssign(kotlin.sequences/Sequence<#A>) // androidx.collection/MutableOrderedScatterSet.plusAssign|plusAssign(kotlin.sequences.Sequence<1:0>){}[0]
    final fun plusAssign(kotlin/Array<out #A>) // androidx.collection/MutableOrderedScatterSet.plusAssign|plusAssign(kotlin.Array<out|1:0>){}[0]
    final fun remove(#A): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.remove|remove(1:0){}[0]
    final fun removeAll(androidx.collection/ObjectList<#A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.removeAll|removeAll(androidx.collection.ObjectList<1:0>){}[0]
    final fun removeAll(androidx.collection/OrderedScatterSet<#A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.removeAll|removeAll(androidx.collection.OrderedScatterSet<1:0>){}[0]
    final fun removeAll(androidx.collection/ScatterSet<#A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.removeAll|removeAll(androidx.collection.ScatterSet<1:0>){}[0]
    final fun removeAll(kotlin.collections/Iterable<#A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.removeAll|removeAll(kotlin.collections.Iterable<1:0>){}[0]
    final fun removeAll(kotlin.sequences/Sequence<#A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.removeAll|removeAll(kotlin.sequences.Sequence<1:0>){}[0]
    final fun removeAll(kotlin/Array<out #A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.removeAll|removeAll(kotlin.Array<out|1:0>){}[0]
    final fun removeElementAt(kotlin/Int) // androidx.collection/MutableOrderedScatterSet.removeElementAt|removeElementAt(kotlin.Int){}[0]
    final fun retainAll(androidx.collection/OrderedScatterSet<#A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.retainAll|retainAll(androidx.collection.OrderedScatterSet<1:0>){}[0]
    final fun retainAll(androidx.collection/ScatterSet<#A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.retainAll|retainAll(androidx.collection.ScatterSet<1:0>){}[0]
    final fun retainAll(kotlin.collections/Collection<#A>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.retainAll|retainAll(kotlin.collections.Collection<1:0>){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableOrderedScatterSet.trim|trim(){}[0]
    final fun trimToSize(kotlin/Int) // androidx.collection/MutableOrderedScatterSet.trimToSize|trimToSize(kotlin.Int){}[0]
    final inline fun removeIf(kotlin/Function1<#A, kotlin/Boolean>) // androidx.collection/MutableOrderedScatterSet.removeIf|removeIf(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun retainAll(kotlin/Function1<#A, kotlin/Boolean>): kotlin/Boolean // androidx.collection/MutableOrderedScatterSet.retainAll|retainAll(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
}

final class <#A: kotlin/Any?> androidx.collection/MutableScatterSet : androidx.collection/ScatterSet<#A> { // androidx.collection/MutableScatterSet|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableScatterSet.<init>|<init>(kotlin.Int){}[0]

    final fun add(#A): kotlin/Boolean // androidx.collection/MutableScatterSet.add|add(1:0){}[0]
    final fun addAll(androidx.collection/ObjectList<#A>): kotlin/Boolean // androidx.collection/MutableScatterSet.addAll|addAll(androidx.collection.ObjectList<1:0>){}[0]
    final fun addAll(androidx.collection/OrderedScatterSet<#A>): kotlin/Boolean // androidx.collection/MutableScatterSet.addAll|addAll(androidx.collection.OrderedScatterSet<1:0>){}[0]
    final fun addAll(androidx.collection/ScatterSet<#A>): kotlin/Boolean // androidx.collection/MutableScatterSet.addAll|addAll(androidx.collection.ScatterSet<1:0>){}[0]
    final fun addAll(kotlin.collections/Iterable<#A>): kotlin/Boolean // androidx.collection/MutableScatterSet.addAll|addAll(kotlin.collections.Iterable<1:0>){}[0]
    final fun addAll(kotlin.sequences/Sequence<#A>): kotlin/Boolean // androidx.collection/MutableScatterSet.addAll|addAll(kotlin.sequences.Sequence<1:0>){}[0]
    final fun addAll(kotlin/Array<out #A>): kotlin/Boolean // androidx.collection/MutableScatterSet.addAll|addAll(kotlin.Array<out|1:0>){}[0]
    final fun asMutableSet(): kotlin.collections/MutableSet<#A> // androidx.collection/MutableScatterSet.asMutableSet|asMutableSet(){}[0]
    final fun clear() // androidx.collection/MutableScatterSet.clear|clear(){}[0]
    final fun minusAssign(#A) // androidx.collection/MutableScatterSet.minusAssign|minusAssign(1:0){}[0]
    final fun minusAssign(androidx.collection/ObjectList<#A>) // androidx.collection/MutableScatterSet.minusAssign|minusAssign(androidx.collection.ObjectList<1:0>){}[0]
    final fun minusAssign(androidx.collection/OrderedScatterSet<#A>) // androidx.collection/MutableScatterSet.minusAssign|minusAssign(androidx.collection.OrderedScatterSet<1:0>){}[0]
    final fun minusAssign(androidx.collection/ScatterSet<#A>) // androidx.collection/MutableScatterSet.minusAssign|minusAssign(androidx.collection.ScatterSet<1:0>){}[0]
    final fun minusAssign(kotlin.collections/Iterable<#A>) // androidx.collection/MutableScatterSet.minusAssign|minusAssign(kotlin.collections.Iterable<1:0>){}[0]
    final fun minusAssign(kotlin.sequences/Sequence<#A>) // androidx.collection/MutableScatterSet.minusAssign|minusAssign(kotlin.sequences.Sequence<1:0>){}[0]
    final fun minusAssign(kotlin/Array<out #A>) // androidx.collection/MutableScatterSet.minusAssign|minusAssign(kotlin.Array<out|1:0>){}[0]
    final fun plusAssign(#A) // androidx.collection/MutableScatterSet.plusAssign|plusAssign(1:0){}[0]
    final fun plusAssign(androidx.collection/ObjectList<#A>) // androidx.collection/MutableScatterSet.plusAssign|plusAssign(androidx.collection.ObjectList<1:0>){}[0]
    final fun plusAssign(androidx.collection/OrderedScatterSet<#A>) // androidx.collection/MutableScatterSet.plusAssign|plusAssign(androidx.collection.OrderedScatterSet<1:0>){}[0]
    final fun plusAssign(androidx.collection/ScatterSet<#A>) // androidx.collection/MutableScatterSet.plusAssign|plusAssign(androidx.collection.ScatterSet<1:0>){}[0]
    final fun plusAssign(kotlin.collections/Iterable<#A>) // androidx.collection/MutableScatterSet.plusAssign|plusAssign(kotlin.collections.Iterable<1:0>){}[0]
    final fun plusAssign(kotlin.sequences/Sequence<#A>) // androidx.collection/MutableScatterSet.plusAssign|plusAssign(kotlin.sequences.Sequence<1:0>){}[0]
    final fun plusAssign(kotlin/Array<out #A>) // androidx.collection/MutableScatterSet.plusAssign|plusAssign(kotlin.Array<out|1:0>){}[0]
    final fun remove(#A): kotlin/Boolean // androidx.collection/MutableScatterSet.remove|remove(1:0){}[0]
    final fun removeAll(androidx.collection/ObjectList<#A>): kotlin/Boolean // androidx.collection/MutableScatterSet.removeAll|removeAll(androidx.collection.ObjectList<1:0>){}[0]
    final fun removeAll(androidx.collection/OrderedScatterSet<#A>): kotlin/Boolean // androidx.collection/MutableScatterSet.removeAll|removeAll(androidx.collection.OrderedScatterSet<1:0>){}[0]
    final fun removeAll(androidx.collection/ScatterSet<#A>): kotlin/Boolean // androidx.collection/MutableScatterSet.removeAll|removeAll(androidx.collection.ScatterSet<1:0>){}[0]
    final fun removeAll(kotlin.collections/Iterable<#A>): kotlin/Boolean // androidx.collection/MutableScatterSet.removeAll|removeAll(kotlin.collections.Iterable<1:0>){}[0]
    final fun removeAll(kotlin.sequences/Sequence<#A>): kotlin/Boolean // androidx.collection/MutableScatterSet.removeAll|removeAll(kotlin.sequences.Sequence<1:0>){}[0]
    final fun removeAll(kotlin/Array<out #A>): kotlin/Boolean // androidx.collection/MutableScatterSet.removeAll|removeAll(kotlin.Array<out|1:0>){}[0]
    final fun removeElementAt(kotlin/Int) // androidx.collection/MutableScatterSet.removeElementAt|removeElementAt(kotlin.Int){}[0]
    final fun retainAll(androidx.collection/OrderedScatterSet<#A>): kotlin/Boolean // androidx.collection/MutableScatterSet.retainAll|retainAll(androidx.collection.OrderedScatterSet<1:0>){}[0]
    final fun retainAll(androidx.collection/ScatterSet<#A>): kotlin/Boolean // androidx.collection/MutableScatterSet.retainAll|retainAll(androidx.collection.ScatterSet<1:0>){}[0]
    final fun retainAll(kotlin.collections/Collection<#A>): kotlin/Boolean // androidx.collection/MutableScatterSet.retainAll|retainAll(kotlin.collections.Collection<1:0>){}[0]
    final fun retainAll(kotlin/Function1<#A, kotlin/Boolean>): kotlin/Boolean // androidx.collection/MutableScatterSet.retainAll|retainAll(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableScatterSet.trim|trim(){}[0]
    final inline fun removeIf(kotlin/Function1<#A, kotlin/Boolean>) // androidx.collection/MutableScatterSet.removeIf|removeIf(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
}

final class androidx.collection/CircularIntArray { // androidx.collection/CircularIntArray|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/CircularIntArray.<init>|<init>(kotlin.Int){}[0]

    final val first // androidx.collection/CircularIntArray.first|{}first[0]
        final fun <get-first>(): kotlin/Int // androidx.collection/CircularIntArray.first.<get-first>|<get-first>(){}[0]
    final val last // androidx.collection/CircularIntArray.last|{}last[0]
        final fun <get-last>(): kotlin/Int // androidx.collection/CircularIntArray.last.<get-last>|<get-last>(){}[0]

    final fun addFirst(kotlin/Int) // androidx.collection/CircularIntArray.addFirst|addFirst(kotlin.Int){}[0]
    final fun addLast(kotlin/Int) // androidx.collection/CircularIntArray.addLast|addLast(kotlin.Int){}[0]
    final fun clear() // androidx.collection/CircularIntArray.clear|clear(){}[0]
    final fun get(kotlin/Int): kotlin/Int // androidx.collection/CircularIntArray.get|get(kotlin.Int){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/CircularIntArray.isEmpty|isEmpty(){}[0]
    final fun popFirst(): kotlin/Int // androidx.collection/CircularIntArray.popFirst|popFirst(){}[0]
    final fun popLast(): kotlin/Int // androidx.collection/CircularIntArray.popLast|popLast(){}[0]
    final fun removeFromEnd(kotlin/Int) // androidx.collection/CircularIntArray.removeFromEnd|removeFromEnd(kotlin.Int){}[0]
    final fun removeFromStart(kotlin/Int) // androidx.collection/CircularIntArray.removeFromStart|removeFromStart(kotlin.Int){}[0]
    final fun size(): kotlin/Int // androidx.collection/CircularIntArray.size|size(){}[0]
}

final class androidx.collection/LongLongPair { // androidx.collection/LongLongPair|null[0]
    constructor <init>(kotlin/Long, kotlin/Long) // androidx.collection/LongLongPair.<init>|<init>(kotlin.Long;kotlin.Long){}[0]

    final val first // androidx.collection/LongLongPair.first|{}first[0]
        final fun <get-first>(): kotlin/Long // androidx.collection/LongLongPair.first.<get-first>|<get-first>(){}[0]
    final val second // androidx.collection/LongLongPair.second|{}second[0]
        final fun <get-second>(): kotlin/Long // androidx.collection/LongLongPair.second.<get-second>|<get-second>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/LongLongPair.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.collection/LongLongPair.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.collection/LongLongPair.toString|toString(){}[0]
    final inline fun component1(): kotlin/Long // androidx.collection/LongLongPair.component1|component1(){}[0]
    final inline fun component2(): kotlin/Long // androidx.collection/LongLongPair.component2|component2(){}[0]
}

final class androidx.collection/MutableDoubleList : androidx.collection/DoubleList { // androidx.collection/MutableDoubleList|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableDoubleList.<init>|<init>(kotlin.Int){}[0]

    final val capacity // androidx.collection/MutableDoubleList.capacity|{}capacity[0]
        final inline fun <get-capacity>(): kotlin/Int // androidx.collection/MutableDoubleList.capacity.<get-capacity>|<get-capacity>(){}[0]

    final fun add(kotlin/Double): kotlin/Boolean // androidx.collection/MutableDoubleList.add|add(kotlin.Double){}[0]
    final fun add(kotlin/Int, kotlin/Double) // androidx.collection/MutableDoubleList.add|add(kotlin.Int;kotlin.Double){}[0]
    final fun addAll(kotlin/Int, androidx.collection/DoubleList): kotlin/Boolean // androidx.collection/MutableDoubleList.addAll|addAll(kotlin.Int;androidx.collection.DoubleList){}[0]
    final fun addAll(kotlin/Int, kotlin/DoubleArray): kotlin/Boolean // androidx.collection/MutableDoubleList.addAll|addAll(kotlin.Int;kotlin.DoubleArray){}[0]
    final fun clear() // androidx.collection/MutableDoubleList.clear|clear(){}[0]
    final fun ensureCapacity(kotlin/Int) // androidx.collection/MutableDoubleList.ensureCapacity|ensureCapacity(kotlin.Int){}[0]
    final fun minusAssign(androidx.collection/DoubleList) // androidx.collection/MutableDoubleList.minusAssign|minusAssign(androidx.collection.DoubleList){}[0]
    final fun minusAssign(kotlin/DoubleArray) // androidx.collection/MutableDoubleList.minusAssign|minusAssign(kotlin.DoubleArray){}[0]
    final fun remove(kotlin/Double): kotlin/Boolean // androidx.collection/MutableDoubleList.remove|remove(kotlin.Double){}[0]
    final fun removeAll(androidx.collection/DoubleList): kotlin/Boolean // androidx.collection/MutableDoubleList.removeAll|removeAll(androidx.collection.DoubleList){}[0]
    final fun removeAll(kotlin/DoubleArray): kotlin/Boolean // androidx.collection/MutableDoubleList.removeAll|removeAll(kotlin.DoubleArray){}[0]
    final fun removeAt(kotlin/Int): kotlin/Double // androidx.collection/MutableDoubleList.removeAt|removeAt(kotlin.Int){}[0]
    final fun removeRange(kotlin/Int, kotlin/Int) // androidx.collection/MutableDoubleList.removeRange|removeRange(kotlin.Int;kotlin.Int){}[0]
    final fun retainAll(androidx.collection/DoubleList): kotlin/Boolean // androidx.collection/MutableDoubleList.retainAll|retainAll(androidx.collection.DoubleList){}[0]
    final fun retainAll(kotlin/DoubleArray): kotlin/Boolean // androidx.collection/MutableDoubleList.retainAll|retainAll(kotlin.DoubleArray){}[0]
    final fun set(kotlin/Int, kotlin/Double): kotlin/Double // androidx.collection/MutableDoubleList.set|set(kotlin.Int;kotlin.Double){}[0]
    final fun sort() // androidx.collection/MutableDoubleList.sort|sort(){}[0]
    final fun sortDescending() // androidx.collection/MutableDoubleList.sortDescending|sortDescending(){}[0]
    final fun trim(kotlin/Int = ...) // androidx.collection/MutableDoubleList.trim|trim(kotlin.Int){}[0]
    final inline fun addAll(androidx.collection/DoubleList): kotlin/Boolean // androidx.collection/MutableDoubleList.addAll|addAll(androidx.collection.DoubleList){}[0]
    final inline fun addAll(kotlin/DoubleArray): kotlin/Boolean // androidx.collection/MutableDoubleList.addAll|addAll(kotlin.DoubleArray){}[0]
    final inline fun minusAssign(kotlin/Double) // androidx.collection/MutableDoubleList.minusAssign|minusAssign(kotlin.Double){}[0]
    final inline fun plusAssign(androidx.collection/DoubleList) // androidx.collection/MutableDoubleList.plusAssign|plusAssign(androidx.collection.DoubleList){}[0]
    final inline fun plusAssign(kotlin/Double) // androidx.collection/MutableDoubleList.plusAssign|plusAssign(kotlin.Double){}[0]
    final inline fun plusAssign(kotlin/DoubleArray) // androidx.collection/MutableDoubleList.plusAssign|plusAssign(kotlin.DoubleArray){}[0]
}

final class androidx.collection/MutableFloatFloatMap : androidx.collection/FloatFloatMap { // androidx.collection/MutableFloatFloatMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableFloatFloatMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableFloatFloatMap.clear|clear(){}[0]
    final fun put(kotlin/Float, kotlin/Float) // androidx.collection/MutableFloatFloatMap.put|put(kotlin.Float;kotlin.Float){}[0]
    final fun put(kotlin/Float, kotlin/Float, kotlin/Float): kotlin/Float // androidx.collection/MutableFloatFloatMap.put|put(kotlin.Float;kotlin.Float;kotlin.Float){}[0]
    final fun putAll(androidx.collection/FloatFloatMap) // androidx.collection/MutableFloatFloatMap.putAll|putAll(androidx.collection.FloatFloatMap){}[0]
    final fun remove(kotlin/Float) // androidx.collection/MutableFloatFloatMap.remove|remove(kotlin.Float){}[0]
    final fun remove(kotlin/Float, kotlin/Float): kotlin/Boolean // androidx.collection/MutableFloatFloatMap.remove|remove(kotlin.Float;kotlin.Float){}[0]
    final fun removeValueAt(kotlin/Int) // androidx.collection/MutableFloatFloatMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(kotlin/Float, kotlin/Float) // androidx.collection/MutableFloatFloatMap.set|set(kotlin.Float;kotlin.Float){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableFloatFloatMap.trim|trim(){}[0]
    final inline fun getOrPut(kotlin/Float, kotlin/Function0<kotlin/Float>): kotlin/Float // androidx.collection/MutableFloatFloatMap.getOrPut|getOrPut(kotlin.Float;kotlin.Function0<kotlin.Float>){}[0]
    final inline fun minusAssign(androidx.collection/FloatList) // androidx.collection/MutableFloatFloatMap.minusAssign|minusAssign(androidx.collection.FloatList){}[0]
    final inline fun minusAssign(androidx.collection/FloatSet) // androidx.collection/MutableFloatFloatMap.minusAssign|minusAssign(androidx.collection.FloatSet){}[0]
    final inline fun minusAssign(kotlin/Float) // androidx.collection/MutableFloatFloatMap.minusAssign|minusAssign(kotlin.Float){}[0]
    final inline fun minusAssign(kotlin/FloatArray) // androidx.collection/MutableFloatFloatMap.minusAssign|minusAssign(kotlin.FloatArray){}[0]
    final inline fun plusAssign(androidx.collection/FloatFloatMap) // androidx.collection/MutableFloatFloatMap.plusAssign|plusAssign(androidx.collection.FloatFloatMap){}[0]
    final inline fun removeIf(kotlin/Function2<kotlin/Float, kotlin/Float, kotlin/Boolean>) // androidx.collection/MutableFloatFloatMap.removeIf|removeIf(kotlin.Function2<kotlin.Float,kotlin.Float,kotlin.Boolean>){}[0]
}

final class androidx.collection/MutableFloatIntMap : androidx.collection/FloatIntMap { // androidx.collection/MutableFloatIntMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableFloatIntMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableFloatIntMap.clear|clear(){}[0]
    final fun put(kotlin/Float, kotlin/Int) // androidx.collection/MutableFloatIntMap.put|put(kotlin.Float;kotlin.Int){}[0]
    final fun put(kotlin/Float, kotlin/Int, kotlin/Int): kotlin/Int // androidx.collection/MutableFloatIntMap.put|put(kotlin.Float;kotlin.Int;kotlin.Int){}[0]
    final fun putAll(androidx.collection/FloatIntMap) // androidx.collection/MutableFloatIntMap.putAll|putAll(androidx.collection.FloatIntMap){}[0]
    final fun remove(kotlin/Float) // androidx.collection/MutableFloatIntMap.remove|remove(kotlin.Float){}[0]
    final fun remove(kotlin/Float, kotlin/Int): kotlin/Boolean // androidx.collection/MutableFloatIntMap.remove|remove(kotlin.Float;kotlin.Int){}[0]
    final fun removeValueAt(kotlin/Int) // androidx.collection/MutableFloatIntMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(kotlin/Float, kotlin/Int) // androidx.collection/MutableFloatIntMap.set|set(kotlin.Float;kotlin.Int){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableFloatIntMap.trim|trim(){}[0]
    final inline fun getOrPut(kotlin/Float, kotlin/Function0<kotlin/Int>): kotlin/Int // androidx.collection/MutableFloatIntMap.getOrPut|getOrPut(kotlin.Float;kotlin.Function0<kotlin.Int>){}[0]
    final inline fun minusAssign(androidx.collection/FloatList) // androidx.collection/MutableFloatIntMap.minusAssign|minusAssign(androidx.collection.FloatList){}[0]
    final inline fun minusAssign(androidx.collection/FloatSet) // androidx.collection/MutableFloatIntMap.minusAssign|minusAssign(androidx.collection.FloatSet){}[0]
    final inline fun minusAssign(kotlin/Float) // androidx.collection/MutableFloatIntMap.minusAssign|minusAssign(kotlin.Float){}[0]
    final inline fun minusAssign(kotlin/FloatArray) // androidx.collection/MutableFloatIntMap.minusAssign|minusAssign(kotlin.FloatArray){}[0]
    final inline fun plusAssign(androidx.collection/FloatIntMap) // androidx.collection/MutableFloatIntMap.plusAssign|plusAssign(androidx.collection.FloatIntMap){}[0]
    final inline fun removeIf(kotlin/Function2<kotlin/Float, kotlin/Int, kotlin/Boolean>) // androidx.collection/MutableFloatIntMap.removeIf|removeIf(kotlin.Function2<kotlin.Float,kotlin.Int,kotlin.Boolean>){}[0]
}

final class androidx.collection/MutableFloatList : androidx.collection/FloatList { // androidx.collection/MutableFloatList|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableFloatList.<init>|<init>(kotlin.Int){}[0]

    final val capacity // androidx.collection/MutableFloatList.capacity|{}capacity[0]
        final inline fun <get-capacity>(): kotlin/Int // androidx.collection/MutableFloatList.capacity.<get-capacity>|<get-capacity>(){}[0]

    final fun add(kotlin/Float): kotlin/Boolean // androidx.collection/MutableFloatList.add|add(kotlin.Float){}[0]
    final fun add(kotlin/Int, kotlin/Float) // androidx.collection/MutableFloatList.add|add(kotlin.Int;kotlin.Float){}[0]
    final fun addAll(kotlin/Int, androidx.collection/FloatList): kotlin/Boolean // androidx.collection/MutableFloatList.addAll|addAll(kotlin.Int;androidx.collection.FloatList){}[0]
    final fun addAll(kotlin/Int, kotlin/FloatArray): kotlin/Boolean // androidx.collection/MutableFloatList.addAll|addAll(kotlin.Int;kotlin.FloatArray){}[0]
    final fun clear() // androidx.collection/MutableFloatList.clear|clear(){}[0]
    final fun ensureCapacity(kotlin/Int) // androidx.collection/MutableFloatList.ensureCapacity|ensureCapacity(kotlin.Int){}[0]
    final fun minusAssign(androidx.collection/FloatList) // androidx.collection/MutableFloatList.minusAssign|minusAssign(androidx.collection.FloatList){}[0]
    final fun minusAssign(kotlin/FloatArray) // androidx.collection/MutableFloatList.minusAssign|minusAssign(kotlin.FloatArray){}[0]
    final fun remove(kotlin/Float): kotlin/Boolean // androidx.collection/MutableFloatList.remove|remove(kotlin.Float){}[0]
    final fun removeAll(androidx.collection/FloatList): kotlin/Boolean // androidx.collection/MutableFloatList.removeAll|removeAll(androidx.collection.FloatList){}[0]
    final fun removeAll(kotlin/FloatArray): kotlin/Boolean // androidx.collection/MutableFloatList.removeAll|removeAll(kotlin.FloatArray){}[0]
    final fun removeAt(kotlin/Int): kotlin/Float // androidx.collection/MutableFloatList.removeAt|removeAt(kotlin.Int){}[0]
    final fun removeRange(kotlin/Int, kotlin/Int) // androidx.collection/MutableFloatList.removeRange|removeRange(kotlin.Int;kotlin.Int){}[0]
    final fun retainAll(androidx.collection/FloatList): kotlin/Boolean // androidx.collection/MutableFloatList.retainAll|retainAll(androidx.collection.FloatList){}[0]
    final fun retainAll(kotlin/FloatArray): kotlin/Boolean // androidx.collection/MutableFloatList.retainAll|retainAll(kotlin.FloatArray){}[0]
    final fun set(kotlin/Int, kotlin/Float): kotlin/Float // androidx.collection/MutableFloatList.set|set(kotlin.Int;kotlin.Float){}[0]
    final fun sort() // androidx.collection/MutableFloatList.sort|sort(){}[0]
    final fun sortDescending() // androidx.collection/MutableFloatList.sortDescending|sortDescending(){}[0]
    final fun trim(kotlin/Int = ...) // androidx.collection/MutableFloatList.trim|trim(kotlin.Int){}[0]
    final inline fun addAll(androidx.collection/FloatList): kotlin/Boolean // androidx.collection/MutableFloatList.addAll|addAll(androidx.collection.FloatList){}[0]
    final inline fun addAll(kotlin/FloatArray): kotlin/Boolean // androidx.collection/MutableFloatList.addAll|addAll(kotlin.FloatArray){}[0]
    final inline fun minusAssign(kotlin/Float) // androidx.collection/MutableFloatList.minusAssign|minusAssign(kotlin.Float){}[0]
    final inline fun plusAssign(androidx.collection/FloatList) // androidx.collection/MutableFloatList.plusAssign|plusAssign(androidx.collection.FloatList){}[0]
    final inline fun plusAssign(kotlin/Float) // androidx.collection/MutableFloatList.plusAssign|plusAssign(kotlin.Float){}[0]
    final inline fun plusAssign(kotlin/FloatArray) // androidx.collection/MutableFloatList.plusAssign|plusAssign(kotlin.FloatArray){}[0]
}

final class androidx.collection/MutableFloatLongMap : androidx.collection/FloatLongMap { // androidx.collection/MutableFloatLongMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableFloatLongMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableFloatLongMap.clear|clear(){}[0]
    final fun put(kotlin/Float, kotlin/Long) // androidx.collection/MutableFloatLongMap.put|put(kotlin.Float;kotlin.Long){}[0]
    final fun put(kotlin/Float, kotlin/Long, kotlin/Long): kotlin/Long // androidx.collection/MutableFloatLongMap.put|put(kotlin.Float;kotlin.Long;kotlin.Long){}[0]
    final fun putAll(androidx.collection/FloatLongMap) // androidx.collection/MutableFloatLongMap.putAll|putAll(androidx.collection.FloatLongMap){}[0]
    final fun remove(kotlin/Float) // androidx.collection/MutableFloatLongMap.remove|remove(kotlin.Float){}[0]
    final fun remove(kotlin/Float, kotlin/Long): kotlin/Boolean // androidx.collection/MutableFloatLongMap.remove|remove(kotlin.Float;kotlin.Long){}[0]
    final fun removeValueAt(kotlin/Int) // androidx.collection/MutableFloatLongMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(kotlin/Float, kotlin/Long) // androidx.collection/MutableFloatLongMap.set|set(kotlin.Float;kotlin.Long){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableFloatLongMap.trim|trim(){}[0]
    final inline fun getOrPut(kotlin/Float, kotlin/Function0<kotlin/Long>): kotlin/Long // androidx.collection/MutableFloatLongMap.getOrPut|getOrPut(kotlin.Float;kotlin.Function0<kotlin.Long>){}[0]
    final inline fun minusAssign(androidx.collection/FloatList) // androidx.collection/MutableFloatLongMap.minusAssign|minusAssign(androidx.collection.FloatList){}[0]
    final inline fun minusAssign(androidx.collection/FloatSet) // androidx.collection/MutableFloatLongMap.minusAssign|minusAssign(androidx.collection.FloatSet){}[0]
    final inline fun minusAssign(kotlin/Float) // androidx.collection/MutableFloatLongMap.minusAssign|minusAssign(kotlin.Float){}[0]
    final inline fun minusAssign(kotlin/FloatArray) // androidx.collection/MutableFloatLongMap.minusAssign|minusAssign(kotlin.FloatArray){}[0]
    final inline fun plusAssign(androidx.collection/FloatLongMap) // androidx.collection/MutableFloatLongMap.plusAssign|plusAssign(androidx.collection.FloatLongMap){}[0]
    final inline fun removeIf(kotlin/Function2<kotlin/Float, kotlin/Long, kotlin/Boolean>) // androidx.collection/MutableFloatLongMap.removeIf|removeIf(kotlin.Function2<kotlin.Float,kotlin.Long,kotlin.Boolean>){}[0]
}

final class androidx.collection/MutableFloatSet : androidx.collection/FloatSet { // androidx.collection/MutableFloatSet|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableFloatSet.<init>|<init>(kotlin.Int){}[0]

    final fun add(kotlin/Float): kotlin/Boolean // androidx.collection/MutableFloatSet.add|add(kotlin.Float){}[0]
    final fun addAll(androidx.collection/FloatSet): kotlin/Boolean // androidx.collection/MutableFloatSet.addAll|addAll(androidx.collection.FloatSet){}[0]
    final fun addAll(kotlin/FloatArray): kotlin/Boolean // androidx.collection/MutableFloatSet.addAll|addAll(kotlin.FloatArray){}[0]
    final fun clear() // androidx.collection/MutableFloatSet.clear|clear(){}[0]
    final fun minusAssign(androidx.collection/FloatSet) // androidx.collection/MutableFloatSet.minusAssign|minusAssign(androidx.collection.FloatSet){}[0]
    final fun minusAssign(kotlin/Float) // androidx.collection/MutableFloatSet.minusAssign|minusAssign(kotlin.Float){}[0]
    final fun minusAssign(kotlin/FloatArray) // androidx.collection/MutableFloatSet.minusAssign|minusAssign(kotlin.FloatArray){}[0]
    final fun plusAssign(androidx.collection/FloatSet) // androidx.collection/MutableFloatSet.plusAssign|plusAssign(androidx.collection.FloatSet){}[0]
    final fun plusAssign(kotlin/Float) // androidx.collection/MutableFloatSet.plusAssign|plusAssign(kotlin.Float){}[0]
    final fun plusAssign(kotlin/FloatArray) // androidx.collection/MutableFloatSet.plusAssign|plusAssign(kotlin.FloatArray){}[0]
    final fun remove(kotlin/Float): kotlin/Boolean // androidx.collection/MutableFloatSet.remove|remove(kotlin.Float){}[0]
    final fun removeAll(androidx.collection/FloatSet): kotlin/Boolean // androidx.collection/MutableFloatSet.removeAll|removeAll(androidx.collection.FloatSet){}[0]
    final fun removeAll(kotlin/FloatArray): kotlin/Boolean // androidx.collection/MutableFloatSet.removeAll|removeAll(kotlin.FloatArray){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableFloatSet.trim|trim(){}[0]
}

final class androidx.collection/MutableIntFloatMap : androidx.collection/IntFloatMap { // androidx.collection/MutableIntFloatMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableIntFloatMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableIntFloatMap.clear|clear(){}[0]
    final fun put(kotlin/Int, kotlin/Float) // androidx.collection/MutableIntFloatMap.put|put(kotlin.Int;kotlin.Float){}[0]
    final fun put(kotlin/Int, kotlin/Float, kotlin/Float): kotlin/Float // androidx.collection/MutableIntFloatMap.put|put(kotlin.Int;kotlin.Float;kotlin.Float){}[0]
    final fun putAll(androidx.collection/IntFloatMap) // androidx.collection/MutableIntFloatMap.putAll|putAll(androidx.collection.IntFloatMap){}[0]
    final fun remove(kotlin/Int) // androidx.collection/MutableIntFloatMap.remove|remove(kotlin.Int){}[0]
    final fun remove(kotlin/Int, kotlin/Float): kotlin/Boolean // androidx.collection/MutableIntFloatMap.remove|remove(kotlin.Int;kotlin.Float){}[0]
    final fun removeValueAt(kotlin/Int) // androidx.collection/MutableIntFloatMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(kotlin/Int, kotlin/Float) // androidx.collection/MutableIntFloatMap.set|set(kotlin.Int;kotlin.Float){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableIntFloatMap.trim|trim(){}[0]
    final inline fun getOrPut(kotlin/Int, kotlin/Function0<kotlin/Float>): kotlin/Float // androidx.collection/MutableIntFloatMap.getOrPut|getOrPut(kotlin.Int;kotlin.Function0<kotlin.Float>){}[0]
    final inline fun minusAssign(androidx.collection/IntList) // androidx.collection/MutableIntFloatMap.minusAssign|minusAssign(androidx.collection.IntList){}[0]
    final inline fun minusAssign(androidx.collection/IntSet) // androidx.collection/MutableIntFloatMap.minusAssign|minusAssign(androidx.collection.IntSet){}[0]
    final inline fun minusAssign(kotlin/Int) // androidx.collection/MutableIntFloatMap.minusAssign|minusAssign(kotlin.Int){}[0]
    final inline fun minusAssign(kotlin/IntArray) // androidx.collection/MutableIntFloatMap.minusAssign|minusAssign(kotlin.IntArray){}[0]
    final inline fun plusAssign(androidx.collection/IntFloatMap) // androidx.collection/MutableIntFloatMap.plusAssign|plusAssign(androidx.collection.IntFloatMap){}[0]
    final inline fun removeIf(kotlin/Function2<kotlin/Int, kotlin/Float, kotlin/Boolean>) // androidx.collection/MutableIntFloatMap.removeIf|removeIf(kotlin.Function2<kotlin.Int,kotlin.Float,kotlin.Boolean>){}[0]
}

final class androidx.collection/MutableIntIntMap : androidx.collection/IntIntMap { // androidx.collection/MutableIntIntMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableIntIntMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableIntIntMap.clear|clear(){}[0]
    final fun put(kotlin/Int, kotlin/Int) // androidx.collection/MutableIntIntMap.put|put(kotlin.Int;kotlin.Int){}[0]
    final fun put(kotlin/Int, kotlin/Int, kotlin/Int): kotlin/Int // androidx.collection/MutableIntIntMap.put|put(kotlin.Int;kotlin.Int;kotlin.Int){}[0]
    final fun putAll(androidx.collection/IntIntMap) // androidx.collection/MutableIntIntMap.putAll|putAll(androidx.collection.IntIntMap){}[0]
    final fun remove(kotlin/Int) // androidx.collection/MutableIntIntMap.remove|remove(kotlin.Int){}[0]
    final fun remove(kotlin/Int, kotlin/Int): kotlin/Boolean // androidx.collection/MutableIntIntMap.remove|remove(kotlin.Int;kotlin.Int){}[0]
    final fun removeValueAt(kotlin/Int) // androidx.collection/MutableIntIntMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(kotlin/Int, kotlin/Int) // androidx.collection/MutableIntIntMap.set|set(kotlin.Int;kotlin.Int){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableIntIntMap.trim|trim(){}[0]
    final inline fun getOrPut(kotlin/Int, kotlin/Function0<kotlin/Int>): kotlin/Int // androidx.collection/MutableIntIntMap.getOrPut|getOrPut(kotlin.Int;kotlin.Function0<kotlin.Int>){}[0]
    final inline fun minusAssign(androidx.collection/IntList) // androidx.collection/MutableIntIntMap.minusAssign|minusAssign(androidx.collection.IntList){}[0]
    final inline fun minusAssign(androidx.collection/IntSet) // androidx.collection/MutableIntIntMap.minusAssign|minusAssign(androidx.collection.IntSet){}[0]
    final inline fun minusAssign(kotlin/Int) // androidx.collection/MutableIntIntMap.minusAssign|minusAssign(kotlin.Int){}[0]
    final inline fun minusAssign(kotlin/IntArray) // androidx.collection/MutableIntIntMap.minusAssign|minusAssign(kotlin.IntArray){}[0]
    final inline fun plusAssign(androidx.collection/IntIntMap) // androidx.collection/MutableIntIntMap.plusAssign|plusAssign(androidx.collection.IntIntMap){}[0]
    final inline fun removeIf(kotlin/Function2<kotlin/Int, kotlin/Int, kotlin/Boolean>) // androidx.collection/MutableIntIntMap.removeIf|removeIf(kotlin.Function2<kotlin.Int,kotlin.Int,kotlin.Boolean>){}[0]
}

final class androidx.collection/MutableIntList : androidx.collection/IntList { // androidx.collection/MutableIntList|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableIntList.<init>|<init>(kotlin.Int){}[0]

    final val capacity // androidx.collection/MutableIntList.capacity|{}capacity[0]
        final inline fun <get-capacity>(): kotlin/Int // androidx.collection/MutableIntList.capacity.<get-capacity>|<get-capacity>(){}[0]

    final fun add(kotlin/Int): kotlin/Boolean // androidx.collection/MutableIntList.add|add(kotlin.Int){}[0]
    final fun add(kotlin/Int, kotlin/Int) // androidx.collection/MutableIntList.add|add(kotlin.Int;kotlin.Int){}[0]
    final fun addAll(kotlin/Int, androidx.collection/IntList): kotlin/Boolean // androidx.collection/MutableIntList.addAll|addAll(kotlin.Int;androidx.collection.IntList){}[0]
    final fun addAll(kotlin/Int, kotlin/IntArray): kotlin/Boolean // androidx.collection/MutableIntList.addAll|addAll(kotlin.Int;kotlin.IntArray){}[0]
    final fun clear() // androidx.collection/MutableIntList.clear|clear(){}[0]
    final fun ensureCapacity(kotlin/Int) // androidx.collection/MutableIntList.ensureCapacity|ensureCapacity(kotlin.Int){}[0]
    final fun minusAssign(androidx.collection/IntList) // androidx.collection/MutableIntList.minusAssign|minusAssign(androidx.collection.IntList){}[0]
    final fun minusAssign(kotlin/IntArray) // androidx.collection/MutableIntList.minusAssign|minusAssign(kotlin.IntArray){}[0]
    final fun remove(kotlin/Int): kotlin/Boolean // androidx.collection/MutableIntList.remove|remove(kotlin.Int){}[0]
    final fun removeAll(androidx.collection/IntList): kotlin/Boolean // androidx.collection/MutableIntList.removeAll|removeAll(androidx.collection.IntList){}[0]
    final fun removeAll(kotlin/IntArray): kotlin/Boolean // androidx.collection/MutableIntList.removeAll|removeAll(kotlin.IntArray){}[0]
    final fun removeAt(kotlin/Int): kotlin/Int // androidx.collection/MutableIntList.removeAt|removeAt(kotlin.Int){}[0]
    final fun removeRange(kotlin/Int, kotlin/Int) // androidx.collection/MutableIntList.removeRange|removeRange(kotlin.Int;kotlin.Int){}[0]
    final fun retainAll(androidx.collection/IntList): kotlin/Boolean // androidx.collection/MutableIntList.retainAll|retainAll(androidx.collection.IntList){}[0]
    final fun retainAll(kotlin/IntArray): kotlin/Boolean // androidx.collection/MutableIntList.retainAll|retainAll(kotlin.IntArray){}[0]
    final fun set(kotlin/Int, kotlin/Int): kotlin/Int // androidx.collection/MutableIntList.set|set(kotlin.Int;kotlin.Int){}[0]
    final fun sort() // androidx.collection/MutableIntList.sort|sort(){}[0]
    final fun sortDescending() // androidx.collection/MutableIntList.sortDescending|sortDescending(){}[0]
    final fun trim(kotlin/Int = ...) // androidx.collection/MutableIntList.trim|trim(kotlin.Int){}[0]
    final inline fun addAll(androidx.collection/IntList): kotlin/Boolean // androidx.collection/MutableIntList.addAll|addAll(androidx.collection.IntList){}[0]
    final inline fun addAll(kotlin/IntArray): kotlin/Boolean // androidx.collection/MutableIntList.addAll|addAll(kotlin.IntArray){}[0]
    final inline fun minusAssign(kotlin/Int) // androidx.collection/MutableIntList.minusAssign|minusAssign(kotlin.Int){}[0]
    final inline fun plusAssign(androidx.collection/IntList) // androidx.collection/MutableIntList.plusAssign|plusAssign(androidx.collection.IntList){}[0]
    final inline fun plusAssign(kotlin/Int) // androidx.collection/MutableIntList.plusAssign|plusAssign(kotlin.Int){}[0]
    final inline fun plusAssign(kotlin/IntArray) // androidx.collection/MutableIntList.plusAssign|plusAssign(kotlin.IntArray){}[0]
}

final class androidx.collection/MutableIntLongMap : androidx.collection/IntLongMap { // androidx.collection/MutableIntLongMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableIntLongMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableIntLongMap.clear|clear(){}[0]
    final fun put(kotlin/Int, kotlin/Long) // androidx.collection/MutableIntLongMap.put|put(kotlin.Int;kotlin.Long){}[0]
    final fun put(kotlin/Int, kotlin/Long, kotlin/Long): kotlin/Long // androidx.collection/MutableIntLongMap.put|put(kotlin.Int;kotlin.Long;kotlin.Long){}[0]
    final fun putAll(androidx.collection/IntLongMap) // androidx.collection/MutableIntLongMap.putAll|putAll(androidx.collection.IntLongMap){}[0]
    final fun remove(kotlin/Int) // androidx.collection/MutableIntLongMap.remove|remove(kotlin.Int){}[0]
    final fun remove(kotlin/Int, kotlin/Long): kotlin/Boolean // androidx.collection/MutableIntLongMap.remove|remove(kotlin.Int;kotlin.Long){}[0]
    final fun removeValueAt(kotlin/Int) // androidx.collection/MutableIntLongMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(kotlin/Int, kotlin/Long) // androidx.collection/MutableIntLongMap.set|set(kotlin.Int;kotlin.Long){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableIntLongMap.trim|trim(){}[0]
    final inline fun getOrPut(kotlin/Int, kotlin/Function0<kotlin/Long>): kotlin/Long // androidx.collection/MutableIntLongMap.getOrPut|getOrPut(kotlin.Int;kotlin.Function0<kotlin.Long>){}[0]
    final inline fun minusAssign(androidx.collection/IntList) // androidx.collection/MutableIntLongMap.minusAssign|minusAssign(androidx.collection.IntList){}[0]
    final inline fun minusAssign(androidx.collection/IntSet) // androidx.collection/MutableIntLongMap.minusAssign|minusAssign(androidx.collection.IntSet){}[0]
    final inline fun minusAssign(kotlin/Int) // androidx.collection/MutableIntLongMap.minusAssign|minusAssign(kotlin.Int){}[0]
    final inline fun minusAssign(kotlin/IntArray) // androidx.collection/MutableIntLongMap.minusAssign|minusAssign(kotlin.IntArray){}[0]
    final inline fun plusAssign(androidx.collection/IntLongMap) // androidx.collection/MutableIntLongMap.plusAssign|plusAssign(androidx.collection.IntLongMap){}[0]
    final inline fun removeIf(kotlin/Function2<kotlin/Int, kotlin/Long, kotlin/Boolean>) // androidx.collection/MutableIntLongMap.removeIf|removeIf(kotlin.Function2<kotlin.Int,kotlin.Long,kotlin.Boolean>){}[0]
}

final class androidx.collection/MutableIntSet : androidx.collection/IntSet { // androidx.collection/MutableIntSet|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableIntSet.<init>|<init>(kotlin.Int){}[0]

    final fun add(kotlin/Int): kotlin/Boolean // androidx.collection/MutableIntSet.add|add(kotlin.Int){}[0]
    final fun addAll(androidx.collection/IntSet): kotlin/Boolean // androidx.collection/MutableIntSet.addAll|addAll(androidx.collection.IntSet){}[0]
    final fun addAll(kotlin/IntArray): kotlin/Boolean // androidx.collection/MutableIntSet.addAll|addAll(kotlin.IntArray){}[0]
    final fun clear() // androidx.collection/MutableIntSet.clear|clear(){}[0]
    final fun minusAssign(androidx.collection/IntSet) // androidx.collection/MutableIntSet.minusAssign|minusAssign(androidx.collection.IntSet){}[0]
    final fun minusAssign(kotlin/Int) // androidx.collection/MutableIntSet.minusAssign|minusAssign(kotlin.Int){}[0]
    final fun minusAssign(kotlin/IntArray) // androidx.collection/MutableIntSet.minusAssign|minusAssign(kotlin.IntArray){}[0]
    final fun plusAssign(androidx.collection/IntSet) // androidx.collection/MutableIntSet.plusAssign|plusAssign(androidx.collection.IntSet){}[0]
    final fun plusAssign(kotlin/Int) // androidx.collection/MutableIntSet.plusAssign|plusAssign(kotlin.Int){}[0]
    final fun plusAssign(kotlin/IntArray) // androidx.collection/MutableIntSet.plusAssign|plusAssign(kotlin.IntArray){}[0]
    final fun remove(kotlin/Int): kotlin/Boolean // androidx.collection/MutableIntSet.remove|remove(kotlin.Int){}[0]
    final fun removeAll(androidx.collection/IntSet): kotlin/Boolean // androidx.collection/MutableIntSet.removeAll|removeAll(androidx.collection.IntSet){}[0]
    final fun removeAll(kotlin/IntArray): kotlin/Boolean // androidx.collection/MutableIntSet.removeAll|removeAll(kotlin.IntArray){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableIntSet.trim|trim(){}[0]
}

final class androidx.collection/MutableLongFloatMap : androidx.collection/LongFloatMap { // androidx.collection/MutableLongFloatMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableLongFloatMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableLongFloatMap.clear|clear(){}[0]
    final fun put(kotlin/Long, kotlin/Float) // androidx.collection/MutableLongFloatMap.put|put(kotlin.Long;kotlin.Float){}[0]
    final fun put(kotlin/Long, kotlin/Float, kotlin/Float): kotlin/Float // androidx.collection/MutableLongFloatMap.put|put(kotlin.Long;kotlin.Float;kotlin.Float){}[0]
    final fun putAll(androidx.collection/LongFloatMap) // androidx.collection/MutableLongFloatMap.putAll|putAll(androidx.collection.LongFloatMap){}[0]
    final fun remove(kotlin/Long) // androidx.collection/MutableLongFloatMap.remove|remove(kotlin.Long){}[0]
    final fun remove(kotlin/Long, kotlin/Float): kotlin/Boolean // androidx.collection/MutableLongFloatMap.remove|remove(kotlin.Long;kotlin.Float){}[0]
    final fun removeValueAt(kotlin/Int) // androidx.collection/MutableLongFloatMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(kotlin/Long, kotlin/Float) // androidx.collection/MutableLongFloatMap.set|set(kotlin.Long;kotlin.Float){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableLongFloatMap.trim|trim(){}[0]
    final inline fun getOrPut(kotlin/Long, kotlin/Function0<kotlin/Float>): kotlin/Float // androidx.collection/MutableLongFloatMap.getOrPut|getOrPut(kotlin.Long;kotlin.Function0<kotlin.Float>){}[0]
    final inline fun minusAssign(androidx.collection/LongList) // androidx.collection/MutableLongFloatMap.minusAssign|minusAssign(androidx.collection.LongList){}[0]
    final inline fun minusAssign(androidx.collection/LongSet) // androidx.collection/MutableLongFloatMap.minusAssign|minusAssign(androidx.collection.LongSet){}[0]
    final inline fun minusAssign(kotlin/Long) // androidx.collection/MutableLongFloatMap.minusAssign|minusAssign(kotlin.Long){}[0]
    final inline fun minusAssign(kotlin/LongArray) // androidx.collection/MutableLongFloatMap.minusAssign|minusAssign(kotlin.LongArray){}[0]
    final inline fun plusAssign(androidx.collection/LongFloatMap) // androidx.collection/MutableLongFloatMap.plusAssign|plusAssign(androidx.collection.LongFloatMap){}[0]
    final inline fun removeIf(kotlin/Function2<kotlin/Long, kotlin/Float, kotlin/Boolean>) // androidx.collection/MutableLongFloatMap.removeIf|removeIf(kotlin.Function2<kotlin.Long,kotlin.Float,kotlin.Boolean>){}[0]
}

final class androidx.collection/MutableLongIntMap : androidx.collection/LongIntMap { // androidx.collection/MutableLongIntMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableLongIntMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableLongIntMap.clear|clear(){}[0]
    final fun put(kotlin/Long, kotlin/Int) // androidx.collection/MutableLongIntMap.put|put(kotlin.Long;kotlin.Int){}[0]
    final fun put(kotlin/Long, kotlin/Int, kotlin/Int): kotlin/Int // androidx.collection/MutableLongIntMap.put|put(kotlin.Long;kotlin.Int;kotlin.Int){}[0]
    final fun putAll(androidx.collection/LongIntMap) // androidx.collection/MutableLongIntMap.putAll|putAll(androidx.collection.LongIntMap){}[0]
    final fun remove(kotlin/Long) // androidx.collection/MutableLongIntMap.remove|remove(kotlin.Long){}[0]
    final fun remove(kotlin/Long, kotlin/Int): kotlin/Boolean // androidx.collection/MutableLongIntMap.remove|remove(kotlin.Long;kotlin.Int){}[0]
    final fun removeValueAt(kotlin/Int) // androidx.collection/MutableLongIntMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(kotlin/Long, kotlin/Int) // androidx.collection/MutableLongIntMap.set|set(kotlin.Long;kotlin.Int){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableLongIntMap.trim|trim(){}[0]
    final inline fun getOrPut(kotlin/Long, kotlin/Function0<kotlin/Int>): kotlin/Int // androidx.collection/MutableLongIntMap.getOrPut|getOrPut(kotlin.Long;kotlin.Function0<kotlin.Int>){}[0]
    final inline fun minusAssign(androidx.collection/LongList) // androidx.collection/MutableLongIntMap.minusAssign|minusAssign(androidx.collection.LongList){}[0]
    final inline fun minusAssign(androidx.collection/LongSet) // androidx.collection/MutableLongIntMap.minusAssign|minusAssign(androidx.collection.LongSet){}[0]
    final inline fun minusAssign(kotlin/Long) // androidx.collection/MutableLongIntMap.minusAssign|minusAssign(kotlin.Long){}[0]
    final inline fun minusAssign(kotlin/LongArray) // androidx.collection/MutableLongIntMap.minusAssign|minusAssign(kotlin.LongArray){}[0]
    final inline fun plusAssign(androidx.collection/LongIntMap) // androidx.collection/MutableLongIntMap.plusAssign|plusAssign(androidx.collection.LongIntMap){}[0]
    final inline fun removeIf(kotlin/Function2<kotlin/Long, kotlin/Int, kotlin/Boolean>) // androidx.collection/MutableLongIntMap.removeIf|removeIf(kotlin.Function2<kotlin.Long,kotlin.Int,kotlin.Boolean>){}[0]
}

final class androidx.collection/MutableLongList : androidx.collection/LongList { // androidx.collection/MutableLongList|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableLongList.<init>|<init>(kotlin.Int){}[0]

    final val capacity // androidx.collection/MutableLongList.capacity|{}capacity[0]
        final inline fun <get-capacity>(): kotlin/Int // androidx.collection/MutableLongList.capacity.<get-capacity>|<get-capacity>(){}[0]

    final fun add(kotlin/Int, kotlin/Long) // androidx.collection/MutableLongList.add|add(kotlin.Int;kotlin.Long){}[0]
    final fun add(kotlin/Long): kotlin/Boolean // androidx.collection/MutableLongList.add|add(kotlin.Long){}[0]
    final fun addAll(kotlin/Int, androidx.collection/LongList): kotlin/Boolean // androidx.collection/MutableLongList.addAll|addAll(kotlin.Int;androidx.collection.LongList){}[0]
    final fun addAll(kotlin/Int, kotlin/LongArray): kotlin/Boolean // androidx.collection/MutableLongList.addAll|addAll(kotlin.Int;kotlin.LongArray){}[0]
    final fun clear() // androidx.collection/MutableLongList.clear|clear(){}[0]
    final fun ensureCapacity(kotlin/Int) // androidx.collection/MutableLongList.ensureCapacity|ensureCapacity(kotlin.Int){}[0]
    final fun minusAssign(androidx.collection/LongList) // androidx.collection/MutableLongList.minusAssign|minusAssign(androidx.collection.LongList){}[0]
    final fun minusAssign(kotlin/LongArray) // androidx.collection/MutableLongList.minusAssign|minusAssign(kotlin.LongArray){}[0]
    final fun remove(kotlin/Long): kotlin/Boolean // androidx.collection/MutableLongList.remove|remove(kotlin.Long){}[0]
    final fun removeAll(androidx.collection/LongList): kotlin/Boolean // androidx.collection/MutableLongList.removeAll|removeAll(androidx.collection.LongList){}[0]
    final fun removeAll(kotlin/LongArray): kotlin/Boolean // androidx.collection/MutableLongList.removeAll|removeAll(kotlin.LongArray){}[0]
    final fun removeAt(kotlin/Int): kotlin/Long // androidx.collection/MutableLongList.removeAt|removeAt(kotlin.Int){}[0]
    final fun removeRange(kotlin/Int, kotlin/Int) // androidx.collection/MutableLongList.removeRange|removeRange(kotlin.Int;kotlin.Int){}[0]
    final fun retainAll(androidx.collection/LongList): kotlin/Boolean // androidx.collection/MutableLongList.retainAll|retainAll(androidx.collection.LongList){}[0]
    final fun retainAll(kotlin/LongArray): kotlin/Boolean // androidx.collection/MutableLongList.retainAll|retainAll(kotlin.LongArray){}[0]
    final fun set(kotlin/Int, kotlin/Long): kotlin/Long // androidx.collection/MutableLongList.set|set(kotlin.Int;kotlin.Long){}[0]
    final fun sort() // androidx.collection/MutableLongList.sort|sort(){}[0]
    final fun sortDescending() // androidx.collection/MutableLongList.sortDescending|sortDescending(){}[0]
    final fun trim(kotlin/Int = ...) // androidx.collection/MutableLongList.trim|trim(kotlin.Int){}[0]
    final inline fun addAll(androidx.collection/LongList): kotlin/Boolean // androidx.collection/MutableLongList.addAll|addAll(androidx.collection.LongList){}[0]
    final inline fun addAll(kotlin/LongArray): kotlin/Boolean // androidx.collection/MutableLongList.addAll|addAll(kotlin.LongArray){}[0]
    final inline fun minusAssign(kotlin/Long) // androidx.collection/MutableLongList.minusAssign|minusAssign(kotlin.Long){}[0]
    final inline fun plusAssign(androidx.collection/LongList) // androidx.collection/MutableLongList.plusAssign|plusAssign(androidx.collection.LongList){}[0]
    final inline fun plusAssign(kotlin/Long) // androidx.collection/MutableLongList.plusAssign|plusAssign(kotlin.Long){}[0]
    final inline fun plusAssign(kotlin/LongArray) // androidx.collection/MutableLongList.plusAssign|plusAssign(kotlin.LongArray){}[0]
}

final class androidx.collection/MutableLongLongMap : androidx.collection/LongLongMap { // androidx.collection/MutableLongLongMap|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableLongLongMap.<init>|<init>(kotlin.Int){}[0]

    final fun clear() // androidx.collection/MutableLongLongMap.clear|clear(){}[0]
    final fun put(kotlin/Long, kotlin/Long) // androidx.collection/MutableLongLongMap.put|put(kotlin.Long;kotlin.Long){}[0]
    final fun put(kotlin/Long, kotlin/Long, kotlin/Long): kotlin/Long // androidx.collection/MutableLongLongMap.put|put(kotlin.Long;kotlin.Long;kotlin.Long){}[0]
    final fun putAll(androidx.collection/LongLongMap) // androidx.collection/MutableLongLongMap.putAll|putAll(androidx.collection.LongLongMap){}[0]
    final fun remove(kotlin/Long) // androidx.collection/MutableLongLongMap.remove|remove(kotlin.Long){}[0]
    final fun remove(kotlin/Long, kotlin/Long): kotlin/Boolean // androidx.collection/MutableLongLongMap.remove|remove(kotlin.Long;kotlin.Long){}[0]
    final fun removeValueAt(kotlin/Int) // androidx.collection/MutableLongLongMap.removeValueAt|removeValueAt(kotlin.Int){}[0]
    final fun set(kotlin/Long, kotlin/Long) // androidx.collection/MutableLongLongMap.set|set(kotlin.Long;kotlin.Long){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableLongLongMap.trim|trim(){}[0]
    final inline fun getOrPut(kotlin/Long, kotlin/Function0<kotlin/Long>): kotlin/Long // androidx.collection/MutableLongLongMap.getOrPut|getOrPut(kotlin.Long;kotlin.Function0<kotlin.Long>){}[0]
    final inline fun minusAssign(androidx.collection/LongList) // androidx.collection/MutableLongLongMap.minusAssign|minusAssign(androidx.collection.LongList){}[0]
    final inline fun minusAssign(androidx.collection/LongSet) // androidx.collection/MutableLongLongMap.minusAssign|minusAssign(androidx.collection.LongSet){}[0]
    final inline fun minusAssign(kotlin/Long) // androidx.collection/MutableLongLongMap.minusAssign|minusAssign(kotlin.Long){}[0]
    final inline fun minusAssign(kotlin/LongArray) // androidx.collection/MutableLongLongMap.minusAssign|minusAssign(kotlin.LongArray){}[0]
    final inline fun plusAssign(androidx.collection/LongLongMap) // androidx.collection/MutableLongLongMap.plusAssign|plusAssign(androidx.collection.LongLongMap){}[0]
    final inline fun removeIf(kotlin/Function2<kotlin/Long, kotlin/Long, kotlin/Boolean>) // androidx.collection/MutableLongLongMap.removeIf|removeIf(kotlin.Function2<kotlin.Long,kotlin.Long,kotlin.Boolean>){}[0]
}

final class androidx.collection/MutableLongSet : androidx.collection/LongSet { // androidx.collection/MutableLongSet|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/MutableLongSet.<init>|<init>(kotlin.Int){}[0]

    final fun add(kotlin/Long): kotlin/Boolean // androidx.collection/MutableLongSet.add|add(kotlin.Long){}[0]
    final fun addAll(androidx.collection/LongSet): kotlin/Boolean // androidx.collection/MutableLongSet.addAll|addAll(androidx.collection.LongSet){}[0]
    final fun addAll(kotlin/LongArray): kotlin/Boolean // androidx.collection/MutableLongSet.addAll|addAll(kotlin.LongArray){}[0]
    final fun clear() // androidx.collection/MutableLongSet.clear|clear(){}[0]
    final fun minusAssign(androidx.collection/LongSet) // androidx.collection/MutableLongSet.minusAssign|minusAssign(androidx.collection.LongSet){}[0]
    final fun minusAssign(kotlin/Long) // androidx.collection/MutableLongSet.minusAssign|minusAssign(kotlin.Long){}[0]
    final fun minusAssign(kotlin/LongArray) // androidx.collection/MutableLongSet.minusAssign|minusAssign(kotlin.LongArray){}[0]
    final fun plusAssign(androidx.collection/LongSet) // androidx.collection/MutableLongSet.plusAssign|plusAssign(androidx.collection.LongSet){}[0]
    final fun plusAssign(kotlin/Long) // androidx.collection/MutableLongSet.plusAssign|plusAssign(kotlin.Long){}[0]
    final fun plusAssign(kotlin/LongArray) // androidx.collection/MutableLongSet.plusAssign|plusAssign(kotlin.LongArray){}[0]
    final fun remove(kotlin/Long): kotlin/Boolean // androidx.collection/MutableLongSet.remove|remove(kotlin.Long){}[0]
    final fun removeAll(androidx.collection/LongSet): kotlin/Boolean // androidx.collection/MutableLongSet.removeAll|removeAll(androidx.collection.LongSet){}[0]
    final fun removeAll(kotlin/LongArray): kotlin/Boolean // androidx.collection/MutableLongSet.removeAll|removeAll(kotlin.LongArray){}[0]
    final fun trim(): kotlin/Int // androidx.collection/MutableLongSet.trim|trim(){}[0]
}

final value class androidx.collection/FloatFloatPair { // androidx.collection/FloatFloatPair|null[0]
    constructor <init>(kotlin/Float, kotlin/Float) // androidx.collection/FloatFloatPair.<init>|<init>(kotlin.Float;kotlin.Float){}[0]

    final val first // androidx.collection/FloatFloatPair.first|{}first[0]
        final inline fun <get-first>(): kotlin/Float // androidx.collection/FloatFloatPair.first.<get-first>|<get-first>(){}[0]
    final val packedValue // androidx.collection/FloatFloatPair.packedValue|{}packedValue[0]
        final fun <get-packedValue>(): kotlin/Long // androidx.collection/FloatFloatPair.packedValue.<get-packedValue>|<get-packedValue>(){}[0]
    final val second // androidx.collection/FloatFloatPair.second|{}second[0]
        final inline fun <get-second>(): kotlin/Float // androidx.collection/FloatFloatPair.second.<get-second>|<get-second>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/FloatFloatPair.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.collection/FloatFloatPair.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.collection/FloatFloatPair.toString|toString(){}[0]
    final inline fun component1(): kotlin/Float // androidx.collection/FloatFloatPair.component1|component1(){}[0]
    final inline fun component2(): kotlin/Float // androidx.collection/FloatFloatPair.component2|component2(){}[0]
}

final value class androidx.collection/IntIntPair { // androidx.collection/IntIntPair|null[0]
    constructor <init>(kotlin/Int, kotlin/Int) // androidx.collection/IntIntPair.<init>|<init>(kotlin.Int;kotlin.Int){}[0]

    final val first // androidx.collection/IntIntPair.first|{}first[0]
        final fun <get-first>(): kotlin/Int // androidx.collection/IntIntPair.first.<get-first>|<get-first>(){}[0]
    final val packedValue // androidx.collection/IntIntPair.packedValue|{}packedValue[0]
        final fun <get-packedValue>(): kotlin/Long // androidx.collection/IntIntPair.packedValue.<get-packedValue>|<get-packedValue>(){}[0]
    final val second // androidx.collection/IntIntPair.second|{}second[0]
        final fun <get-second>(): kotlin/Int // androidx.collection/IntIntPair.second.<get-second>|<get-second>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/IntIntPair.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.collection/IntIntPair.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.collection/IntIntPair.toString|toString(){}[0]
    final inline fun component1(): kotlin/Int // androidx.collection/IntIntPair.component1|component1(){}[0]
    final inline fun component2(): kotlin/Int // androidx.collection/IntIntPair.component2|component2(){}[0]
}

open class <#A: kotlin/Any, #B: kotlin/Any> androidx.collection/LruCache { // androidx.collection/LruCache|null[0]
    constructor <init>(kotlin/Int) // androidx.collection/LruCache.<init>|<init>(kotlin.Int){}[0]

    final fun createCount(): kotlin/Int // androidx.collection/LruCache.createCount|createCount(){}[0]
    final fun evictAll() // androidx.collection/LruCache.evictAll|evictAll(){}[0]
    final fun evictionCount(): kotlin/Int // androidx.collection/LruCache.evictionCount|evictionCount(){}[0]
    final fun get(#A): #B? // androidx.collection/LruCache.get|get(1:0){}[0]
    final fun hitCount(): kotlin/Int // androidx.collection/LruCache.hitCount|hitCount(){}[0]
    final fun maxSize(): kotlin/Int // androidx.collection/LruCache.maxSize|maxSize(){}[0]
    final fun missCount(): kotlin/Int // androidx.collection/LruCache.missCount|missCount(){}[0]
    final fun put(#A, #B): #B? // androidx.collection/LruCache.put|put(1:0;1:1){}[0]
    final fun putCount(): kotlin/Int // androidx.collection/LruCache.putCount|putCount(){}[0]
    final fun remove(#A): #B? // androidx.collection/LruCache.remove|remove(1:0){}[0]
    final fun size(): kotlin/Int // androidx.collection/LruCache.size|size(){}[0]
    final fun snapshot(): kotlin.collections/MutableMap<#A, #B> // androidx.collection/LruCache.snapshot|snapshot(){}[0]
    open fun create(#A): #B? // androidx.collection/LruCache.create|create(1:0){}[0]
    open fun entryRemoved(kotlin/Boolean, #A, #B, #B?) // androidx.collection/LruCache.entryRemoved|entryRemoved(kotlin.Boolean;1:0;1:1;1:1?){}[0]
    open fun resize(kotlin/Int) // androidx.collection/LruCache.resize|resize(kotlin.Int){}[0]
    open fun sizeOf(#A, #B): kotlin/Int // androidx.collection/LruCache.sizeOf|sizeOf(1:0;1:1){}[0]
    open fun toString(): kotlin/String // androidx.collection/LruCache.toString|toString(){}[0]
    open fun trimToSize(kotlin/Int) // androidx.collection/LruCache.trimToSize|trimToSize(kotlin.Int){}[0]
}

open class <#A: kotlin/Any?, #B: kotlin/Any?> androidx.collection/SimpleArrayMap { // androidx.collection/SimpleArrayMap|null[0]
    constructor <init>(androidx.collection/SimpleArrayMap<out #A, out #B>?) // androidx.collection/SimpleArrayMap.<init>|<init>(androidx.collection.SimpleArrayMap<out|1:0,out|1:1>?){}[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/SimpleArrayMap.<init>|<init>(kotlin.Int){}[0]

    open fun clear() // androidx.collection/SimpleArrayMap.clear|clear(){}[0]
    open fun containsKey(#A): kotlin/Boolean // androidx.collection/SimpleArrayMap.containsKey|containsKey(1:0){}[0]
    open fun containsValue(#B): kotlin/Boolean // androidx.collection/SimpleArrayMap.containsValue|containsValue(1:1){}[0]
    open fun ensureCapacity(kotlin/Int) // androidx.collection/SimpleArrayMap.ensureCapacity|ensureCapacity(kotlin.Int){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/SimpleArrayMap.equals|equals(kotlin.Any?){}[0]
    open fun get(#A): #B? // androidx.collection/SimpleArrayMap.get|get(1:0){}[0]
    open fun getOrDefault(kotlin/Any?, #B): #B // androidx.collection/SimpleArrayMap.getOrDefault|getOrDefault(kotlin.Any?;1:1){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/SimpleArrayMap.hashCode|hashCode(){}[0]
    open fun indexOfKey(#A): kotlin/Int // androidx.collection/SimpleArrayMap.indexOfKey|indexOfKey(1:0){}[0]
    open fun isEmpty(): kotlin/Boolean // androidx.collection/SimpleArrayMap.isEmpty|isEmpty(){}[0]
    open fun keyAt(kotlin/Int): #A // androidx.collection/SimpleArrayMap.keyAt|keyAt(kotlin.Int){}[0]
    open fun put(#A, #B): #B? // androidx.collection/SimpleArrayMap.put|put(1:0;1:1){}[0]
    open fun putAll(androidx.collection/SimpleArrayMap<out #A, out #B>) // androidx.collection/SimpleArrayMap.putAll|putAll(androidx.collection.SimpleArrayMap<out|1:0,out|1:1>){}[0]
    open fun putIfAbsent(#A, #B): #B? // androidx.collection/SimpleArrayMap.putIfAbsent|putIfAbsent(1:0;1:1){}[0]
    open fun remove(#A): #B? // androidx.collection/SimpleArrayMap.remove|remove(1:0){}[0]
    open fun remove(#A, #B): kotlin/Boolean // androidx.collection/SimpleArrayMap.remove|remove(1:0;1:1){}[0]
    open fun removeAt(kotlin/Int): #B // androidx.collection/SimpleArrayMap.removeAt|removeAt(kotlin.Int){}[0]
    open fun replace(#A, #B): #B? // androidx.collection/SimpleArrayMap.replace|replace(1:0;1:1){}[0]
    open fun replace(#A, #B, #B): kotlin/Boolean // androidx.collection/SimpleArrayMap.replace|replace(1:0;1:1;1:1){}[0]
    open fun setValueAt(kotlin/Int, #B): #B // androidx.collection/SimpleArrayMap.setValueAt|setValueAt(kotlin.Int;1:1){}[0]
    open fun size(): kotlin/Int // androidx.collection/SimpleArrayMap.size|size(){}[0]
    open fun toString(): kotlin/String // androidx.collection/SimpleArrayMap.toString|toString(){}[0]
    open fun valueAt(kotlin/Int): #B // androidx.collection/SimpleArrayMap.valueAt|valueAt(kotlin.Int){}[0]
}

open class <#A: kotlin/Any?> androidx.collection/LongSparseArray { // androidx.collection/LongSparseArray|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/LongSparseArray.<init>|<init>(kotlin.Int){}[0]

    open fun append(kotlin/Long, #A) // androidx.collection/LongSparseArray.append|append(kotlin.Long;1:0){}[0]
    open fun clear() // androidx.collection/LongSparseArray.clear|clear(){}[0]
    open fun containsKey(kotlin/Long): kotlin/Boolean // androidx.collection/LongSparseArray.containsKey|containsKey(kotlin.Long){}[0]
    open fun containsValue(#A): kotlin/Boolean // androidx.collection/LongSparseArray.containsValue|containsValue(1:0){}[0]
    open fun delete(kotlin/Long) // androidx.collection/LongSparseArray.delete|delete(kotlin.Long){}[0]
    open fun get(kotlin/Long): #A? // androidx.collection/LongSparseArray.get|get(kotlin.Long){}[0]
    open fun get(kotlin/Long, #A): #A // androidx.collection/LongSparseArray.get|get(kotlin.Long;1:0){}[0]
    open fun indexOfKey(kotlin/Long): kotlin/Int // androidx.collection/LongSparseArray.indexOfKey|indexOfKey(kotlin.Long){}[0]
    open fun indexOfValue(#A): kotlin/Int // androidx.collection/LongSparseArray.indexOfValue|indexOfValue(1:0){}[0]
    open fun isEmpty(): kotlin/Boolean // androidx.collection/LongSparseArray.isEmpty|isEmpty(){}[0]
    open fun keyAt(kotlin/Int): kotlin/Long // androidx.collection/LongSparseArray.keyAt|keyAt(kotlin.Int){}[0]
    open fun put(kotlin/Long, #A) // androidx.collection/LongSparseArray.put|put(kotlin.Long;1:0){}[0]
    open fun putAll(androidx.collection/LongSparseArray<out #A>) // androidx.collection/LongSparseArray.putAll|putAll(androidx.collection.LongSparseArray<out|1:0>){}[0]
    open fun putIfAbsent(kotlin/Long, #A): #A? // androidx.collection/LongSparseArray.putIfAbsent|putIfAbsent(kotlin.Long;1:0){}[0]
    open fun remove(kotlin/Long) // androidx.collection/LongSparseArray.remove|remove(kotlin.Long){}[0]
    open fun remove(kotlin/Long, #A): kotlin/Boolean // androidx.collection/LongSparseArray.remove|remove(kotlin.Long;1:0){}[0]
    open fun removeAt(kotlin/Int) // androidx.collection/LongSparseArray.removeAt|removeAt(kotlin.Int){}[0]
    open fun replace(kotlin/Long, #A): #A? // androidx.collection/LongSparseArray.replace|replace(kotlin.Long;1:0){}[0]
    open fun replace(kotlin/Long, #A, #A): kotlin/Boolean // androidx.collection/LongSparseArray.replace|replace(kotlin.Long;1:0;1:0){}[0]
    open fun setValueAt(kotlin/Int, #A) // androidx.collection/LongSparseArray.setValueAt|setValueAt(kotlin.Int;1:0){}[0]
    open fun size(): kotlin/Int // androidx.collection/LongSparseArray.size|size(){}[0]
    open fun toString(): kotlin/String // androidx.collection/LongSparseArray.toString|toString(){}[0]
    open fun valueAt(kotlin/Int): #A // androidx.collection/LongSparseArray.valueAt|valueAt(kotlin.Int){}[0]
}

open class <#A: kotlin/Any?> androidx.collection/SparseArrayCompat { // androidx.collection/SparseArrayCompat|null[0]
    constructor <init>(kotlin/Int = ...) // androidx.collection/SparseArrayCompat.<init>|<init>(kotlin.Int){}[0]

    open fun append(kotlin/Int, #A) // androidx.collection/SparseArrayCompat.append|append(kotlin.Int;1:0){}[0]
    open fun clear() // androidx.collection/SparseArrayCompat.clear|clear(){}[0]
    open fun containsKey(kotlin/Int): kotlin/Boolean // androidx.collection/SparseArrayCompat.containsKey|containsKey(kotlin.Int){}[0]
    open fun containsValue(#A): kotlin/Boolean // androidx.collection/SparseArrayCompat.containsValue|containsValue(1:0){}[0]
    open fun get(kotlin/Int): #A? // androidx.collection/SparseArrayCompat.get|get(kotlin.Int){}[0]
    open fun get(kotlin/Int, #A): #A // androidx.collection/SparseArrayCompat.get|get(kotlin.Int;1:0){}[0]
    open fun indexOfKey(kotlin/Int): kotlin/Int // androidx.collection/SparseArrayCompat.indexOfKey|indexOfKey(kotlin.Int){}[0]
    open fun indexOfValue(#A): kotlin/Int // androidx.collection/SparseArrayCompat.indexOfValue|indexOfValue(1:0){}[0]
    open fun isEmpty(): kotlin/Boolean // androidx.collection/SparseArrayCompat.isEmpty|isEmpty(){}[0]
    open fun keyAt(kotlin/Int): kotlin/Int // androidx.collection/SparseArrayCompat.keyAt|keyAt(kotlin.Int){}[0]
    open fun put(kotlin/Int, #A) // androidx.collection/SparseArrayCompat.put|put(kotlin.Int;1:0){}[0]
    open fun putAll(androidx.collection/SparseArrayCompat<out #A>) // androidx.collection/SparseArrayCompat.putAll|putAll(androidx.collection.SparseArrayCompat<out|1:0>){}[0]
    open fun putIfAbsent(kotlin/Int, #A): #A? // androidx.collection/SparseArrayCompat.putIfAbsent|putIfAbsent(kotlin.Int;1:0){}[0]
    open fun remove(kotlin/Int) // androidx.collection/SparseArrayCompat.remove|remove(kotlin.Int){}[0]
    open fun remove(kotlin/Int, kotlin/Any?): kotlin/Boolean // androidx.collection/SparseArrayCompat.remove|remove(kotlin.Int;kotlin.Any?){}[0]
    open fun removeAt(kotlin/Int) // androidx.collection/SparseArrayCompat.removeAt|removeAt(kotlin.Int){}[0]
    open fun removeAtRange(kotlin/Int, kotlin/Int) // androidx.collection/SparseArrayCompat.removeAtRange|removeAtRange(kotlin.Int;kotlin.Int){}[0]
    open fun replace(kotlin/Int, #A): #A? // androidx.collection/SparseArrayCompat.replace|replace(kotlin.Int;1:0){}[0]
    open fun replace(kotlin/Int, #A, #A): kotlin/Boolean // androidx.collection/SparseArrayCompat.replace|replace(kotlin.Int;1:0;1:0){}[0]
    open fun setValueAt(kotlin/Int, #A) // androidx.collection/SparseArrayCompat.setValueAt|setValueAt(kotlin.Int;1:0){}[0]
    open fun size(): kotlin/Int // androidx.collection/SparseArrayCompat.size|size(){}[0]
    open fun toString(): kotlin/String // androidx.collection/SparseArrayCompat.toString|toString(){}[0]
    open fun valueAt(kotlin/Int): #A // androidx.collection/SparseArrayCompat.valueAt|valueAt(kotlin.Int){}[0]
}

sealed class <#A: kotlin/Any?, #B: kotlin/Any?> androidx.collection/ScatterMap { // androidx.collection/ScatterMap|null[0]
    constructor <init>() // androidx.collection/ScatterMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/ScatterMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/ScatterMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/ScatterMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/ScatterMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/ScatterMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/Array<kotlin/Any?> // androidx.collection/ScatterMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/Array<kotlin/Any?>) // androidx.collection/ScatterMap.keys.<set-keys>|<set-keys>(kotlin.Array<kotlin.Any?>){}[0]
    final var metadata // androidx.collection/ScatterMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/ScatterMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/ScatterMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/ScatterMap.values|{}values[0]
        final fun <get-values>(): kotlin/Array<kotlin/Any?> // androidx.collection/ScatterMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/Array<kotlin/Any?>) // androidx.collection/ScatterMap.values.<set-values>|<set-values>(kotlin.Array<kotlin.Any?>){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/ScatterMap.any|any(){}[0]
    final fun asMap(): kotlin.collections/Map<#A, #B> // androidx.collection/ScatterMap.asMap|asMap(){}[0]
    final fun contains(#A): kotlin/Boolean // androidx.collection/ScatterMap.contains|contains(1:0){}[0]
    final fun containsKey(#A): kotlin/Boolean // androidx.collection/ScatterMap.containsKey|containsKey(1:0){}[0]
    final fun containsValue(#B): kotlin/Boolean // androidx.collection/ScatterMap.containsValue|containsValue(1:1){}[0]
    final fun count(): kotlin/Int // androidx.collection/ScatterMap.count|count(){}[0]
    final fun get(#A): #B? // androidx.collection/ScatterMap.get|get(1:0){}[0]
    final fun getOrDefault(#A, #B): #B // androidx.collection/ScatterMap.getOrDefault|getOrDefault(1:0;1:1){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/ScatterMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/ScatterMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., kotlin/Function2<#A, #B, kotlin/CharSequence>? = ...): kotlin/String // androidx.collection/ScatterMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<1:0,1:1,kotlin.CharSequence>?){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/ScatterMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<#A, #B, kotlin/Boolean>): kotlin/Boolean // androidx.collection/ScatterMap.all|all(kotlin.Function2<1:0,1:1,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<#A, #B, kotlin/Boolean>): kotlin/Boolean // androidx.collection/ScatterMap.any|any(kotlin.Function2<1:0,1:1,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<#A, #B, kotlin/Boolean>): kotlin/Int // androidx.collection/ScatterMap.count|count(kotlin.Function2<1:0,1:1,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<#A, #B, kotlin/Unit>) // androidx.collection/ScatterMap.forEach|forEach(kotlin.Function2<1:0,1:1,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/ScatterMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<#A, kotlin/Unit>) // androidx.collection/ScatterMap.forEachKey|forEachKey(kotlin.Function1<1:0,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<#B, kotlin/Unit>) // androidx.collection/ScatterMap.forEachValue|forEachValue(kotlin.Function1<1:1,kotlin.Unit>){}[0]
    final inline fun getOrElse(#A, kotlin/Function0<#B>): #B // androidx.collection/ScatterMap.getOrElse|getOrElse(1:0;kotlin.Function0<1:1>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/ScatterMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/ScatterMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/ScatterMap.toString|toString(){}[0]
}

sealed class <#A: kotlin/Any?> androidx.collection/FloatObjectMap { // androidx.collection/FloatObjectMap|null[0]
    constructor <init>() // androidx.collection/FloatObjectMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/FloatObjectMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/FloatObjectMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/FloatObjectMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/FloatObjectMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/FloatObjectMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/FloatArray // androidx.collection/FloatObjectMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/FloatArray) // androidx.collection/FloatObjectMap.keys.<set-keys>|<set-keys>(kotlin.FloatArray){}[0]
    final var metadata // androidx.collection/FloatObjectMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/FloatObjectMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/FloatObjectMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/FloatObjectMap.values|{}values[0]
        final fun <get-values>(): kotlin/Array<kotlin/Any?> // androidx.collection/FloatObjectMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/Array<kotlin/Any?>) // androidx.collection/FloatObjectMap.values.<set-values>|<set-values>(kotlin.Array<kotlin.Any?>){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/FloatObjectMap.any|any(){}[0]
    final fun contains(kotlin/Float): kotlin/Boolean // androidx.collection/FloatObjectMap.contains|contains(kotlin.Float){}[0]
    final fun containsKey(kotlin/Float): kotlin/Boolean // androidx.collection/FloatObjectMap.containsKey|containsKey(kotlin.Float){}[0]
    final fun containsValue(#A): kotlin/Boolean // androidx.collection/FloatObjectMap.containsValue|containsValue(1:0){}[0]
    final fun count(): kotlin/Int // androidx.collection/FloatObjectMap.count|count(){}[0]
    final fun get(kotlin/Float): #A? // androidx.collection/FloatObjectMap.get|get(kotlin.Float){}[0]
    final fun getOrDefault(kotlin/Float, #A): #A // androidx.collection/FloatObjectMap.getOrDefault|getOrDefault(kotlin.Float;1:0){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/FloatObjectMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/FloatObjectMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/FloatObjectMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/FloatObjectMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<kotlin/Float, #A, kotlin/Boolean>): kotlin/Boolean // androidx.collection/FloatObjectMap.all|all(kotlin.Function2<kotlin.Float,1:0,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<kotlin/Float, #A, kotlin/Boolean>): kotlin/Boolean // androidx.collection/FloatObjectMap.any|any(kotlin.Function2<kotlin.Float,1:0,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<kotlin/Float, #A, kotlin/Boolean>): kotlin/Int // androidx.collection/FloatObjectMap.count|count(kotlin.Function2<kotlin.Float,1:0,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<kotlin/Float, #A, kotlin/Unit>) // androidx.collection/FloatObjectMap.forEach|forEach(kotlin.Function2<kotlin.Float,1:0,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/FloatObjectMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<kotlin/Float, kotlin/Unit>) // androidx.collection/FloatObjectMap.forEachKey|forEachKey(kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<#A, kotlin/Unit>) // androidx.collection/FloatObjectMap.forEachValue|forEachValue(kotlin.Function1<1:0,kotlin.Unit>){}[0]
    final inline fun getOrElse(kotlin/Float, kotlin/Function0<#A>): #A // androidx.collection/FloatObjectMap.getOrElse|getOrElse(kotlin.Float;kotlin.Function0<1:0>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<kotlin/Float, #A, kotlin/CharSequence>): kotlin/String // androidx.collection/FloatObjectMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<kotlin.Float,1:0,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/FloatObjectMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/FloatObjectMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/FloatObjectMap.toString|toString(){}[0]
}

sealed class <#A: kotlin/Any?> androidx.collection/IntObjectMap { // androidx.collection/IntObjectMap|null[0]
    constructor <init>() // androidx.collection/IntObjectMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/IntObjectMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/IntObjectMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/IntObjectMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/IntObjectMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/IntObjectMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/IntArray // androidx.collection/IntObjectMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/IntArray) // androidx.collection/IntObjectMap.keys.<set-keys>|<set-keys>(kotlin.IntArray){}[0]
    final var metadata // androidx.collection/IntObjectMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/IntObjectMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/IntObjectMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/IntObjectMap.values|{}values[0]
        final fun <get-values>(): kotlin/Array<kotlin/Any?> // androidx.collection/IntObjectMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/Array<kotlin/Any?>) // androidx.collection/IntObjectMap.values.<set-values>|<set-values>(kotlin.Array<kotlin.Any?>){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/IntObjectMap.any|any(){}[0]
    final fun contains(kotlin/Int): kotlin/Boolean // androidx.collection/IntObjectMap.contains|contains(kotlin.Int){}[0]
    final fun containsKey(kotlin/Int): kotlin/Boolean // androidx.collection/IntObjectMap.containsKey|containsKey(kotlin.Int){}[0]
    final fun containsValue(#A): kotlin/Boolean // androidx.collection/IntObjectMap.containsValue|containsValue(1:0){}[0]
    final fun count(): kotlin/Int // androidx.collection/IntObjectMap.count|count(){}[0]
    final fun get(kotlin/Int): #A? // androidx.collection/IntObjectMap.get|get(kotlin.Int){}[0]
    final fun getOrDefault(kotlin/Int, #A): #A // androidx.collection/IntObjectMap.getOrDefault|getOrDefault(kotlin.Int;1:0){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/IntObjectMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/IntObjectMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/IntObjectMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/IntObjectMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<kotlin/Int, #A, kotlin/Boolean>): kotlin/Boolean // androidx.collection/IntObjectMap.all|all(kotlin.Function2<kotlin.Int,1:0,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<kotlin/Int, #A, kotlin/Boolean>): kotlin/Boolean // androidx.collection/IntObjectMap.any|any(kotlin.Function2<kotlin.Int,1:0,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<kotlin/Int, #A, kotlin/Boolean>): kotlin/Int // androidx.collection/IntObjectMap.count|count(kotlin.Function2<kotlin.Int,1:0,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<kotlin/Int, #A, kotlin/Unit>) // androidx.collection/IntObjectMap.forEach|forEach(kotlin.Function2<kotlin.Int,1:0,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/IntObjectMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/IntObjectMap.forEachKey|forEachKey(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<#A, kotlin/Unit>) // androidx.collection/IntObjectMap.forEachValue|forEachValue(kotlin.Function1<1:0,kotlin.Unit>){}[0]
    final inline fun getOrElse(kotlin/Int, kotlin/Function0<#A>): #A // androidx.collection/IntObjectMap.getOrElse|getOrElse(kotlin.Int;kotlin.Function0<1:0>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<kotlin/Int, #A, kotlin/CharSequence>): kotlin/String // androidx.collection/IntObjectMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<kotlin.Int,1:0,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/IntObjectMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/IntObjectMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/IntObjectMap.toString|toString(){}[0]
}

sealed class <#A: kotlin/Any?> androidx.collection/LongObjectMap { // androidx.collection/LongObjectMap|null[0]
    constructor <init>() // androidx.collection/LongObjectMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/LongObjectMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/LongObjectMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/LongObjectMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/LongObjectMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/LongObjectMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/LongArray // androidx.collection/LongObjectMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/LongArray) // androidx.collection/LongObjectMap.keys.<set-keys>|<set-keys>(kotlin.LongArray){}[0]
    final var metadata // androidx.collection/LongObjectMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/LongObjectMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/LongObjectMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/LongObjectMap.values|{}values[0]
        final fun <get-values>(): kotlin/Array<kotlin/Any?> // androidx.collection/LongObjectMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/Array<kotlin/Any?>) // androidx.collection/LongObjectMap.values.<set-values>|<set-values>(kotlin.Array<kotlin.Any?>){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/LongObjectMap.any|any(){}[0]
    final fun contains(kotlin/Long): kotlin/Boolean // androidx.collection/LongObjectMap.contains|contains(kotlin.Long){}[0]
    final fun containsKey(kotlin/Long): kotlin/Boolean // androidx.collection/LongObjectMap.containsKey|containsKey(kotlin.Long){}[0]
    final fun containsValue(#A): kotlin/Boolean // androidx.collection/LongObjectMap.containsValue|containsValue(1:0){}[0]
    final fun count(): kotlin/Int // androidx.collection/LongObjectMap.count|count(){}[0]
    final fun get(kotlin/Long): #A? // androidx.collection/LongObjectMap.get|get(kotlin.Long){}[0]
    final fun getOrDefault(kotlin/Long, #A): #A // androidx.collection/LongObjectMap.getOrDefault|getOrDefault(kotlin.Long;1:0){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/LongObjectMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/LongObjectMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/LongObjectMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/LongObjectMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<kotlin/Long, #A, kotlin/Boolean>): kotlin/Boolean // androidx.collection/LongObjectMap.all|all(kotlin.Function2<kotlin.Long,1:0,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<kotlin/Long, #A, kotlin/Boolean>): kotlin/Boolean // androidx.collection/LongObjectMap.any|any(kotlin.Function2<kotlin.Long,1:0,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<kotlin/Long, #A, kotlin/Boolean>): kotlin/Int // androidx.collection/LongObjectMap.count|count(kotlin.Function2<kotlin.Long,1:0,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<kotlin/Long, #A, kotlin/Unit>) // androidx.collection/LongObjectMap.forEach|forEach(kotlin.Function2<kotlin.Long,1:0,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/LongObjectMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<kotlin/Long, kotlin/Unit>) // androidx.collection/LongObjectMap.forEachKey|forEachKey(kotlin.Function1<kotlin.Long,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<#A, kotlin/Unit>) // androidx.collection/LongObjectMap.forEachValue|forEachValue(kotlin.Function1<1:0,kotlin.Unit>){}[0]
    final inline fun getOrElse(kotlin/Long, kotlin/Function0<#A>): #A // androidx.collection/LongObjectMap.getOrElse|getOrElse(kotlin.Long;kotlin.Function0<1:0>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<kotlin/Long, #A, kotlin/CharSequence>): kotlin/String // androidx.collection/LongObjectMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<kotlin.Long,1:0,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/LongObjectMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/LongObjectMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/LongObjectMap.toString|toString(){}[0]
}

sealed class <#A: kotlin/Any?> androidx.collection/ObjectFloatMap { // androidx.collection/ObjectFloatMap|null[0]
    constructor <init>() // androidx.collection/ObjectFloatMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/ObjectFloatMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/ObjectFloatMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/ObjectFloatMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/ObjectFloatMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/ObjectFloatMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/Array<kotlin/Any?> // androidx.collection/ObjectFloatMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/Array<kotlin/Any?>) // androidx.collection/ObjectFloatMap.keys.<set-keys>|<set-keys>(kotlin.Array<kotlin.Any?>){}[0]
    final var metadata // androidx.collection/ObjectFloatMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/ObjectFloatMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/ObjectFloatMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/ObjectFloatMap.values|{}values[0]
        final fun <get-values>(): kotlin/FloatArray // androidx.collection/ObjectFloatMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/FloatArray) // androidx.collection/ObjectFloatMap.values.<set-values>|<set-values>(kotlin.FloatArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/ObjectFloatMap.any|any(){}[0]
    final fun contains(#A): kotlin/Boolean // androidx.collection/ObjectFloatMap.contains|contains(1:0){}[0]
    final fun containsKey(#A): kotlin/Boolean // androidx.collection/ObjectFloatMap.containsKey|containsKey(1:0){}[0]
    final fun containsValue(kotlin/Float): kotlin/Boolean // androidx.collection/ObjectFloatMap.containsValue|containsValue(kotlin.Float){}[0]
    final fun count(): kotlin/Int // androidx.collection/ObjectFloatMap.count|count(){}[0]
    final fun findKeyIndex(#A): kotlin/Int // androidx.collection/ObjectFloatMap.findKeyIndex|findKeyIndex(1:0){}[0]
    final fun get(#A): kotlin/Float // androidx.collection/ObjectFloatMap.get|get(1:0){}[0]
    final fun getOrDefault(#A, kotlin/Float): kotlin/Float // androidx.collection/ObjectFloatMap.getOrDefault|getOrDefault(1:0;kotlin.Float){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/ObjectFloatMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/ObjectFloatMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/ObjectFloatMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/ObjectFloatMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<#A, kotlin/Float, kotlin/Boolean>): kotlin/Boolean // androidx.collection/ObjectFloatMap.all|all(kotlin.Function2<1:0,kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<#A, kotlin/Float, kotlin/Boolean>): kotlin/Boolean // androidx.collection/ObjectFloatMap.any|any(kotlin.Function2<1:0,kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<#A, kotlin/Float, kotlin/Boolean>): kotlin/Int // androidx.collection/ObjectFloatMap.count|count(kotlin.Function2<1:0,kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<#A, kotlin/Float, kotlin/Unit>) // androidx.collection/ObjectFloatMap.forEach|forEach(kotlin.Function2<1:0,kotlin.Float,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/ObjectFloatMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<#A, kotlin/Unit>) // androidx.collection/ObjectFloatMap.forEachKey|forEachKey(kotlin.Function1<1:0,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<kotlin/Float, kotlin/Unit>) // androidx.collection/ObjectFloatMap.forEachValue|forEachValue(kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
    final inline fun getOrElse(#A, kotlin/Function0<kotlin/Float>): kotlin/Float // androidx.collection/ObjectFloatMap.getOrElse|getOrElse(1:0;kotlin.Function0<kotlin.Float>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<#A, kotlin/Float, kotlin/CharSequence>): kotlin/String // androidx.collection/ObjectFloatMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<1:0,kotlin.Float,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/ObjectFloatMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/ObjectFloatMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/ObjectFloatMap.toString|toString(){}[0]
}

sealed class <#A: kotlin/Any?> androidx.collection/ObjectIntMap { // androidx.collection/ObjectIntMap|null[0]
    constructor <init>() // androidx.collection/ObjectIntMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/ObjectIntMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/ObjectIntMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/ObjectIntMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/ObjectIntMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/ObjectIntMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/Array<kotlin/Any?> // androidx.collection/ObjectIntMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/Array<kotlin/Any?>) // androidx.collection/ObjectIntMap.keys.<set-keys>|<set-keys>(kotlin.Array<kotlin.Any?>){}[0]
    final var metadata // androidx.collection/ObjectIntMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/ObjectIntMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/ObjectIntMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/ObjectIntMap.values|{}values[0]
        final fun <get-values>(): kotlin/IntArray // androidx.collection/ObjectIntMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/IntArray) // androidx.collection/ObjectIntMap.values.<set-values>|<set-values>(kotlin.IntArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/ObjectIntMap.any|any(){}[0]
    final fun contains(#A): kotlin/Boolean // androidx.collection/ObjectIntMap.contains|contains(1:0){}[0]
    final fun containsKey(#A): kotlin/Boolean // androidx.collection/ObjectIntMap.containsKey|containsKey(1:0){}[0]
    final fun containsValue(kotlin/Int): kotlin/Boolean // androidx.collection/ObjectIntMap.containsValue|containsValue(kotlin.Int){}[0]
    final fun count(): kotlin/Int // androidx.collection/ObjectIntMap.count|count(){}[0]
    final fun findKeyIndex(#A): kotlin/Int // androidx.collection/ObjectIntMap.findKeyIndex|findKeyIndex(1:0){}[0]
    final fun get(#A): kotlin/Int // androidx.collection/ObjectIntMap.get|get(1:0){}[0]
    final fun getOrDefault(#A, kotlin/Int): kotlin/Int // androidx.collection/ObjectIntMap.getOrDefault|getOrDefault(1:0;kotlin.Int){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/ObjectIntMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/ObjectIntMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/ObjectIntMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/ObjectIntMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<#A, kotlin/Int, kotlin/Boolean>): kotlin/Boolean // androidx.collection/ObjectIntMap.all|all(kotlin.Function2<1:0,kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<#A, kotlin/Int, kotlin/Boolean>): kotlin/Boolean // androidx.collection/ObjectIntMap.any|any(kotlin.Function2<1:0,kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<#A, kotlin/Int, kotlin/Boolean>): kotlin/Int // androidx.collection/ObjectIntMap.count|count(kotlin.Function2<1:0,kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<#A, kotlin/Int, kotlin/Unit>) // androidx.collection/ObjectIntMap.forEach|forEach(kotlin.Function2<1:0,kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/ObjectIntMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<#A, kotlin/Unit>) // androidx.collection/ObjectIntMap.forEachKey|forEachKey(kotlin.Function1<1:0,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/ObjectIntMap.forEachValue|forEachValue(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun getOrElse(#A, kotlin/Function0<kotlin/Int>): kotlin/Int // androidx.collection/ObjectIntMap.getOrElse|getOrElse(1:0;kotlin.Function0<kotlin.Int>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<#A, kotlin/Int, kotlin/CharSequence>): kotlin/String // androidx.collection/ObjectIntMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<1:0,kotlin.Int,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/ObjectIntMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/ObjectIntMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/ObjectIntMap.toString|toString(){}[0]
}

sealed class <#A: kotlin/Any?> androidx.collection/ObjectList { // androidx.collection/ObjectList|null[0]
    constructor <init>(kotlin/Int) // androidx.collection/ObjectList.<init>|<init>(kotlin.Int){}[0]

    final val indices // androidx.collection/ObjectList.indices|{}indices[0]
        final inline fun <get-indices>(): kotlin.ranges/IntRange // androidx.collection/ObjectList.indices.<get-indices>|<get-indices>(){}[0]
    final val lastIndex // androidx.collection/ObjectList.lastIndex|{}lastIndex[0]
        final inline fun <get-lastIndex>(): kotlin/Int // androidx.collection/ObjectList.lastIndex.<get-lastIndex>|<get-lastIndex>(){}[0]
    final val size // androidx.collection/ObjectList.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/ObjectList.size.<get-size>|<get-size>(){}[0]

    final var _size // androidx.collection/ObjectList._size|{}_size[0]
        final fun <get-_size>(): kotlin/Int // androidx.collection/ObjectList._size.<get-_size>|<get-_size>(){}[0]
        final fun <set-_size>(kotlin/Int) // androidx.collection/ObjectList._size.<set-_size>|<set-_size>(kotlin.Int){}[0]
    final var content // androidx.collection/ObjectList.content|{}content[0]
        final fun <get-content>(): kotlin/Array<kotlin/Any?> // androidx.collection/ObjectList.content.<get-content>|<get-content>(){}[0]
        final fun <set-content>(kotlin/Array<kotlin/Any?>) // androidx.collection/ObjectList.content.<set-content>|<set-content>(kotlin.Array<kotlin.Any?>){}[0]

    abstract fun asList(): kotlin.collections/List<#A> // androidx.collection/ObjectList.asList|asList(){}[0]
    final fun any(): kotlin/Boolean // androidx.collection/ObjectList.any|any(){}[0]
    final fun contains(#A): kotlin/Boolean // androidx.collection/ObjectList.contains|contains(1:0){}[0]
    final fun containsAll(androidx.collection/ObjectList<#A>): kotlin/Boolean // androidx.collection/ObjectList.containsAll|containsAll(androidx.collection.ObjectList<1:0>){}[0]
    final fun containsAll(kotlin.collections/Iterable<#A>): kotlin/Boolean // androidx.collection/ObjectList.containsAll|containsAll(kotlin.collections.Iterable<1:0>){}[0]
    final fun containsAll(kotlin.collections/List<#A>): kotlin/Boolean // androidx.collection/ObjectList.containsAll|containsAll(kotlin.collections.List<1:0>){}[0]
    final fun containsAll(kotlin/Array<#A>): kotlin/Boolean // androidx.collection/ObjectList.containsAll|containsAll(kotlin.Array<1:0>){}[0]
    final fun count(): kotlin/Int // androidx.collection/ObjectList.count|count(){}[0]
    final fun elementAt(kotlin/Int): #A // androidx.collection/ObjectList.elementAt|elementAt(kotlin.Int){}[0]
    final fun first(): #A // androidx.collection/ObjectList.first|first(){}[0]
    final fun get(kotlin/Int): #A // androidx.collection/ObjectList.get|get(kotlin.Int){}[0]
    final fun indexOf(#A): kotlin/Int // androidx.collection/ObjectList.indexOf|indexOf(1:0){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/ObjectList.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/ObjectList.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., kotlin/Function1<#A, kotlin/CharSequence>? = ...): kotlin/String // androidx.collection/ObjectList.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function1<1:0,kotlin.CharSequence>?){}[0]
    final fun last(): #A // androidx.collection/ObjectList.last|last(){}[0]
    final fun lastIndexOf(#A): kotlin/Int // androidx.collection/ObjectList.lastIndexOf|lastIndexOf(1:0){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/ObjectList.none|none(){}[0]
    final inline fun <#A1: kotlin/Any?> fold(#A1, kotlin/Function2<#A1, #A, #A1>): #A1 // androidx.collection/ObjectList.fold|fold(0:0;kotlin.Function2<0:0,1:0,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldIndexed(#A1, kotlin/Function3<kotlin/Int, #A1, #A, #A1>): #A1 // androidx.collection/ObjectList.foldIndexed|foldIndexed(0:0;kotlin.Function3<kotlin.Int,0:0,1:0,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldRight(#A1, kotlin/Function2<#A, #A1, #A1>): #A1 // androidx.collection/ObjectList.foldRight|foldRight(0:0;kotlin.Function2<1:0,0:0,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldRightIndexed(#A1, kotlin/Function3<kotlin/Int, #A, #A1, #A1>): #A1 // androidx.collection/ObjectList.foldRightIndexed|foldRightIndexed(0:0;kotlin.Function3<kotlin.Int,1:0,0:0,0:0>){0§<kotlin.Any?>}[0]
    final inline fun any(kotlin/Function1<#A, kotlin/Boolean>): kotlin/Boolean // androidx.collection/ObjectList.any|any(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function1<#A, kotlin/Boolean>): kotlin/Int // androidx.collection/ObjectList.count|count(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun elementAtOrElse(kotlin/Int, kotlin/Function1<kotlin/Int, #A>): #A // androidx.collection/ObjectList.elementAtOrElse|elementAtOrElse(kotlin.Int;kotlin.Function1<kotlin.Int,1:0>){}[0]
    final inline fun first(kotlin/Function1<#A, kotlin/Boolean>): #A // androidx.collection/ObjectList.first|first(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun firstOrNull(): #A? // androidx.collection/ObjectList.firstOrNull|firstOrNull(){}[0]
    final inline fun firstOrNull(kotlin/Function1<#A, kotlin/Boolean>): #A? // androidx.collection/ObjectList.firstOrNull|firstOrNull(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function1<#A, kotlin/Unit>) // androidx.collection/ObjectList.forEach|forEach(kotlin.Function1<1:0,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function2<kotlin/Int, #A, kotlin/Unit>) // androidx.collection/ObjectList.forEachIndexed|forEachIndexed(kotlin.Function2<kotlin.Int,1:0,kotlin.Unit>){}[0]
    final inline fun forEachReversed(kotlin/Function1<#A, kotlin/Unit>) // androidx.collection/ObjectList.forEachReversed|forEachReversed(kotlin.Function1<1:0,kotlin.Unit>){}[0]
    final inline fun forEachReversedIndexed(kotlin/Function2<kotlin/Int, #A, kotlin/Unit>) // androidx.collection/ObjectList.forEachReversedIndexed|forEachReversedIndexed(kotlin.Function2<kotlin.Int,1:0,kotlin.Unit>){}[0]
    final inline fun indexOfFirst(kotlin/Function1<#A, kotlin/Boolean>): kotlin/Int // androidx.collection/ObjectList.indexOfFirst|indexOfFirst(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun indexOfLast(kotlin/Function1<#A, kotlin/Boolean>): kotlin/Int // androidx.collection/ObjectList.indexOfLast|indexOfLast(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun last(kotlin/Function1<#A, kotlin/Boolean>): #A // androidx.collection/ObjectList.last|last(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun lastOrNull(): #A? // androidx.collection/ObjectList.lastOrNull|lastOrNull(){}[0]
    final inline fun lastOrNull(kotlin/Function1<#A, kotlin/Boolean>): #A? // androidx.collection/ObjectList.lastOrNull|lastOrNull(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun reversedAny(kotlin/Function1<#A, kotlin/Boolean>): kotlin/Boolean // androidx.collection/ObjectList.reversedAny|reversedAny(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/ObjectList.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/ObjectList.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/ObjectList.toString|toString(){}[0]
}

sealed class <#A: kotlin/Any?> androidx.collection/ObjectLongMap { // androidx.collection/ObjectLongMap|null[0]
    constructor <init>() // androidx.collection/ObjectLongMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/ObjectLongMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/ObjectLongMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/ObjectLongMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/ObjectLongMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/ObjectLongMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/Array<kotlin/Any?> // androidx.collection/ObjectLongMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/Array<kotlin/Any?>) // androidx.collection/ObjectLongMap.keys.<set-keys>|<set-keys>(kotlin.Array<kotlin.Any?>){}[0]
    final var metadata // androidx.collection/ObjectLongMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/ObjectLongMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/ObjectLongMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/ObjectLongMap.values|{}values[0]
        final fun <get-values>(): kotlin/LongArray // androidx.collection/ObjectLongMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/LongArray) // androidx.collection/ObjectLongMap.values.<set-values>|<set-values>(kotlin.LongArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/ObjectLongMap.any|any(){}[0]
    final fun contains(#A): kotlin/Boolean // androidx.collection/ObjectLongMap.contains|contains(1:0){}[0]
    final fun containsKey(#A): kotlin/Boolean // androidx.collection/ObjectLongMap.containsKey|containsKey(1:0){}[0]
    final fun containsValue(kotlin/Long): kotlin/Boolean // androidx.collection/ObjectLongMap.containsValue|containsValue(kotlin.Long){}[0]
    final fun count(): kotlin/Int // androidx.collection/ObjectLongMap.count|count(){}[0]
    final fun findKeyIndex(#A): kotlin/Int // androidx.collection/ObjectLongMap.findKeyIndex|findKeyIndex(1:0){}[0]
    final fun get(#A): kotlin/Long // androidx.collection/ObjectLongMap.get|get(1:0){}[0]
    final fun getOrDefault(#A, kotlin/Long): kotlin/Long // androidx.collection/ObjectLongMap.getOrDefault|getOrDefault(1:0;kotlin.Long){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/ObjectLongMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/ObjectLongMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/ObjectLongMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/ObjectLongMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<#A, kotlin/Long, kotlin/Boolean>): kotlin/Boolean // androidx.collection/ObjectLongMap.all|all(kotlin.Function2<1:0,kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<#A, kotlin/Long, kotlin/Boolean>): kotlin/Boolean // androidx.collection/ObjectLongMap.any|any(kotlin.Function2<1:0,kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<#A, kotlin/Long, kotlin/Boolean>): kotlin/Int // androidx.collection/ObjectLongMap.count|count(kotlin.Function2<1:0,kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<#A, kotlin/Long, kotlin/Unit>) // androidx.collection/ObjectLongMap.forEach|forEach(kotlin.Function2<1:0,kotlin.Long,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/ObjectLongMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<#A, kotlin/Unit>) // androidx.collection/ObjectLongMap.forEachKey|forEachKey(kotlin.Function1<1:0,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<kotlin/Long, kotlin/Unit>) // androidx.collection/ObjectLongMap.forEachValue|forEachValue(kotlin.Function1<kotlin.Long,kotlin.Unit>){}[0]
    final inline fun getOrElse(#A, kotlin/Function0<kotlin/Long>): kotlin/Long // androidx.collection/ObjectLongMap.getOrElse|getOrElse(1:0;kotlin.Function0<kotlin.Long>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<#A, kotlin/Long, kotlin/CharSequence>): kotlin/String // androidx.collection/ObjectLongMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<1:0,kotlin.Long,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/ObjectLongMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/ObjectLongMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/ObjectLongMap.toString|toString(){}[0]
}

sealed class <#A: kotlin/Any?> androidx.collection/OrderedScatterSet { // androidx.collection/OrderedScatterSet|null[0]
    constructor <init>() // androidx.collection/OrderedScatterSet.<init>|<init>(){}[0]

    final val capacity // androidx.collection/OrderedScatterSet.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/OrderedScatterSet.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/OrderedScatterSet.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/OrderedScatterSet.size.<get-size>|<get-size>(){}[0]

    final var elements // androidx.collection/OrderedScatterSet.elements|{}elements[0]
        final fun <get-elements>(): kotlin/Array<kotlin/Any?> // androidx.collection/OrderedScatterSet.elements.<get-elements>|<get-elements>(){}[0]
        final fun <set-elements>(kotlin/Array<kotlin/Any?>) // androidx.collection/OrderedScatterSet.elements.<set-elements>|<set-elements>(kotlin.Array<kotlin.Any?>){}[0]
    final var head // androidx.collection/OrderedScatterSet.head|{}head[0]
        final fun <get-head>(): kotlin/Int // androidx.collection/OrderedScatterSet.head.<get-head>|<get-head>(){}[0]
        final fun <set-head>(kotlin/Int) // androidx.collection/OrderedScatterSet.head.<set-head>|<set-head>(kotlin.Int){}[0]
    final var metadata // androidx.collection/OrderedScatterSet.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/OrderedScatterSet.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/OrderedScatterSet.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var nodes // androidx.collection/OrderedScatterSet.nodes|{}nodes[0]
        final fun <get-nodes>(): kotlin/LongArray // androidx.collection/OrderedScatterSet.nodes.<get-nodes>|<get-nodes>(){}[0]
        final fun <set-nodes>(kotlin/LongArray) // androidx.collection/OrderedScatterSet.nodes.<set-nodes>|<set-nodes>(kotlin.LongArray){}[0]
    final var tail // androidx.collection/OrderedScatterSet.tail|{}tail[0]
        final fun <get-tail>(): kotlin/Int // androidx.collection/OrderedScatterSet.tail.<get-tail>|<get-tail>(){}[0]
        final fun <set-tail>(kotlin/Int) // androidx.collection/OrderedScatterSet.tail.<set-tail>|<set-tail>(kotlin.Int){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/OrderedScatterSet.any|any(){}[0]
    final fun asSet(): kotlin.collections/Set<#A> // androidx.collection/OrderedScatterSet.asSet|asSet(){}[0]
    final fun contains(#A): kotlin/Boolean // androidx.collection/OrderedScatterSet.contains|contains(1:0){}[0]
    final fun count(): kotlin/Int // androidx.collection/OrderedScatterSet.count|count(){}[0]
    final fun first(): #A // androidx.collection/OrderedScatterSet.first|first(){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/OrderedScatterSet.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/OrderedScatterSet.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., kotlin/Function1<#A, kotlin/CharSequence>? = ...): kotlin/String // androidx.collection/OrderedScatterSet.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function1<1:0,kotlin.CharSequence>?){}[0]
    final fun last(): #A // androidx.collection/OrderedScatterSet.last|last(){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/OrderedScatterSet.none|none(){}[0]
    final inline fun all(kotlin/Function1<#A, kotlin/Boolean>): kotlin/Boolean // androidx.collection/OrderedScatterSet.all|all(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function1<#A, kotlin/Boolean>): kotlin/Boolean // androidx.collection/OrderedScatterSet.any|any(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function1<#A, kotlin/Boolean>): kotlin/Int // androidx.collection/OrderedScatterSet.count|count(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun first(kotlin/Function1<#A, kotlin/Boolean>): #A // androidx.collection/OrderedScatterSet.first|first(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun firstOrNull(kotlin/Function1<#A, kotlin/Boolean>): #A? // androidx.collection/OrderedScatterSet.firstOrNull|firstOrNull(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function1<#A, kotlin/Unit>) // androidx.collection/OrderedScatterSet.forEach|forEach(kotlin.Function1<1:0,kotlin.Unit>){}[0]
    final inline fun forEachReverse(kotlin/Function1<#A, kotlin/Unit>) // androidx.collection/OrderedScatterSet.forEachReverse|forEachReverse(kotlin.Function1<1:0,kotlin.Unit>){}[0]
    final inline fun last(kotlin/Function1<#A, kotlin/Boolean>): #A // androidx.collection/OrderedScatterSet.last|last(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun lastOrNull(kotlin/Function1<#A, kotlin/Boolean>): #A? // androidx.collection/OrderedScatterSet.lastOrNull|lastOrNull(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun toList(): kotlin.collections/List<#A> // androidx.collection/OrderedScatterSet.toList|toList(){}[0]
    final inline fun unorderedForEach(kotlin/Function1<#A, kotlin/Unit>) // androidx.collection/OrderedScatterSet.unorderedForEach|unorderedForEach(kotlin.Function1<1:0,kotlin.Unit>){}[0]
    final inline fun unorderedForEachIndex(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/OrderedScatterSet.unorderedForEachIndex|unorderedForEachIndex(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/OrderedScatterSet.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/OrderedScatterSet.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/OrderedScatterSet.toString|toString(){}[0]
}

sealed class <#A: kotlin/Any?> androidx.collection/ScatterSet { // androidx.collection/ScatterSet|null[0]
    constructor <init>() // androidx.collection/ScatterSet.<init>|<init>(){}[0]

    final val capacity // androidx.collection/ScatterSet.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/ScatterSet.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/ScatterSet.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/ScatterSet.size.<get-size>|<get-size>(){}[0]

    final var elements // androidx.collection/ScatterSet.elements|{}elements[0]
        final fun <get-elements>(): kotlin/Array<kotlin/Any?> // androidx.collection/ScatterSet.elements.<get-elements>|<get-elements>(){}[0]
        final fun <set-elements>(kotlin/Array<kotlin/Any?>) // androidx.collection/ScatterSet.elements.<set-elements>|<set-elements>(kotlin.Array<kotlin.Any?>){}[0]
    final var metadata // androidx.collection/ScatterSet.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/ScatterSet.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/ScatterSet.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/ScatterSet.any|any(){}[0]
    final fun asSet(): kotlin.collections/Set<#A> // androidx.collection/ScatterSet.asSet|asSet(){}[0]
    final fun contains(#A): kotlin/Boolean // androidx.collection/ScatterSet.contains|contains(1:0){}[0]
    final fun count(): kotlin/Int // androidx.collection/ScatterSet.count|count(){}[0]
    final fun first(): #A // androidx.collection/ScatterSet.first|first(){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/ScatterSet.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/ScatterSet.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., kotlin/Function1<#A, kotlin/CharSequence>? = ...): kotlin/String // androidx.collection/ScatterSet.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function1<1:0,kotlin.CharSequence>?){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/ScatterSet.none|none(){}[0]
    final inline fun all(kotlin/Function1<#A, kotlin/Boolean>): kotlin/Boolean // androidx.collection/ScatterSet.all|all(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function1<#A, kotlin/Boolean>): kotlin/Boolean // androidx.collection/ScatterSet.any|any(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function1<#A, kotlin/Boolean>): kotlin/Int // androidx.collection/ScatterSet.count|count(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun first(kotlin/Function1<#A, kotlin/Boolean>): #A // androidx.collection/ScatterSet.first|first(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun firstOrNull(kotlin/Function1<#A, kotlin/Boolean>): #A? // androidx.collection/ScatterSet.firstOrNull|firstOrNull(kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function1<#A, kotlin/Unit>) // androidx.collection/ScatterSet.forEach|forEach(kotlin.Function1<1:0,kotlin.Unit>){}[0]
    final inline fun forEachIndex(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/ScatterSet.forEachIndex|forEachIndex(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/ScatterSet.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/ScatterSet.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/ScatterSet.toString|toString(){}[0]
}

sealed class androidx.collection/DoubleList { // androidx.collection/DoubleList|null[0]
    constructor <init>(kotlin/Int) // androidx.collection/DoubleList.<init>|<init>(kotlin.Int){}[0]

    final val indices // androidx.collection/DoubleList.indices|{}indices[0]
        final inline fun <get-indices>(): kotlin.ranges/IntRange // androidx.collection/DoubleList.indices.<get-indices>|<get-indices>(){}[0]
    final val lastIndex // androidx.collection/DoubleList.lastIndex|{}lastIndex[0]
        final inline fun <get-lastIndex>(): kotlin/Int // androidx.collection/DoubleList.lastIndex.<get-lastIndex>|<get-lastIndex>(){}[0]
    final val size // androidx.collection/DoubleList.size|{}size[0]
        final inline fun <get-size>(): kotlin/Int // androidx.collection/DoubleList.size.<get-size>|<get-size>(){}[0]

    final var _size // androidx.collection/DoubleList._size|{}_size[0]
        final fun <get-_size>(): kotlin/Int // androidx.collection/DoubleList._size.<get-_size>|<get-_size>(){}[0]
        final fun <set-_size>(kotlin/Int) // androidx.collection/DoubleList._size.<set-_size>|<set-_size>(kotlin.Int){}[0]
    final var content // androidx.collection/DoubleList.content|{}content[0]
        final fun <get-content>(): kotlin/DoubleArray // androidx.collection/DoubleList.content.<get-content>|<get-content>(){}[0]
        final fun <set-content>(kotlin/DoubleArray) // androidx.collection/DoubleList.content.<set-content>|<set-content>(kotlin.DoubleArray){}[0]

    final fun binarySearch(kotlin/Int, kotlin/Int = ..., kotlin/Int = ...): kotlin/Int // androidx.collection/DoubleList.binarySearch|binarySearch(kotlin.Int;kotlin.Int;kotlin.Int){}[0]
    final fun contains(kotlin/Double): kotlin/Boolean // androidx.collection/DoubleList.contains|contains(kotlin.Double){}[0]
    final fun containsAll(androidx.collection/DoubleList): kotlin/Boolean // androidx.collection/DoubleList.containsAll|containsAll(androidx.collection.DoubleList){}[0]
    final fun elementAt(kotlin/Int): kotlin/Double // androidx.collection/DoubleList.elementAt|elementAt(kotlin.Int){}[0]
    final fun first(): kotlin/Double // androidx.collection/DoubleList.first|first(){}[0]
    final fun get(kotlin/Int): kotlin/Double // androidx.collection/DoubleList.get|get(kotlin.Int){}[0]
    final fun indexOf(kotlin/Double): kotlin/Int // androidx.collection/DoubleList.indexOf|indexOf(kotlin.Double){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/DoubleList.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun last(): kotlin/Double // androidx.collection/DoubleList.last|last(){}[0]
    final fun lastIndexOf(kotlin/Double): kotlin/Int // androidx.collection/DoubleList.lastIndexOf|lastIndexOf(kotlin.Double){}[0]
    final inline fun <#A1: kotlin/Any?> fold(#A1, kotlin/Function2<#A1, kotlin/Double, #A1>): #A1 // androidx.collection/DoubleList.fold|fold(0:0;kotlin.Function2<0:0,kotlin.Double,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldIndexed(#A1, kotlin/Function3<kotlin/Int, #A1, kotlin/Double, #A1>): #A1 // androidx.collection/DoubleList.foldIndexed|foldIndexed(0:0;kotlin.Function3<kotlin.Int,0:0,kotlin.Double,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldRight(#A1, kotlin/Function2<kotlin/Double, #A1, #A1>): #A1 // androidx.collection/DoubleList.foldRight|foldRight(0:0;kotlin.Function2<kotlin.Double,0:0,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldRightIndexed(#A1, kotlin/Function3<kotlin/Int, kotlin/Double, #A1, #A1>): #A1 // androidx.collection/DoubleList.foldRightIndexed|foldRightIndexed(0:0;kotlin.Function3<kotlin.Int,kotlin.Double,0:0,0:0>){0§<kotlin.Any?>}[0]
    final inline fun any(): kotlin/Boolean // androidx.collection/DoubleList.any|any(){}[0]
    final inline fun any(kotlin/Function1<kotlin/Double, kotlin/Boolean>): kotlin/Boolean // androidx.collection/DoubleList.any|any(kotlin.Function1<kotlin.Double,kotlin.Boolean>){}[0]
    final inline fun count(): kotlin/Int // androidx.collection/DoubleList.count|count(){}[0]
    final inline fun count(kotlin/Function1<kotlin/Double, kotlin/Boolean>): kotlin/Int // androidx.collection/DoubleList.count|count(kotlin.Function1<kotlin.Double,kotlin.Boolean>){}[0]
    final inline fun elementAtOrElse(kotlin/Int, kotlin/Function1<kotlin/Int, kotlin/Double>): kotlin/Double // androidx.collection/DoubleList.elementAtOrElse|elementAtOrElse(kotlin.Int;kotlin.Function1<kotlin.Int,kotlin.Double>){}[0]
    final inline fun first(kotlin/Function1<kotlin/Double, kotlin/Boolean>): kotlin/Double // androidx.collection/DoubleList.first|first(kotlin.Function1<kotlin.Double,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function1<kotlin/Double, kotlin/Unit>) // androidx.collection/DoubleList.forEach|forEach(kotlin.Function1<kotlin.Double,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function2<kotlin/Int, kotlin/Double, kotlin/Unit>) // androidx.collection/DoubleList.forEachIndexed|forEachIndexed(kotlin.Function2<kotlin.Int,kotlin.Double,kotlin.Unit>){}[0]
    final inline fun forEachReversed(kotlin/Function1<kotlin/Double, kotlin/Unit>) // androidx.collection/DoubleList.forEachReversed|forEachReversed(kotlin.Function1<kotlin.Double,kotlin.Unit>){}[0]
    final inline fun forEachReversedIndexed(kotlin/Function2<kotlin/Int, kotlin/Double, kotlin/Unit>) // androidx.collection/DoubleList.forEachReversedIndexed|forEachReversedIndexed(kotlin.Function2<kotlin.Int,kotlin.Double,kotlin.Unit>){}[0]
    final inline fun indexOfFirst(kotlin/Function1<kotlin/Double, kotlin/Boolean>): kotlin/Int // androidx.collection/DoubleList.indexOfFirst|indexOfFirst(kotlin.Function1<kotlin.Double,kotlin.Boolean>){}[0]
    final inline fun indexOfLast(kotlin/Function1<kotlin/Double, kotlin/Boolean>): kotlin/Int // androidx.collection/DoubleList.indexOfLast|indexOfLast(kotlin.Function1<kotlin.Double,kotlin.Boolean>){}[0]
    final inline fun isEmpty(): kotlin/Boolean // androidx.collection/DoubleList.isEmpty|isEmpty(){}[0]
    final inline fun isNotEmpty(): kotlin/Boolean // androidx.collection/DoubleList.isNotEmpty|isNotEmpty(){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function1<kotlin/Double, kotlin/CharSequence>): kotlin/String // androidx.collection/DoubleList.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function1<kotlin.Double,kotlin.CharSequence>){}[0]
    final inline fun last(kotlin/Function1<kotlin/Double, kotlin/Boolean>): kotlin/Double // androidx.collection/DoubleList.last|last(kotlin.Function1<kotlin.Double,kotlin.Boolean>){}[0]
    final inline fun none(): kotlin/Boolean // androidx.collection/DoubleList.none|none(){}[0]
    final inline fun reversedAny(kotlin/Function1<kotlin/Double, kotlin/Boolean>): kotlin/Boolean // androidx.collection/DoubleList.reversedAny|reversedAny(kotlin.Function1<kotlin.Double,kotlin.Boolean>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/DoubleList.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/DoubleList.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/DoubleList.toString|toString(){}[0]
}

sealed class androidx.collection/FloatFloatMap { // androidx.collection/FloatFloatMap|null[0]
    constructor <init>() // androidx.collection/FloatFloatMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/FloatFloatMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/FloatFloatMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/FloatFloatMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/FloatFloatMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/FloatFloatMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/FloatArray // androidx.collection/FloatFloatMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/FloatArray) // androidx.collection/FloatFloatMap.keys.<set-keys>|<set-keys>(kotlin.FloatArray){}[0]
    final var metadata // androidx.collection/FloatFloatMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/FloatFloatMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/FloatFloatMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/FloatFloatMap.values|{}values[0]
        final fun <get-values>(): kotlin/FloatArray // androidx.collection/FloatFloatMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/FloatArray) // androidx.collection/FloatFloatMap.values.<set-values>|<set-values>(kotlin.FloatArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/FloatFloatMap.any|any(){}[0]
    final fun contains(kotlin/Float): kotlin/Boolean // androidx.collection/FloatFloatMap.contains|contains(kotlin.Float){}[0]
    final fun containsKey(kotlin/Float): kotlin/Boolean // androidx.collection/FloatFloatMap.containsKey|containsKey(kotlin.Float){}[0]
    final fun containsValue(kotlin/Float): kotlin/Boolean // androidx.collection/FloatFloatMap.containsValue|containsValue(kotlin.Float){}[0]
    final fun count(): kotlin/Int // androidx.collection/FloatFloatMap.count|count(){}[0]
    final fun findKeyIndex(kotlin/Float): kotlin/Int // androidx.collection/FloatFloatMap.findKeyIndex|findKeyIndex(kotlin.Float){}[0]
    final fun get(kotlin/Float): kotlin/Float // androidx.collection/FloatFloatMap.get|get(kotlin.Float){}[0]
    final fun getOrDefault(kotlin/Float, kotlin/Float): kotlin/Float // androidx.collection/FloatFloatMap.getOrDefault|getOrDefault(kotlin.Float;kotlin.Float){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/FloatFloatMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/FloatFloatMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/FloatFloatMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/FloatFloatMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<kotlin/Float, kotlin/Float, kotlin/Boolean>): kotlin/Boolean // androidx.collection/FloatFloatMap.all|all(kotlin.Function2<kotlin.Float,kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<kotlin/Float, kotlin/Float, kotlin/Boolean>): kotlin/Boolean // androidx.collection/FloatFloatMap.any|any(kotlin.Function2<kotlin.Float,kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<kotlin/Float, kotlin/Float, kotlin/Boolean>): kotlin/Int // androidx.collection/FloatFloatMap.count|count(kotlin.Function2<kotlin.Float,kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<kotlin/Float, kotlin/Float, kotlin/Unit>) // androidx.collection/FloatFloatMap.forEach|forEach(kotlin.Function2<kotlin.Float,kotlin.Float,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/FloatFloatMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<kotlin/Float, kotlin/Unit>) // androidx.collection/FloatFloatMap.forEachKey|forEachKey(kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<kotlin/Float, kotlin/Unit>) // androidx.collection/FloatFloatMap.forEachValue|forEachValue(kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
    final inline fun getOrElse(kotlin/Float, kotlin/Function0<kotlin/Float>): kotlin/Float // androidx.collection/FloatFloatMap.getOrElse|getOrElse(kotlin.Float;kotlin.Function0<kotlin.Float>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<kotlin/Float, kotlin/Float, kotlin/CharSequence>): kotlin/String // androidx.collection/FloatFloatMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<kotlin.Float,kotlin.Float,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/FloatFloatMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/FloatFloatMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/FloatFloatMap.toString|toString(){}[0]
}

sealed class androidx.collection/FloatIntMap { // androidx.collection/FloatIntMap|null[0]
    constructor <init>() // androidx.collection/FloatIntMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/FloatIntMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/FloatIntMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/FloatIntMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/FloatIntMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/FloatIntMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/FloatArray // androidx.collection/FloatIntMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/FloatArray) // androidx.collection/FloatIntMap.keys.<set-keys>|<set-keys>(kotlin.FloatArray){}[0]
    final var metadata // androidx.collection/FloatIntMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/FloatIntMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/FloatIntMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/FloatIntMap.values|{}values[0]
        final fun <get-values>(): kotlin/IntArray // androidx.collection/FloatIntMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/IntArray) // androidx.collection/FloatIntMap.values.<set-values>|<set-values>(kotlin.IntArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/FloatIntMap.any|any(){}[0]
    final fun contains(kotlin/Float): kotlin/Boolean // androidx.collection/FloatIntMap.contains|contains(kotlin.Float){}[0]
    final fun containsKey(kotlin/Float): kotlin/Boolean // androidx.collection/FloatIntMap.containsKey|containsKey(kotlin.Float){}[0]
    final fun containsValue(kotlin/Int): kotlin/Boolean // androidx.collection/FloatIntMap.containsValue|containsValue(kotlin.Int){}[0]
    final fun count(): kotlin/Int // androidx.collection/FloatIntMap.count|count(){}[0]
    final fun findKeyIndex(kotlin/Float): kotlin/Int // androidx.collection/FloatIntMap.findKeyIndex|findKeyIndex(kotlin.Float){}[0]
    final fun get(kotlin/Float): kotlin/Int // androidx.collection/FloatIntMap.get|get(kotlin.Float){}[0]
    final fun getOrDefault(kotlin/Float, kotlin/Int): kotlin/Int // androidx.collection/FloatIntMap.getOrDefault|getOrDefault(kotlin.Float;kotlin.Int){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/FloatIntMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/FloatIntMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/FloatIntMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/FloatIntMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<kotlin/Float, kotlin/Int, kotlin/Boolean>): kotlin/Boolean // androidx.collection/FloatIntMap.all|all(kotlin.Function2<kotlin.Float,kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<kotlin/Float, kotlin/Int, kotlin/Boolean>): kotlin/Boolean // androidx.collection/FloatIntMap.any|any(kotlin.Function2<kotlin.Float,kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<kotlin/Float, kotlin/Int, kotlin/Boolean>): kotlin/Int // androidx.collection/FloatIntMap.count|count(kotlin.Function2<kotlin.Float,kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<kotlin/Float, kotlin/Int, kotlin/Unit>) // androidx.collection/FloatIntMap.forEach|forEach(kotlin.Function2<kotlin.Float,kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/FloatIntMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<kotlin/Float, kotlin/Unit>) // androidx.collection/FloatIntMap.forEachKey|forEachKey(kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/FloatIntMap.forEachValue|forEachValue(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun getOrElse(kotlin/Float, kotlin/Function0<kotlin/Int>): kotlin/Int // androidx.collection/FloatIntMap.getOrElse|getOrElse(kotlin.Float;kotlin.Function0<kotlin.Int>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<kotlin/Float, kotlin/Int, kotlin/CharSequence>): kotlin/String // androidx.collection/FloatIntMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<kotlin.Float,kotlin.Int,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/FloatIntMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/FloatIntMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/FloatIntMap.toString|toString(){}[0]
}

sealed class androidx.collection/FloatList { // androidx.collection/FloatList|null[0]
    constructor <init>(kotlin/Int) // androidx.collection/FloatList.<init>|<init>(kotlin.Int){}[0]

    final val indices // androidx.collection/FloatList.indices|{}indices[0]
        final inline fun <get-indices>(): kotlin.ranges/IntRange // androidx.collection/FloatList.indices.<get-indices>|<get-indices>(){}[0]
    final val lastIndex // androidx.collection/FloatList.lastIndex|{}lastIndex[0]
        final inline fun <get-lastIndex>(): kotlin/Int // androidx.collection/FloatList.lastIndex.<get-lastIndex>|<get-lastIndex>(){}[0]
    final val size // androidx.collection/FloatList.size|{}size[0]
        final inline fun <get-size>(): kotlin/Int // androidx.collection/FloatList.size.<get-size>|<get-size>(){}[0]

    final var _size // androidx.collection/FloatList._size|{}_size[0]
        final fun <get-_size>(): kotlin/Int // androidx.collection/FloatList._size.<get-_size>|<get-_size>(){}[0]
        final fun <set-_size>(kotlin/Int) // androidx.collection/FloatList._size.<set-_size>|<set-_size>(kotlin.Int){}[0]
    final var content // androidx.collection/FloatList.content|{}content[0]
        final fun <get-content>(): kotlin/FloatArray // androidx.collection/FloatList.content.<get-content>|<get-content>(){}[0]
        final fun <set-content>(kotlin/FloatArray) // androidx.collection/FloatList.content.<set-content>|<set-content>(kotlin.FloatArray){}[0]

    final fun binarySearch(kotlin/Int, kotlin/Int = ..., kotlin/Int = ...): kotlin/Int // androidx.collection/FloatList.binarySearch|binarySearch(kotlin.Int;kotlin.Int;kotlin.Int){}[0]
    final fun contains(kotlin/Float): kotlin/Boolean // androidx.collection/FloatList.contains|contains(kotlin.Float){}[0]
    final fun containsAll(androidx.collection/FloatList): kotlin/Boolean // androidx.collection/FloatList.containsAll|containsAll(androidx.collection.FloatList){}[0]
    final fun elementAt(kotlin/Int): kotlin/Float // androidx.collection/FloatList.elementAt|elementAt(kotlin.Int){}[0]
    final fun first(): kotlin/Float // androidx.collection/FloatList.first|first(){}[0]
    final fun get(kotlin/Int): kotlin/Float // androidx.collection/FloatList.get|get(kotlin.Int){}[0]
    final fun indexOf(kotlin/Float): kotlin/Int // androidx.collection/FloatList.indexOf|indexOf(kotlin.Float){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/FloatList.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun last(): kotlin/Float // androidx.collection/FloatList.last|last(){}[0]
    final fun lastIndexOf(kotlin/Float): kotlin/Int // androidx.collection/FloatList.lastIndexOf|lastIndexOf(kotlin.Float){}[0]
    final inline fun <#A1: kotlin/Any?> fold(#A1, kotlin/Function2<#A1, kotlin/Float, #A1>): #A1 // androidx.collection/FloatList.fold|fold(0:0;kotlin.Function2<0:0,kotlin.Float,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldIndexed(#A1, kotlin/Function3<kotlin/Int, #A1, kotlin/Float, #A1>): #A1 // androidx.collection/FloatList.foldIndexed|foldIndexed(0:0;kotlin.Function3<kotlin.Int,0:0,kotlin.Float,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldRight(#A1, kotlin/Function2<kotlin/Float, #A1, #A1>): #A1 // androidx.collection/FloatList.foldRight|foldRight(0:0;kotlin.Function2<kotlin.Float,0:0,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldRightIndexed(#A1, kotlin/Function3<kotlin/Int, kotlin/Float, #A1, #A1>): #A1 // androidx.collection/FloatList.foldRightIndexed|foldRightIndexed(0:0;kotlin.Function3<kotlin.Int,kotlin.Float,0:0,0:0>){0§<kotlin.Any?>}[0]
    final inline fun any(): kotlin/Boolean // androidx.collection/FloatList.any|any(){}[0]
    final inline fun any(kotlin/Function1<kotlin/Float, kotlin/Boolean>): kotlin/Boolean // androidx.collection/FloatList.any|any(kotlin.Function1<kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun count(): kotlin/Int // androidx.collection/FloatList.count|count(){}[0]
    final inline fun count(kotlin/Function1<kotlin/Float, kotlin/Boolean>): kotlin/Int // androidx.collection/FloatList.count|count(kotlin.Function1<kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun elementAtOrElse(kotlin/Int, kotlin/Function1<kotlin/Int, kotlin/Float>): kotlin/Float // androidx.collection/FloatList.elementAtOrElse|elementAtOrElse(kotlin.Int;kotlin.Function1<kotlin.Int,kotlin.Float>){}[0]
    final inline fun first(kotlin/Function1<kotlin/Float, kotlin/Boolean>): kotlin/Float // androidx.collection/FloatList.first|first(kotlin.Function1<kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function1<kotlin/Float, kotlin/Unit>) // androidx.collection/FloatList.forEach|forEach(kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function2<kotlin/Int, kotlin/Float, kotlin/Unit>) // androidx.collection/FloatList.forEachIndexed|forEachIndexed(kotlin.Function2<kotlin.Int,kotlin.Float,kotlin.Unit>){}[0]
    final inline fun forEachReversed(kotlin/Function1<kotlin/Float, kotlin/Unit>) // androidx.collection/FloatList.forEachReversed|forEachReversed(kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
    final inline fun forEachReversedIndexed(kotlin/Function2<kotlin/Int, kotlin/Float, kotlin/Unit>) // androidx.collection/FloatList.forEachReversedIndexed|forEachReversedIndexed(kotlin.Function2<kotlin.Int,kotlin.Float,kotlin.Unit>){}[0]
    final inline fun indexOfFirst(kotlin/Function1<kotlin/Float, kotlin/Boolean>): kotlin/Int // androidx.collection/FloatList.indexOfFirst|indexOfFirst(kotlin.Function1<kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun indexOfLast(kotlin/Function1<kotlin/Float, kotlin/Boolean>): kotlin/Int // androidx.collection/FloatList.indexOfLast|indexOfLast(kotlin.Function1<kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun isEmpty(): kotlin/Boolean // androidx.collection/FloatList.isEmpty|isEmpty(){}[0]
    final inline fun isNotEmpty(): kotlin/Boolean // androidx.collection/FloatList.isNotEmpty|isNotEmpty(){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function1<kotlin/Float, kotlin/CharSequence>): kotlin/String // androidx.collection/FloatList.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function1<kotlin.Float,kotlin.CharSequence>){}[0]
    final inline fun last(kotlin/Function1<kotlin/Float, kotlin/Boolean>): kotlin/Float // androidx.collection/FloatList.last|last(kotlin.Function1<kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun none(): kotlin/Boolean // androidx.collection/FloatList.none|none(){}[0]
    final inline fun reversedAny(kotlin/Function1<kotlin/Float, kotlin/Boolean>): kotlin/Boolean // androidx.collection/FloatList.reversedAny|reversedAny(kotlin.Function1<kotlin.Float,kotlin.Boolean>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/FloatList.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/FloatList.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/FloatList.toString|toString(){}[0]
}

sealed class androidx.collection/FloatLongMap { // androidx.collection/FloatLongMap|null[0]
    constructor <init>() // androidx.collection/FloatLongMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/FloatLongMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/FloatLongMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/FloatLongMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/FloatLongMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/FloatLongMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/FloatArray // androidx.collection/FloatLongMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/FloatArray) // androidx.collection/FloatLongMap.keys.<set-keys>|<set-keys>(kotlin.FloatArray){}[0]
    final var metadata // androidx.collection/FloatLongMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/FloatLongMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/FloatLongMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/FloatLongMap.values|{}values[0]
        final fun <get-values>(): kotlin/LongArray // androidx.collection/FloatLongMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/LongArray) // androidx.collection/FloatLongMap.values.<set-values>|<set-values>(kotlin.LongArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/FloatLongMap.any|any(){}[0]
    final fun contains(kotlin/Float): kotlin/Boolean // androidx.collection/FloatLongMap.contains|contains(kotlin.Float){}[0]
    final fun containsKey(kotlin/Float): kotlin/Boolean // androidx.collection/FloatLongMap.containsKey|containsKey(kotlin.Float){}[0]
    final fun containsValue(kotlin/Long): kotlin/Boolean // androidx.collection/FloatLongMap.containsValue|containsValue(kotlin.Long){}[0]
    final fun count(): kotlin/Int // androidx.collection/FloatLongMap.count|count(){}[0]
    final fun findKeyIndex(kotlin/Float): kotlin/Int // androidx.collection/FloatLongMap.findKeyIndex|findKeyIndex(kotlin.Float){}[0]
    final fun get(kotlin/Float): kotlin/Long // androidx.collection/FloatLongMap.get|get(kotlin.Float){}[0]
    final fun getOrDefault(kotlin/Float, kotlin/Long): kotlin/Long // androidx.collection/FloatLongMap.getOrDefault|getOrDefault(kotlin.Float;kotlin.Long){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/FloatLongMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/FloatLongMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/FloatLongMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/FloatLongMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<kotlin/Float, kotlin/Long, kotlin/Boolean>): kotlin/Boolean // androidx.collection/FloatLongMap.all|all(kotlin.Function2<kotlin.Float,kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<kotlin/Float, kotlin/Long, kotlin/Boolean>): kotlin/Boolean // androidx.collection/FloatLongMap.any|any(kotlin.Function2<kotlin.Float,kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<kotlin/Float, kotlin/Long, kotlin/Boolean>): kotlin/Int // androidx.collection/FloatLongMap.count|count(kotlin.Function2<kotlin.Float,kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<kotlin/Float, kotlin/Long, kotlin/Unit>) // androidx.collection/FloatLongMap.forEach|forEach(kotlin.Function2<kotlin.Float,kotlin.Long,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/FloatLongMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<kotlin/Float, kotlin/Unit>) // androidx.collection/FloatLongMap.forEachKey|forEachKey(kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<kotlin/Long, kotlin/Unit>) // androidx.collection/FloatLongMap.forEachValue|forEachValue(kotlin.Function1<kotlin.Long,kotlin.Unit>){}[0]
    final inline fun getOrElse(kotlin/Float, kotlin/Function0<kotlin/Long>): kotlin/Long // androidx.collection/FloatLongMap.getOrElse|getOrElse(kotlin.Float;kotlin.Function0<kotlin.Long>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<kotlin/Float, kotlin/Long, kotlin/CharSequence>): kotlin/String // androidx.collection/FloatLongMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<kotlin.Float,kotlin.Long,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/FloatLongMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/FloatLongMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/FloatLongMap.toString|toString(){}[0]
}

sealed class androidx.collection/FloatSet { // androidx.collection/FloatSet|null[0]
    constructor <init>() // androidx.collection/FloatSet.<init>|<init>(){}[0]

    final val capacity // androidx.collection/FloatSet.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/FloatSet.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/FloatSet.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/FloatSet.size.<get-size>|<get-size>(){}[0]

    final var elements // androidx.collection/FloatSet.elements|{}elements[0]
        final fun <get-elements>(): kotlin/FloatArray // androidx.collection/FloatSet.elements.<get-elements>|<get-elements>(){}[0]
        final fun <set-elements>(kotlin/FloatArray) // androidx.collection/FloatSet.elements.<set-elements>|<set-elements>(kotlin.FloatArray){}[0]
    final var metadata // androidx.collection/FloatSet.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/FloatSet.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/FloatSet.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/FloatSet.any|any(){}[0]
    final fun contains(kotlin/Float): kotlin/Boolean // androidx.collection/FloatSet.contains|contains(kotlin.Float){}[0]
    final fun count(): kotlin/Int // androidx.collection/FloatSet.count|count(){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/FloatSet.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/FloatSet.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/FloatSet.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/FloatSet.none|none(){}[0]
    final inline fun all(kotlin/Function1<kotlin/Float, kotlin/Boolean>): kotlin/Boolean // androidx.collection/FloatSet.all|all(kotlin.Function1<kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function1<kotlin/Float, kotlin/Boolean>): kotlin/Boolean // androidx.collection/FloatSet.any|any(kotlin.Function1<kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function1<kotlin/Float, kotlin/Boolean>): kotlin/Int // androidx.collection/FloatSet.count|count(kotlin.Function1<kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun first(): kotlin/Float // androidx.collection/FloatSet.first|first(){}[0]
    final inline fun first(kotlin/Function1<kotlin/Float, kotlin/Boolean>): kotlin/Float // androidx.collection/FloatSet.first|first(kotlin.Function1<kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function1<kotlin/Float, kotlin/Unit>) // androidx.collection/FloatSet.forEach|forEach(kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
    final inline fun forEachIndex(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/FloatSet.forEachIndex|forEachIndex(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function1<kotlin/Float, kotlin/CharSequence>): kotlin/String // androidx.collection/FloatSet.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function1<kotlin.Float,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/FloatSet.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/FloatSet.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/FloatSet.toString|toString(){}[0]
}

sealed class androidx.collection/IntFloatMap { // androidx.collection/IntFloatMap|null[0]
    constructor <init>() // androidx.collection/IntFloatMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/IntFloatMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/IntFloatMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/IntFloatMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/IntFloatMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/IntFloatMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/IntArray // androidx.collection/IntFloatMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/IntArray) // androidx.collection/IntFloatMap.keys.<set-keys>|<set-keys>(kotlin.IntArray){}[0]
    final var metadata // androidx.collection/IntFloatMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/IntFloatMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/IntFloatMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/IntFloatMap.values|{}values[0]
        final fun <get-values>(): kotlin/FloatArray // androidx.collection/IntFloatMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/FloatArray) // androidx.collection/IntFloatMap.values.<set-values>|<set-values>(kotlin.FloatArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/IntFloatMap.any|any(){}[0]
    final fun contains(kotlin/Int): kotlin/Boolean // androidx.collection/IntFloatMap.contains|contains(kotlin.Int){}[0]
    final fun containsKey(kotlin/Int): kotlin/Boolean // androidx.collection/IntFloatMap.containsKey|containsKey(kotlin.Int){}[0]
    final fun containsValue(kotlin/Float): kotlin/Boolean // androidx.collection/IntFloatMap.containsValue|containsValue(kotlin.Float){}[0]
    final fun count(): kotlin/Int // androidx.collection/IntFloatMap.count|count(){}[0]
    final fun findKeyIndex(kotlin/Int): kotlin/Int // androidx.collection/IntFloatMap.findKeyIndex|findKeyIndex(kotlin.Int){}[0]
    final fun get(kotlin/Int): kotlin/Float // androidx.collection/IntFloatMap.get|get(kotlin.Int){}[0]
    final fun getOrDefault(kotlin/Int, kotlin/Float): kotlin/Float // androidx.collection/IntFloatMap.getOrDefault|getOrDefault(kotlin.Int;kotlin.Float){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/IntFloatMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/IntFloatMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/IntFloatMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/IntFloatMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<kotlin/Int, kotlin/Float, kotlin/Boolean>): kotlin/Boolean // androidx.collection/IntFloatMap.all|all(kotlin.Function2<kotlin.Int,kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<kotlin/Int, kotlin/Float, kotlin/Boolean>): kotlin/Boolean // androidx.collection/IntFloatMap.any|any(kotlin.Function2<kotlin.Int,kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<kotlin/Int, kotlin/Float, kotlin/Boolean>): kotlin/Int // androidx.collection/IntFloatMap.count|count(kotlin.Function2<kotlin.Int,kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<kotlin/Int, kotlin/Float, kotlin/Unit>) // androidx.collection/IntFloatMap.forEach|forEach(kotlin.Function2<kotlin.Int,kotlin.Float,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/IntFloatMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/IntFloatMap.forEachKey|forEachKey(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<kotlin/Float, kotlin/Unit>) // androidx.collection/IntFloatMap.forEachValue|forEachValue(kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
    final inline fun getOrElse(kotlin/Int, kotlin/Function0<kotlin/Float>): kotlin/Float // androidx.collection/IntFloatMap.getOrElse|getOrElse(kotlin.Int;kotlin.Function0<kotlin.Float>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<kotlin/Int, kotlin/Float, kotlin/CharSequence>): kotlin/String // androidx.collection/IntFloatMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<kotlin.Int,kotlin.Float,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/IntFloatMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/IntFloatMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/IntFloatMap.toString|toString(){}[0]
}

sealed class androidx.collection/IntIntMap { // androidx.collection/IntIntMap|null[0]
    constructor <init>() // androidx.collection/IntIntMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/IntIntMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/IntIntMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/IntIntMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/IntIntMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/IntIntMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/IntArray // androidx.collection/IntIntMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/IntArray) // androidx.collection/IntIntMap.keys.<set-keys>|<set-keys>(kotlin.IntArray){}[0]
    final var metadata // androidx.collection/IntIntMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/IntIntMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/IntIntMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/IntIntMap.values|{}values[0]
        final fun <get-values>(): kotlin/IntArray // androidx.collection/IntIntMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/IntArray) // androidx.collection/IntIntMap.values.<set-values>|<set-values>(kotlin.IntArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/IntIntMap.any|any(){}[0]
    final fun contains(kotlin/Int): kotlin/Boolean // androidx.collection/IntIntMap.contains|contains(kotlin.Int){}[0]
    final fun containsKey(kotlin/Int): kotlin/Boolean // androidx.collection/IntIntMap.containsKey|containsKey(kotlin.Int){}[0]
    final fun containsValue(kotlin/Int): kotlin/Boolean // androidx.collection/IntIntMap.containsValue|containsValue(kotlin.Int){}[0]
    final fun count(): kotlin/Int // androidx.collection/IntIntMap.count|count(){}[0]
    final fun findKeyIndex(kotlin/Int): kotlin/Int // androidx.collection/IntIntMap.findKeyIndex|findKeyIndex(kotlin.Int){}[0]
    final fun get(kotlin/Int): kotlin/Int // androidx.collection/IntIntMap.get|get(kotlin.Int){}[0]
    final fun getOrDefault(kotlin/Int, kotlin/Int): kotlin/Int // androidx.collection/IntIntMap.getOrDefault|getOrDefault(kotlin.Int;kotlin.Int){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/IntIntMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/IntIntMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/IntIntMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/IntIntMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<kotlin/Int, kotlin/Int, kotlin/Boolean>): kotlin/Boolean // androidx.collection/IntIntMap.all|all(kotlin.Function2<kotlin.Int,kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<kotlin/Int, kotlin/Int, kotlin/Boolean>): kotlin/Boolean // androidx.collection/IntIntMap.any|any(kotlin.Function2<kotlin.Int,kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<kotlin/Int, kotlin/Int, kotlin/Boolean>): kotlin/Int // androidx.collection/IntIntMap.count|count(kotlin.Function2<kotlin.Int,kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<kotlin/Int, kotlin/Int, kotlin/Unit>) // androidx.collection/IntIntMap.forEach|forEach(kotlin.Function2<kotlin.Int,kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/IntIntMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/IntIntMap.forEachKey|forEachKey(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/IntIntMap.forEachValue|forEachValue(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun getOrElse(kotlin/Int, kotlin/Function0<kotlin/Int>): kotlin/Int // androidx.collection/IntIntMap.getOrElse|getOrElse(kotlin.Int;kotlin.Function0<kotlin.Int>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<kotlin/Int, kotlin/Int, kotlin/CharSequence>): kotlin/String // androidx.collection/IntIntMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<kotlin.Int,kotlin.Int,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/IntIntMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/IntIntMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/IntIntMap.toString|toString(){}[0]
}

sealed class androidx.collection/IntList { // androidx.collection/IntList|null[0]
    constructor <init>(kotlin/Int) // androidx.collection/IntList.<init>|<init>(kotlin.Int){}[0]

    final val indices // androidx.collection/IntList.indices|{}indices[0]
        final inline fun <get-indices>(): kotlin.ranges/IntRange // androidx.collection/IntList.indices.<get-indices>|<get-indices>(){}[0]
    final val lastIndex // androidx.collection/IntList.lastIndex|{}lastIndex[0]
        final inline fun <get-lastIndex>(): kotlin/Int // androidx.collection/IntList.lastIndex.<get-lastIndex>|<get-lastIndex>(){}[0]
    final val size // androidx.collection/IntList.size|{}size[0]
        final inline fun <get-size>(): kotlin/Int // androidx.collection/IntList.size.<get-size>|<get-size>(){}[0]

    final var _size // androidx.collection/IntList._size|{}_size[0]
        final fun <get-_size>(): kotlin/Int // androidx.collection/IntList._size.<get-_size>|<get-_size>(){}[0]
        final fun <set-_size>(kotlin/Int) // androidx.collection/IntList._size.<set-_size>|<set-_size>(kotlin.Int){}[0]
    final var content // androidx.collection/IntList.content|{}content[0]
        final fun <get-content>(): kotlin/IntArray // androidx.collection/IntList.content.<get-content>|<get-content>(){}[0]
        final fun <set-content>(kotlin/IntArray) // androidx.collection/IntList.content.<set-content>|<set-content>(kotlin.IntArray){}[0]

    final fun binarySearch(kotlin/Int, kotlin/Int = ..., kotlin/Int = ...): kotlin/Int // androidx.collection/IntList.binarySearch|binarySearch(kotlin.Int;kotlin.Int;kotlin.Int){}[0]
    final fun contains(kotlin/Int): kotlin/Boolean // androidx.collection/IntList.contains|contains(kotlin.Int){}[0]
    final fun containsAll(androidx.collection/IntList): kotlin/Boolean // androidx.collection/IntList.containsAll|containsAll(androidx.collection.IntList){}[0]
    final fun elementAt(kotlin/Int): kotlin/Int // androidx.collection/IntList.elementAt|elementAt(kotlin.Int){}[0]
    final fun first(): kotlin/Int // androidx.collection/IntList.first|first(){}[0]
    final fun get(kotlin/Int): kotlin/Int // androidx.collection/IntList.get|get(kotlin.Int){}[0]
    final fun indexOf(kotlin/Int): kotlin/Int // androidx.collection/IntList.indexOf|indexOf(kotlin.Int){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/IntList.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun last(): kotlin/Int // androidx.collection/IntList.last|last(){}[0]
    final fun lastIndexOf(kotlin/Int): kotlin/Int // androidx.collection/IntList.lastIndexOf|lastIndexOf(kotlin.Int){}[0]
    final inline fun <#A1: kotlin/Any?> fold(#A1, kotlin/Function2<#A1, kotlin/Int, #A1>): #A1 // androidx.collection/IntList.fold|fold(0:0;kotlin.Function2<0:0,kotlin.Int,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldIndexed(#A1, kotlin/Function3<kotlin/Int, #A1, kotlin/Int, #A1>): #A1 // androidx.collection/IntList.foldIndexed|foldIndexed(0:0;kotlin.Function3<kotlin.Int,0:0,kotlin.Int,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldRight(#A1, kotlin/Function2<kotlin/Int, #A1, #A1>): #A1 // androidx.collection/IntList.foldRight|foldRight(0:0;kotlin.Function2<kotlin.Int,0:0,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldRightIndexed(#A1, kotlin/Function3<kotlin/Int, kotlin/Int, #A1, #A1>): #A1 // androidx.collection/IntList.foldRightIndexed|foldRightIndexed(0:0;kotlin.Function3<kotlin.Int,kotlin.Int,0:0,0:0>){0§<kotlin.Any?>}[0]
    final inline fun any(): kotlin/Boolean // androidx.collection/IntList.any|any(){}[0]
    final inline fun any(kotlin/Function1<kotlin/Int, kotlin/Boolean>): kotlin/Boolean // androidx.collection/IntList.any|any(kotlin.Function1<kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun count(): kotlin/Int // androidx.collection/IntList.count|count(){}[0]
    final inline fun count(kotlin/Function1<kotlin/Int, kotlin/Boolean>): kotlin/Int // androidx.collection/IntList.count|count(kotlin.Function1<kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun elementAtOrElse(kotlin/Int, kotlin/Function1<kotlin/Int, kotlin/Int>): kotlin/Int // androidx.collection/IntList.elementAtOrElse|elementAtOrElse(kotlin.Int;kotlin.Function1<kotlin.Int,kotlin.Int>){}[0]
    final inline fun first(kotlin/Function1<kotlin/Int, kotlin/Boolean>): kotlin/Int // androidx.collection/IntList.first|first(kotlin.Function1<kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/IntList.forEach|forEach(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function2<kotlin/Int, kotlin/Int, kotlin/Unit>) // androidx.collection/IntList.forEachIndexed|forEachIndexed(kotlin.Function2<kotlin.Int,kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachReversed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/IntList.forEachReversed|forEachReversed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachReversedIndexed(kotlin/Function2<kotlin/Int, kotlin/Int, kotlin/Unit>) // androidx.collection/IntList.forEachReversedIndexed|forEachReversedIndexed(kotlin.Function2<kotlin.Int,kotlin.Int,kotlin.Unit>){}[0]
    final inline fun indexOfFirst(kotlin/Function1<kotlin/Int, kotlin/Boolean>): kotlin/Int // androidx.collection/IntList.indexOfFirst|indexOfFirst(kotlin.Function1<kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun indexOfLast(kotlin/Function1<kotlin/Int, kotlin/Boolean>): kotlin/Int // androidx.collection/IntList.indexOfLast|indexOfLast(kotlin.Function1<kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun isEmpty(): kotlin/Boolean // androidx.collection/IntList.isEmpty|isEmpty(){}[0]
    final inline fun isNotEmpty(): kotlin/Boolean // androidx.collection/IntList.isNotEmpty|isNotEmpty(){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function1<kotlin/Int, kotlin/CharSequence>): kotlin/String // androidx.collection/IntList.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function1<kotlin.Int,kotlin.CharSequence>){}[0]
    final inline fun last(kotlin/Function1<kotlin/Int, kotlin/Boolean>): kotlin/Int // androidx.collection/IntList.last|last(kotlin.Function1<kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun none(): kotlin/Boolean // androidx.collection/IntList.none|none(){}[0]
    final inline fun reversedAny(kotlin/Function1<kotlin/Int, kotlin/Boolean>): kotlin/Boolean // androidx.collection/IntList.reversedAny|reversedAny(kotlin.Function1<kotlin.Int,kotlin.Boolean>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/IntList.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/IntList.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/IntList.toString|toString(){}[0]
}

sealed class androidx.collection/IntLongMap { // androidx.collection/IntLongMap|null[0]
    constructor <init>() // androidx.collection/IntLongMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/IntLongMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/IntLongMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/IntLongMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/IntLongMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/IntLongMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/IntArray // androidx.collection/IntLongMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/IntArray) // androidx.collection/IntLongMap.keys.<set-keys>|<set-keys>(kotlin.IntArray){}[0]
    final var metadata // androidx.collection/IntLongMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/IntLongMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/IntLongMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/IntLongMap.values|{}values[0]
        final fun <get-values>(): kotlin/LongArray // androidx.collection/IntLongMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/LongArray) // androidx.collection/IntLongMap.values.<set-values>|<set-values>(kotlin.LongArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/IntLongMap.any|any(){}[0]
    final fun contains(kotlin/Int): kotlin/Boolean // androidx.collection/IntLongMap.contains|contains(kotlin.Int){}[0]
    final fun containsKey(kotlin/Int): kotlin/Boolean // androidx.collection/IntLongMap.containsKey|containsKey(kotlin.Int){}[0]
    final fun containsValue(kotlin/Long): kotlin/Boolean // androidx.collection/IntLongMap.containsValue|containsValue(kotlin.Long){}[0]
    final fun count(): kotlin/Int // androidx.collection/IntLongMap.count|count(){}[0]
    final fun findKeyIndex(kotlin/Int): kotlin/Int // androidx.collection/IntLongMap.findKeyIndex|findKeyIndex(kotlin.Int){}[0]
    final fun get(kotlin/Int): kotlin/Long // androidx.collection/IntLongMap.get|get(kotlin.Int){}[0]
    final fun getOrDefault(kotlin/Int, kotlin/Long): kotlin/Long // androidx.collection/IntLongMap.getOrDefault|getOrDefault(kotlin.Int;kotlin.Long){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/IntLongMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/IntLongMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/IntLongMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/IntLongMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<kotlin/Int, kotlin/Long, kotlin/Boolean>): kotlin/Boolean // androidx.collection/IntLongMap.all|all(kotlin.Function2<kotlin.Int,kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<kotlin/Int, kotlin/Long, kotlin/Boolean>): kotlin/Boolean // androidx.collection/IntLongMap.any|any(kotlin.Function2<kotlin.Int,kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<kotlin/Int, kotlin/Long, kotlin/Boolean>): kotlin/Int // androidx.collection/IntLongMap.count|count(kotlin.Function2<kotlin.Int,kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<kotlin/Int, kotlin/Long, kotlin/Unit>) // androidx.collection/IntLongMap.forEach|forEach(kotlin.Function2<kotlin.Int,kotlin.Long,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/IntLongMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/IntLongMap.forEachKey|forEachKey(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<kotlin/Long, kotlin/Unit>) // androidx.collection/IntLongMap.forEachValue|forEachValue(kotlin.Function1<kotlin.Long,kotlin.Unit>){}[0]
    final inline fun getOrElse(kotlin/Int, kotlin/Function0<kotlin/Long>): kotlin/Long // androidx.collection/IntLongMap.getOrElse|getOrElse(kotlin.Int;kotlin.Function0<kotlin.Long>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<kotlin/Int, kotlin/Long, kotlin/CharSequence>): kotlin/String // androidx.collection/IntLongMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<kotlin.Int,kotlin.Long,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/IntLongMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/IntLongMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/IntLongMap.toString|toString(){}[0]
}

sealed class androidx.collection/IntSet { // androidx.collection/IntSet|null[0]
    constructor <init>() // androidx.collection/IntSet.<init>|<init>(){}[0]

    final val capacity // androidx.collection/IntSet.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/IntSet.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/IntSet.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/IntSet.size.<get-size>|<get-size>(){}[0]

    final var elements // androidx.collection/IntSet.elements|{}elements[0]
        final fun <get-elements>(): kotlin/IntArray // androidx.collection/IntSet.elements.<get-elements>|<get-elements>(){}[0]
        final fun <set-elements>(kotlin/IntArray) // androidx.collection/IntSet.elements.<set-elements>|<set-elements>(kotlin.IntArray){}[0]
    final var metadata // androidx.collection/IntSet.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/IntSet.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/IntSet.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/IntSet.any|any(){}[0]
    final fun contains(kotlin/Int): kotlin/Boolean // androidx.collection/IntSet.contains|contains(kotlin.Int){}[0]
    final fun count(): kotlin/Int // androidx.collection/IntSet.count|count(){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/IntSet.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/IntSet.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/IntSet.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/IntSet.none|none(){}[0]
    final inline fun all(kotlin/Function1<kotlin/Int, kotlin/Boolean>): kotlin/Boolean // androidx.collection/IntSet.all|all(kotlin.Function1<kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function1<kotlin/Int, kotlin/Boolean>): kotlin/Boolean // androidx.collection/IntSet.any|any(kotlin.Function1<kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function1<kotlin/Int, kotlin/Boolean>): kotlin/Int // androidx.collection/IntSet.count|count(kotlin.Function1<kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun first(): kotlin/Int // androidx.collection/IntSet.first|first(){}[0]
    final inline fun first(kotlin/Function1<kotlin/Int, kotlin/Boolean>): kotlin/Int // androidx.collection/IntSet.first|first(kotlin.Function1<kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/IntSet.forEach|forEach(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachIndex(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/IntSet.forEachIndex|forEachIndex(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function1<kotlin/Int, kotlin/CharSequence>): kotlin/String // androidx.collection/IntSet.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function1<kotlin.Int,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/IntSet.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/IntSet.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/IntSet.toString|toString(){}[0]
}

sealed class androidx.collection/LongFloatMap { // androidx.collection/LongFloatMap|null[0]
    constructor <init>() // androidx.collection/LongFloatMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/LongFloatMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/LongFloatMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/LongFloatMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/LongFloatMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/LongFloatMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/LongArray // androidx.collection/LongFloatMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/LongArray) // androidx.collection/LongFloatMap.keys.<set-keys>|<set-keys>(kotlin.LongArray){}[0]
    final var metadata // androidx.collection/LongFloatMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/LongFloatMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/LongFloatMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/LongFloatMap.values|{}values[0]
        final fun <get-values>(): kotlin/FloatArray // androidx.collection/LongFloatMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/FloatArray) // androidx.collection/LongFloatMap.values.<set-values>|<set-values>(kotlin.FloatArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/LongFloatMap.any|any(){}[0]
    final fun contains(kotlin/Long): kotlin/Boolean // androidx.collection/LongFloatMap.contains|contains(kotlin.Long){}[0]
    final fun containsKey(kotlin/Long): kotlin/Boolean // androidx.collection/LongFloatMap.containsKey|containsKey(kotlin.Long){}[0]
    final fun containsValue(kotlin/Float): kotlin/Boolean // androidx.collection/LongFloatMap.containsValue|containsValue(kotlin.Float){}[0]
    final fun count(): kotlin/Int // androidx.collection/LongFloatMap.count|count(){}[0]
    final fun findKeyIndex(kotlin/Long): kotlin/Int // androidx.collection/LongFloatMap.findKeyIndex|findKeyIndex(kotlin.Long){}[0]
    final fun get(kotlin/Long): kotlin/Float // androidx.collection/LongFloatMap.get|get(kotlin.Long){}[0]
    final fun getOrDefault(kotlin/Long, kotlin/Float): kotlin/Float // androidx.collection/LongFloatMap.getOrDefault|getOrDefault(kotlin.Long;kotlin.Float){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/LongFloatMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/LongFloatMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/LongFloatMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/LongFloatMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<kotlin/Long, kotlin/Float, kotlin/Boolean>): kotlin/Boolean // androidx.collection/LongFloatMap.all|all(kotlin.Function2<kotlin.Long,kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<kotlin/Long, kotlin/Float, kotlin/Boolean>): kotlin/Boolean // androidx.collection/LongFloatMap.any|any(kotlin.Function2<kotlin.Long,kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<kotlin/Long, kotlin/Float, kotlin/Boolean>): kotlin/Int // androidx.collection/LongFloatMap.count|count(kotlin.Function2<kotlin.Long,kotlin.Float,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<kotlin/Long, kotlin/Float, kotlin/Unit>) // androidx.collection/LongFloatMap.forEach|forEach(kotlin.Function2<kotlin.Long,kotlin.Float,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/LongFloatMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<kotlin/Long, kotlin/Unit>) // androidx.collection/LongFloatMap.forEachKey|forEachKey(kotlin.Function1<kotlin.Long,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<kotlin/Float, kotlin/Unit>) // androidx.collection/LongFloatMap.forEachValue|forEachValue(kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
    final inline fun getOrElse(kotlin/Long, kotlin/Function0<kotlin/Float>): kotlin/Float // androidx.collection/LongFloatMap.getOrElse|getOrElse(kotlin.Long;kotlin.Function0<kotlin.Float>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<kotlin/Long, kotlin/Float, kotlin/CharSequence>): kotlin/String // androidx.collection/LongFloatMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<kotlin.Long,kotlin.Float,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/LongFloatMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/LongFloatMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/LongFloatMap.toString|toString(){}[0]
}

sealed class androidx.collection/LongIntMap { // androidx.collection/LongIntMap|null[0]
    constructor <init>() // androidx.collection/LongIntMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/LongIntMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/LongIntMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/LongIntMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/LongIntMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/LongIntMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/LongArray // androidx.collection/LongIntMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/LongArray) // androidx.collection/LongIntMap.keys.<set-keys>|<set-keys>(kotlin.LongArray){}[0]
    final var metadata // androidx.collection/LongIntMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/LongIntMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/LongIntMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/LongIntMap.values|{}values[0]
        final fun <get-values>(): kotlin/IntArray // androidx.collection/LongIntMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/IntArray) // androidx.collection/LongIntMap.values.<set-values>|<set-values>(kotlin.IntArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/LongIntMap.any|any(){}[0]
    final fun contains(kotlin/Long): kotlin/Boolean // androidx.collection/LongIntMap.contains|contains(kotlin.Long){}[0]
    final fun containsKey(kotlin/Long): kotlin/Boolean // androidx.collection/LongIntMap.containsKey|containsKey(kotlin.Long){}[0]
    final fun containsValue(kotlin/Int): kotlin/Boolean // androidx.collection/LongIntMap.containsValue|containsValue(kotlin.Int){}[0]
    final fun count(): kotlin/Int // androidx.collection/LongIntMap.count|count(){}[0]
    final fun findKeyIndex(kotlin/Long): kotlin/Int // androidx.collection/LongIntMap.findKeyIndex|findKeyIndex(kotlin.Long){}[0]
    final fun get(kotlin/Long): kotlin/Int // androidx.collection/LongIntMap.get|get(kotlin.Long){}[0]
    final fun getOrDefault(kotlin/Long, kotlin/Int): kotlin/Int // androidx.collection/LongIntMap.getOrDefault|getOrDefault(kotlin.Long;kotlin.Int){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/LongIntMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/LongIntMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/LongIntMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/LongIntMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<kotlin/Long, kotlin/Int, kotlin/Boolean>): kotlin/Boolean // androidx.collection/LongIntMap.all|all(kotlin.Function2<kotlin.Long,kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<kotlin/Long, kotlin/Int, kotlin/Boolean>): kotlin/Boolean // androidx.collection/LongIntMap.any|any(kotlin.Function2<kotlin.Long,kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<kotlin/Long, kotlin/Int, kotlin/Boolean>): kotlin/Int // androidx.collection/LongIntMap.count|count(kotlin.Function2<kotlin.Long,kotlin.Int,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<kotlin/Long, kotlin/Int, kotlin/Unit>) // androidx.collection/LongIntMap.forEach|forEach(kotlin.Function2<kotlin.Long,kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/LongIntMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<kotlin/Long, kotlin/Unit>) // androidx.collection/LongIntMap.forEachKey|forEachKey(kotlin.Function1<kotlin.Long,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/LongIntMap.forEachValue|forEachValue(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun getOrElse(kotlin/Long, kotlin/Function0<kotlin/Int>): kotlin/Int // androidx.collection/LongIntMap.getOrElse|getOrElse(kotlin.Long;kotlin.Function0<kotlin.Int>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<kotlin/Long, kotlin/Int, kotlin/CharSequence>): kotlin/String // androidx.collection/LongIntMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<kotlin.Long,kotlin.Int,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/LongIntMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/LongIntMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/LongIntMap.toString|toString(){}[0]
}

sealed class androidx.collection/LongList { // androidx.collection/LongList|null[0]
    constructor <init>(kotlin/Int) // androidx.collection/LongList.<init>|<init>(kotlin.Int){}[0]

    final val indices // androidx.collection/LongList.indices|{}indices[0]
        final inline fun <get-indices>(): kotlin.ranges/IntRange // androidx.collection/LongList.indices.<get-indices>|<get-indices>(){}[0]
    final val lastIndex // androidx.collection/LongList.lastIndex|{}lastIndex[0]
        final inline fun <get-lastIndex>(): kotlin/Int // androidx.collection/LongList.lastIndex.<get-lastIndex>|<get-lastIndex>(){}[0]
    final val size // androidx.collection/LongList.size|{}size[0]
        final inline fun <get-size>(): kotlin/Int // androidx.collection/LongList.size.<get-size>|<get-size>(){}[0]

    final var _size // androidx.collection/LongList._size|{}_size[0]
        final fun <get-_size>(): kotlin/Int // androidx.collection/LongList._size.<get-_size>|<get-_size>(){}[0]
        final fun <set-_size>(kotlin/Int) // androidx.collection/LongList._size.<set-_size>|<set-_size>(kotlin.Int){}[0]
    final var content // androidx.collection/LongList.content|{}content[0]
        final fun <get-content>(): kotlin/LongArray // androidx.collection/LongList.content.<get-content>|<get-content>(){}[0]
        final fun <set-content>(kotlin/LongArray) // androidx.collection/LongList.content.<set-content>|<set-content>(kotlin.LongArray){}[0]

    final fun binarySearch(kotlin/Int, kotlin/Int = ..., kotlin/Int = ...): kotlin/Int // androidx.collection/LongList.binarySearch|binarySearch(kotlin.Int;kotlin.Int;kotlin.Int){}[0]
    final fun contains(kotlin/Long): kotlin/Boolean // androidx.collection/LongList.contains|contains(kotlin.Long){}[0]
    final fun containsAll(androidx.collection/LongList): kotlin/Boolean // androidx.collection/LongList.containsAll|containsAll(androidx.collection.LongList){}[0]
    final fun elementAt(kotlin/Int): kotlin/Long // androidx.collection/LongList.elementAt|elementAt(kotlin.Int){}[0]
    final fun first(): kotlin/Long // androidx.collection/LongList.first|first(){}[0]
    final fun get(kotlin/Int): kotlin/Long // androidx.collection/LongList.get|get(kotlin.Int){}[0]
    final fun indexOf(kotlin/Long): kotlin/Int // androidx.collection/LongList.indexOf|indexOf(kotlin.Long){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/LongList.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun last(): kotlin/Long // androidx.collection/LongList.last|last(){}[0]
    final fun lastIndexOf(kotlin/Long): kotlin/Int // androidx.collection/LongList.lastIndexOf|lastIndexOf(kotlin.Long){}[0]
    final inline fun <#A1: kotlin/Any?> fold(#A1, kotlin/Function2<#A1, kotlin/Long, #A1>): #A1 // androidx.collection/LongList.fold|fold(0:0;kotlin.Function2<0:0,kotlin.Long,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldIndexed(#A1, kotlin/Function3<kotlin/Int, #A1, kotlin/Long, #A1>): #A1 // androidx.collection/LongList.foldIndexed|foldIndexed(0:0;kotlin.Function3<kotlin.Int,0:0,kotlin.Long,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldRight(#A1, kotlin/Function2<kotlin/Long, #A1, #A1>): #A1 // androidx.collection/LongList.foldRight|foldRight(0:0;kotlin.Function2<kotlin.Long,0:0,0:0>){0§<kotlin.Any?>}[0]
    final inline fun <#A1: kotlin/Any?> foldRightIndexed(#A1, kotlin/Function3<kotlin/Int, kotlin/Long, #A1, #A1>): #A1 // androidx.collection/LongList.foldRightIndexed|foldRightIndexed(0:0;kotlin.Function3<kotlin.Int,kotlin.Long,0:0,0:0>){0§<kotlin.Any?>}[0]
    final inline fun any(): kotlin/Boolean // androidx.collection/LongList.any|any(){}[0]
    final inline fun any(kotlin/Function1<kotlin/Long, kotlin/Boolean>): kotlin/Boolean // androidx.collection/LongList.any|any(kotlin.Function1<kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun count(): kotlin/Int // androidx.collection/LongList.count|count(){}[0]
    final inline fun count(kotlin/Function1<kotlin/Long, kotlin/Boolean>): kotlin/Int // androidx.collection/LongList.count|count(kotlin.Function1<kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun elementAtOrElse(kotlin/Int, kotlin/Function1<kotlin/Int, kotlin/Long>): kotlin/Long // androidx.collection/LongList.elementAtOrElse|elementAtOrElse(kotlin.Int;kotlin.Function1<kotlin.Int,kotlin.Long>){}[0]
    final inline fun first(kotlin/Function1<kotlin/Long, kotlin/Boolean>): kotlin/Long // androidx.collection/LongList.first|first(kotlin.Function1<kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function1<kotlin/Long, kotlin/Unit>) // androidx.collection/LongList.forEach|forEach(kotlin.Function1<kotlin.Long,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function2<kotlin/Int, kotlin/Long, kotlin/Unit>) // androidx.collection/LongList.forEachIndexed|forEachIndexed(kotlin.Function2<kotlin.Int,kotlin.Long,kotlin.Unit>){}[0]
    final inline fun forEachReversed(kotlin/Function1<kotlin/Long, kotlin/Unit>) // androidx.collection/LongList.forEachReversed|forEachReversed(kotlin.Function1<kotlin.Long,kotlin.Unit>){}[0]
    final inline fun forEachReversedIndexed(kotlin/Function2<kotlin/Int, kotlin/Long, kotlin/Unit>) // androidx.collection/LongList.forEachReversedIndexed|forEachReversedIndexed(kotlin.Function2<kotlin.Int,kotlin.Long,kotlin.Unit>){}[0]
    final inline fun indexOfFirst(kotlin/Function1<kotlin/Long, kotlin/Boolean>): kotlin/Int // androidx.collection/LongList.indexOfFirst|indexOfFirst(kotlin.Function1<kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun indexOfLast(kotlin/Function1<kotlin/Long, kotlin/Boolean>): kotlin/Int // androidx.collection/LongList.indexOfLast|indexOfLast(kotlin.Function1<kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun isEmpty(): kotlin/Boolean // androidx.collection/LongList.isEmpty|isEmpty(){}[0]
    final inline fun isNotEmpty(): kotlin/Boolean // androidx.collection/LongList.isNotEmpty|isNotEmpty(){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function1<kotlin/Long, kotlin/CharSequence>): kotlin/String // androidx.collection/LongList.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function1<kotlin.Long,kotlin.CharSequence>){}[0]
    final inline fun last(kotlin/Function1<kotlin/Long, kotlin/Boolean>): kotlin/Long // androidx.collection/LongList.last|last(kotlin.Function1<kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun none(): kotlin/Boolean // androidx.collection/LongList.none|none(){}[0]
    final inline fun reversedAny(kotlin/Function1<kotlin/Long, kotlin/Boolean>): kotlin/Boolean // androidx.collection/LongList.reversedAny|reversedAny(kotlin.Function1<kotlin.Long,kotlin.Boolean>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/LongList.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/LongList.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/LongList.toString|toString(){}[0]
}

sealed class androidx.collection/LongLongMap { // androidx.collection/LongLongMap|null[0]
    constructor <init>() // androidx.collection/LongLongMap.<init>|<init>(){}[0]

    final val capacity // androidx.collection/LongLongMap.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/LongLongMap.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/LongLongMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/LongLongMap.size.<get-size>|<get-size>(){}[0]

    final var keys // androidx.collection/LongLongMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin/LongArray // androidx.collection/LongLongMap.keys.<get-keys>|<get-keys>(){}[0]
        final fun <set-keys>(kotlin/LongArray) // androidx.collection/LongLongMap.keys.<set-keys>|<set-keys>(kotlin.LongArray){}[0]
    final var metadata // androidx.collection/LongLongMap.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/LongLongMap.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/LongLongMap.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]
    final var values // androidx.collection/LongLongMap.values|{}values[0]
        final fun <get-values>(): kotlin/LongArray // androidx.collection/LongLongMap.values.<get-values>|<get-values>(){}[0]
        final fun <set-values>(kotlin/LongArray) // androidx.collection/LongLongMap.values.<set-values>|<set-values>(kotlin.LongArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/LongLongMap.any|any(){}[0]
    final fun contains(kotlin/Long): kotlin/Boolean // androidx.collection/LongLongMap.contains|contains(kotlin.Long){}[0]
    final fun containsKey(kotlin/Long): kotlin/Boolean // androidx.collection/LongLongMap.containsKey|containsKey(kotlin.Long){}[0]
    final fun containsValue(kotlin/Long): kotlin/Boolean // androidx.collection/LongLongMap.containsValue|containsValue(kotlin.Long){}[0]
    final fun count(): kotlin/Int // androidx.collection/LongLongMap.count|count(){}[0]
    final fun findKeyIndex(kotlin/Long): kotlin/Int // androidx.collection/LongLongMap.findKeyIndex|findKeyIndex(kotlin.Long){}[0]
    final fun get(kotlin/Long): kotlin/Long // androidx.collection/LongLongMap.get|get(kotlin.Long){}[0]
    final fun getOrDefault(kotlin/Long, kotlin/Long): kotlin/Long // androidx.collection/LongLongMap.getOrDefault|getOrDefault(kotlin.Long;kotlin.Long){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/LongLongMap.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/LongLongMap.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/LongLongMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/LongLongMap.none|none(){}[0]
    final inline fun all(kotlin/Function2<kotlin/Long, kotlin/Long, kotlin/Boolean>): kotlin/Boolean // androidx.collection/LongLongMap.all|all(kotlin.Function2<kotlin.Long,kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function2<kotlin/Long, kotlin/Long, kotlin/Boolean>): kotlin/Boolean // androidx.collection/LongLongMap.any|any(kotlin.Function2<kotlin.Long,kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function2<kotlin/Long, kotlin/Long, kotlin/Boolean>): kotlin/Int // androidx.collection/LongLongMap.count|count(kotlin.Function2<kotlin.Long,kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function2<kotlin/Long, kotlin/Long, kotlin/Unit>) // androidx.collection/LongLongMap.forEach|forEach(kotlin.Function2<kotlin.Long,kotlin.Long,kotlin.Unit>){}[0]
    final inline fun forEachIndexed(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/LongLongMap.forEachIndexed|forEachIndexed(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun forEachKey(kotlin/Function1<kotlin/Long, kotlin/Unit>) // androidx.collection/LongLongMap.forEachKey|forEachKey(kotlin.Function1<kotlin.Long,kotlin.Unit>){}[0]
    final inline fun forEachValue(kotlin/Function1<kotlin/Long, kotlin/Unit>) // androidx.collection/LongLongMap.forEachValue|forEachValue(kotlin.Function1<kotlin.Long,kotlin.Unit>){}[0]
    final inline fun getOrElse(kotlin/Long, kotlin/Function0<kotlin/Long>): kotlin/Long // androidx.collection/LongLongMap.getOrElse|getOrElse(kotlin.Long;kotlin.Function0<kotlin.Long>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function2<kotlin/Long, kotlin/Long, kotlin/CharSequence>): kotlin/String // androidx.collection/LongLongMap.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function2<kotlin.Long,kotlin.Long,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/LongLongMap.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/LongLongMap.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/LongLongMap.toString|toString(){}[0]
}

sealed class androidx.collection/LongSet { // androidx.collection/LongSet|null[0]
    constructor <init>() // androidx.collection/LongSet.<init>|<init>(){}[0]

    final val capacity // androidx.collection/LongSet.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int // androidx.collection/LongSet.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val size // androidx.collection/LongSet.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.collection/LongSet.size.<get-size>|<get-size>(){}[0]

    final var elements // androidx.collection/LongSet.elements|{}elements[0]
        final fun <get-elements>(): kotlin/LongArray // androidx.collection/LongSet.elements.<get-elements>|<get-elements>(){}[0]
        final fun <set-elements>(kotlin/LongArray) // androidx.collection/LongSet.elements.<set-elements>|<set-elements>(kotlin.LongArray){}[0]
    final var metadata // androidx.collection/LongSet.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin/LongArray // androidx.collection/LongSet.metadata.<get-metadata>|<get-metadata>(){}[0]
        final fun <set-metadata>(kotlin/LongArray) // androidx.collection/LongSet.metadata.<set-metadata>|<set-metadata>(kotlin.LongArray){}[0]

    final fun any(): kotlin/Boolean // androidx.collection/LongSet.any|any(){}[0]
    final fun contains(kotlin/Long): kotlin/Boolean // androidx.collection/LongSet.contains|contains(kotlin.Long){}[0]
    final fun count(): kotlin/Int // androidx.collection/LongSet.count|count(){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.collection/LongSet.isEmpty|isEmpty(){}[0]
    final fun isNotEmpty(): kotlin/Boolean // androidx.collection/LongSet.isNotEmpty|isNotEmpty(){}[0]
    final fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ...): kotlin/String // androidx.collection/LongSet.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence){}[0]
    final fun none(): kotlin/Boolean // androidx.collection/LongSet.none|none(){}[0]
    final inline fun all(kotlin/Function1<kotlin/Long, kotlin/Boolean>): kotlin/Boolean // androidx.collection/LongSet.all|all(kotlin.Function1<kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun any(kotlin/Function1<kotlin/Long, kotlin/Boolean>): kotlin/Boolean // androidx.collection/LongSet.any|any(kotlin.Function1<kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun count(kotlin/Function1<kotlin/Long, kotlin/Boolean>): kotlin/Int // androidx.collection/LongSet.count|count(kotlin.Function1<kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun first(): kotlin/Long // androidx.collection/LongSet.first|first(){}[0]
    final inline fun first(kotlin/Function1<kotlin/Long, kotlin/Boolean>): kotlin/Long // androidx.collection/LongSet.first|first(kotlin.Function1<kotlin.Long,kotlin.Boolean>){}[0]
    final inline fun forEach(kotlin/Function1<kotlin/Long, kotlin/Unit>) // androidx.collection/LongSet.forEach|forEach(kotlin.Function1<kotlin.Long,kotlin.Unit>){}[0]
    final inline fun forEachIndex(kotlin/Function1<kotlin/Int, kotlin/Unit>) // androidx.collection/LongSet.forEachIndex|forEachIndex(kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final inline fun joinToString(kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/CharSequence = ..., kotlin/Int = ..., kotlin/CharSequence = ..., crossinline kotlin/Function1<kotlin/Long, kotlin/CharSequence>): kotlin/String // androidx.collection/LongSet.joinToString|joinToString(kotlin.CharSequence;kotlin.CharSequence;kotlin.CharSequence;kotlin.Int;kotlin.CharSequence;kotlin.Function1<kotlin.Long,kotlin.CharSequence>){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.collection/LongSet.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.collection/LongSet.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.collection/LongSet.toString|toString(){}[0]
}

final const val androidx.collection/BitmaskLsb // androidx.collection/BitmaskLsb|{}BitmaskLsb[0]
    final fun <get-BitmaskLsb>(): kotlin/Long // androidx.collection/BitmaskLsb.<get-BitmaskLsb>|<get-BitmaskLsb>(){}[0]
final const val androidx.collection/BitmaskMsb // androidx.collection/BitmaskMsb|{}BitmaskMsb[0]
    final fun <get-BitmaskMsb>(): kotlin/Long // androidx.collection/BitmaskMsb.<get-BitmaskMsb>|<get-BitmaskMsb>(){}[0]
final const val androidx.collection/NodeInvalidLink // androidx.collection/NodeInvalidLink|{}NodeInvalidLink[0]
    final fun <get-NodeInvalidLink>(): kotlin/Int // androidx.collection/NodeInvalidLink.<get-NodeInvalidLink>|<get-NodeInvalidLink>(){}[0]
final const val androidx.collection/NodeLinkMask // androidx.collection/NodeLinkMask|{}NodeLinkMask[0]
    final fun <get-NodeLinkMask>(): kotlin/Long // androidx.collection/NodeLinkMask.<get-NodeLinkMask>|<get-NodeLinkMask>(){}[0]
final const val androidx.collection/Sentinel // androidx.collection/Sentinel|{}Sentinel[0]
    final fun <get-Sentinel>(): kotlin/Long // androidx.collection/Sentinel.<get-Sentinel>|<get-Sentinel>(){}[0]

final val androidx.collection/nextNode // androidx.collection/nextNode|@kotlin.Long{}nextNode[0]
    final inline fun (kotlin/Long).<get-nextNode>(): kotlin/Int // androidx.collection/nextNode.<get-nextNode>|<get-nextNode>@kotlin.Long(){}[0]
final val androidx.collection/previousNode // androidx.collection/previousNode|@kotlin.Long{}previousNode[0]
    final inline fun (kotlin/Long).<get-previousNode>(): kotlin/Int // androidx.collection/previousNode.<get-previousNode>|<get-previousNode>@kotlin.Long(){}[0]
final val androidx.collection/size // androidx.collection/size|@androidx.collection.LongSparseArray<0:0>{0§<kotlin.Any?>}size[0]
    final inline fun <#A1: kotlin/Any?> (androidx.collection/LongSparseArray<#A1>).<get-size>(): kotlin/Int // androidx.collection/size.<get-size>|<get-size>@androidx.collection.LongSparseArray<0:0>(){0§<kotlin.Any?>}[0]
final val androidx.collection/size // androidx.collection/size|@androidx.collection.SparseArrayCompat<0:0>{0§<kotlin.Any?>}size[0]
    final inline fun <#A1: kotlin/Any?> (androidx.collection/SparseArrayCompat<#A1>).<get-size>(): kotlin/Int // androidx.collection/size.<get-size>|<get-size>@androidx.collection.SparseArrayCompat<0:0>(){0§<kotlin.Any?>}[0]

final fun <#A: kotlin/Any?, #B: kotlin/Any?> androidx.collection/emptyScatterMap(): androidx.collection/ScatterMap<#A, #B> // androidx.collection/emptyScatterMap|emptyScatterMap(){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?> androidx.collection/mutableScatterMapOf(): androidx.collection/MutableScatterMap<#A, #B> // androidx.collection/mutableScatterMapOf|mutableScatterMapOf(){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?> androidx.collection/mutableScatterMapOf(kotlin/Array<out kotlin/Pair<#A, #B>>...): androidx.collection/MutableScatterMap<#A, #B> // androidx.collection/mutableScatterMapOf|mutableScatterMapOf(kotlin.Array<out|kotlin.Pair<0:0,0:1>>...){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (androidx.collection/LongSparseArray<#A>).androidx.collection/keyIterator(): kotlin.collections/LongIterator // androidx.collection/keyIterator|keyIterator@androidx.collection.LongSparseArray<0:0>(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (androidx.collection/LongSparseArray<#A>).androidx.collection/plus(androidx.collection/LongSparseArray<#A>): androidx.collection/LongSparseArray<#A> // androidx.collection/plus|plus@androidx.collection.LongSparseArray<0:0>(androidx.collection.LongSparseArray<0:0>){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (androidx.collection/LongSparseArray<#A>).androidx.collection/remove(kotlin/Long, #A): kotlin/Boolean // androidx.collection/remove|remove@androidx.collection.LongSparseArray<0:0>(kotlin.Long;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (androidx.collection/LongSparseArray<#A>).androidx.collection/valueIterator(): kotlin.collections/Iterator<#A> // androidx.collection/valueIterator|valueIterator@androidx.collection.LongSparseArray<0:0>(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (androidx.collection/SparseArrayCompat<#A>).androidx.collection/keyIterator(): kotlin.collections/IntIterator // androidx.collection/keyIterator|keyIterator@androidx.collection.SparseArrayCompat<0:0>(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (androidx.collection/SparseArrayCompat<#A>).androidx.collection/plus(androidx.collection/SparseArrayCompat<#A>): androidx.collection/SparseArrayCompat<#A> // androidx.collection/plus|plus@androidx.collection.SparseArrayCompat<0:0>(androidx.collection.SparseArrayCompat<0:0>){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (androidx.collection/SparseArrayCompat<#A>).androidx.collection/remove(kotlin/Int, #A): kotlin/Boolean // androidx.collection/remove|remove@androidx.collection.SparseArrayCompat<0:0>(kotlin.Int;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (androidx.collection/SparseArrayCompat<#A>).androidx.collection/valueIterator(): kotlin.collections/Iterator<#A> // androidx.collection/valueIterator|valueIterator@androidx.collection.SparseArrayCompat<0:0>(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/arraySetOf(kotlin/Array<out #A>...): androidx.collection/ArraySet<#A> // androidx.collection/arraySetOf|arraySetOf(kotlin.Array<out|0:0>...){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/emptyFloatObjectMap(): androidx.collection/FloatObjectMap<#A> // androidx.collection/emptyFloatObjectMap|emptyFloatObjectMap(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/emptyIntObjectMap(): androidx.collection/IntObjectMap<#A> // androidx.collection/emptyIntObjectMap|emptyIntObjectMap(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/emptyLongObjectMap(): androidx.collection/LongObjectMap<#A> // androidx.collection/emptyLongObjectMap|emptyLongObjectMap(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/emptyObjectFloatMap(): androidx.collection/ObjectFloatMap<#A> // androidx.collection/emptyObjectFloatMap|emptyObjectFloatMap(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/emptyObjectIntMap(): androidx.collection/ObjectIntMap<#A> // androidx.collection/emptyObjectIntMap|emptyObjectIntMap(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/emptyObjectList(): androidx.collection/ObjectList<#A> // androidx.collection/emptyObjectList|emptyObjectList(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/emptyObjectLongMap(): androidx.collection/ObjectLongMap<#A> // androidx.collection/emptyObjectLongMap|emptyObjectLongMap(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/emptyOrderedScatterSet(): androidx.collection/OrderedScatterSet<#A> // androidx.collection/emptyOrderedScatterSet|emptyOrderedScatterSet(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/emptyScatterSet(): androidx.collection/ScatterSet<#A> // androidx.collection/emptyScatterSet|emptyScatterSet(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/floatObjectMapOf(): androidx.collection/FloatObjectMap<#A> // androidx.collection/floatObjectMapOf|floatObjectMapOf(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/floatObjectMapOf(kotlin/Float, #A): androidx.collection/FloatObjectMap<#A> // androidx.collection/floatObjectMapOf|floatObjectMapOf(kotlin.Float;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/floatObjectMapOf(kotlin/Float, #A, kotlin/Float, #A): androidx.collection/FloatObjectMap<#A> // androidx.collection/floatObjectMapOf|floatObjectMapOf(kotlin.Float;0:0;kotlin.Float;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/floatObjectMapOf(kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A): androidx.collection/FloatObjectMap<#A> // androidx.collection/floatObjectMapOf|floatObjectMapOf(kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/floatObjectMapOf(kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A): androidx.collection/FloatObjectMap<#A> // androidx.collection/floatObjectMapOf|floatObjectMapOf(kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/floatObjectMapOf(kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A): androidx.collection/FloatObjectMap<#A> // androidx.collection/floatObjectMapOf|floatObjectMapOf(kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/intObjectMapOf(): androidx.collection/IntObjectMap<#A> // androidx.collection/intObjectMapOf|intObjectMapOf(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/intObjectMapOf(kotlin/Int, #A): androidx.collection/IntObjectMap<#A> // androidx.collection/intObjectMapOf|intObjectMapOf(kotlin.Int;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/intObjectMapOf(kotlin/Int, #A, kotlin/Int, #A): androidx.collection/IntObjectMap<#A> // androidx.collection/intObjectMapOf|intObjectMapOf(kotlin.Int;0:0;kotlin.Int;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/intObjectMapOf(kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A): androidx.collection/IntObjectMap<#A> // androidx.collection/intObjectMapOf|intObjectMapOf(kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/intObjectMapOf(kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A): androidx.collection/IntObjectMap<#A> // androidx.collection/intObjectMapOf|intObjectMapOf(kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/intObjectMapOf(kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A): androidx.collection/IntObjectMap<#A> // androidx.collection/intObjectMapOf|intObjectMapOf(kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/longObjectMapOf(): androidx.collection/LongObjectMap<#A> // androidx.collection/longObjectMapOf|longObjectMapOf(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/longObjectMapOf(kotlin/Long, #A): androidx.collection/LongObjectMap<#A> // androidx.collection/longObjectMapOf|longObjectMapOf(kotlin.Long;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/longObjectMapOf(kotlin/Long, #A, kotlin/Long, #A): androidx.collection/LongObjectMap<#A> // androidx.collection/longObjectMapOf|longObjectMapOf(kotlin.Long;0:0;kotlin.Long;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/longObjectMapOf(kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A): androidx.collection/LongObjectMap<#A> // androidx.collection/longObjectMapOf|longObjectMapOf(kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/longObjectMapOf(kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A): androidx.collection/LongObjectMap<#A> // androidx.collection/longObjectMapOf|longObjectMapOf(kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/longObjectMapOf(kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A): androidx.collection/LongObjectMap<#A> // androidx.collection/longObjectMapOf|longObjectMapOf(kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableFloatObjectMapOf(): androidx.collection/MutableFloatObjectMap<#A> // androidx.collection/mutableFloatObjectMapOf|mutableFloatObjectMapOf(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableFloatObjectMapOf(kotlin/Float, #A): androidx.collection/MutableFloatObjectMap<#A> // androidx.collection/mutableFloatObjectMapOf|mutableFloatObjectMapOf(kotlin.Float;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableFloatObjectMapOf(kotlin/Float, #A, kotlin/Float, #A): androidx.collection/MutableFloatObjectMap<#A> // androidx.collection/mutableFloatObjectMapOf|mutableFloatObjectMapOf(kotlin.Float;0:0;kotlin.Float;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableFloatObjectMapOf(kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A): androidx.collection/MutableFloatObjectMap<#A> // androidx.collection/mutableFloatObjectMapOf|mutableFloatObjectMapOf(kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableFloatObjectMapOf(kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A): androidx.collection/MutableFloatObjectMap<#A> // androidx.collection/mutableFloatObjectMapOf|mutableFloatObjectMapOf(kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableFloatObjectMapOf(kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A): androidx.collection/MutableFloatObjectMap<#A> // androidx.collection/mutableFloatObjectMapOf|mutableFloatObjectMapOf(kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableIntObjectMapOf(): androidx.collection/MutableIntObjectMap<#A> // androidx.collection/mutableIntObjectMapOf|mutableIntObjectMapOf(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableIntObjectMapOf(kotlin/Int, #A): androidx.collection/MutableIntObjectMap<#A> // androidx.collection/mutableIntObjectMapOf|mutableIntObjectMapOf(kotlin.Int;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableIntObjectMapOf(kotlin/Int, #A, kotlin/Int, #A): androidx.collection/MutableIntObjectMap<#A> // androidx.collection/mutableIntObjectMapOf|mutableIntObjectMapOf(kotlin.Int;0:0;kotlin.Int;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableIntObjectMapOf(kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A): androidx.collection/MutableIntObjectMap<#A> // androidx.collection/mutableIntObjectMapOf|mutableIntObjectMapOf(kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableIntObjectMapOf(kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A): androidx.collection/MutableIntObjectMap<#A> // androidx.collection/mutableIntObjectMapOf|mutableIntObjectMapOf(kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableIntObjectMapOf(kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A): androidx.collection/MutableIntObjectMap<#A> // androidx.collection/mutableIntObjectMapOf|mutableIntObjectMapOf(kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableLongObjectMapOf(): androidx.collection/MutableLongObjectMap<#A> // androidx.collection/mutableLongObjectMapOf|mutableLongObjectMapOf(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableLongObjectMapOf(kotlin/Long, #A): androidx.collection/MutableLongObjectMap<#A> // androidx.collection/mutableLongObjectMapOf|mutableLongObjectMapOf(kotlin.Long;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableLongObjectMapOf(kotlin/Long, #A, kotlin/Long, #A): androidx.collection/MutableLongObjectMap<#A> // androidx.collection/mutableLongObjectMapOf|mutableLongObjectMapOf(kotlin.Long;0:0;kotlin.Long;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableLongObjectMapOf(kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A): androidx.collection/MutableLongObjectMap<#A> // androidx.collection/mutableLongObjectMapOf|mutableLongObjectMapOf(kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableLongObjectMapOf(kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A): androidx.collection/MutableLongObjectMap<#A> // androidx.collection/mutableLongObjectMapOf|mutableLongObjectMapOf(kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableLongObjectMapOf(kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A): androidx.collection/MutableLongObjectMap<#A> // androidx.collection/mutableLongObjectMapOf|mutableLongObjectMapOf(kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectFloatMapOf(#A, kotlin/Float): androidx.collection/MutableObjectFloatMap<#A> // androidx.collection/mutableObjectFloatMapOf|mutableObjectFloatMapOf(0:0;kotlin.Float){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectFloatMapOf(#A, kotlin/Float, #A, kotlin/Float): androidx.collection/MutableObjectFloatMap<#A> // androidx.collection/mutableObjectFloatMapOf|mutableObjectFloatMapOf(0:0;kotlin.Float;0:0;kotlin.Float){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectFloatMapOf(#A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float): androidx.collection/MutableObjectFloatMap<#A> // androidx.collection/mutableObjectFloatMapOf|mutableObjectFloatMapOf(0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectFloatMapOf(#A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float): androidx.collection/MutableObjectFloatMap<#A> // androidx.collection/mutableObjectFloatMapOf|mutableObjectFloatMapOf(0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectFloatMapOf(#A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float): androidx.collection/MutableObjectFloatMap<#A> // androidx.collection/mutableObjectFloatMapOf|mutableObjectFloatMapOf(0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectFloatMapOf(): androidx.collection/MutableObjectFloatMap<#A> // androidx.collection/mutableObjectFloatMapOf|mutableObjectFloatMapOf(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectIntMapOf(#A, kotlin/Int): androidx.collection/MutableObjectIntMap<#A> // androidx.collection/mutableObjectIntMapOf|mutableObjectIntMapOf(0:0;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectIntMapOf(#A, kotlin/Int, #A, kotlin/Int): androidx.collection/MutableObjectIntMap<#A> // androidx.collection/mutableObjectIntMapOf|mutableObjectIntMapOf(0:0;kotlin.Int;0:0;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectIntMapOf(#A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int): androidx.collection/MutableObjectIntMap<#A> // androidx.collection/mutableObjectIntMapOf|mutableObjectIntMapOf(0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectIntMapOf(#A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int): androidx.collection/MutableObjectIntMap<#A> // androidx.collection/mutableObjectIntMapOf|mutableObjectIntMapOf(0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectIntMapOf(#A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int): androidx.collection/MutableObjectIntMap<#A> // androidx.collection/mutableObjectIntMapOf|mutableObjectIntMapOf(0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectIntMapOf(): androidx.collection/MutableObjectIntMap<#A> // androidx.collection/mutableObjectIntMapOf|mutableObjectIntMapOf(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectListOf(#A): androidx.collection/MutableObjectList<#A> // androidx.collection/mutableObjectListOf|mutableObjectListOf(0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectListOf(#A, #A): androidx.collection/MutableObjectList<#A> // androidx.collection/mutableObjectListOf|mutableObjectListOf(0:0;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectListOf(#A, #A, #A): androidx.collection/MutableObjectList<#A> // androidx.collection/mutableObjectListOf|mutableObjectListOf(0:0;0:0;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectLongMapOf(#A, kotlin/Long): androidx.collection/MutableObjectLongMap<#A> // androidx.collection/mutableObjectLongMapOf|mutableObjectLongMapOf(0:0;kotlin.Long){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectLongMapOf(#A, kotlin/Long, #A, kotlin/Long): androidx.collection/MutableObjectLongMap<#A> // androidx.collection/mutableObjectLongMapOf|mutableObjectLongMapOf(0:0;kotlin.Long;0:0;kotlin.Long){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectLongMapOf(#A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long): androidx.collection/MutableObjectLongMap<#A> // androidx.collection/mutableObjectLongMapOf|mutableObjectLongMapOf(0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectLongMapOf(#A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long): androidx.collection/MutableObjectLongMap<#A> // androidx.collection/mutableObjectLongMapOf|mutableObjectLongMapOf(0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectLongMapOf(#A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long): androidx.collection/MutableObjectLongMap<#A> // androidx.collection/mutableObjectLongMapOf|mutableObjectLongMapOf(0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableObjectLongMapOf(): androidx.collection/MutableObjectLongMap<#A> // androidx.collection/mutableObjectLongMapOf|mutableObjectLongMapOf(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableOrderedScatterSetOf(#A): androidx.collection/MutableOrderedScatterSet<#A> // androidx.collection/mutableOrderedScatterSetOf|mutableOrderedScatterSetOf(0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableOrderedScatterSetOf(#A, #A): androidx.collection/MutableOrderedScatterSet<#A> // androidx.collection/mutableOrderedScatterSetOf|mutableOrderedScatterSetOf(0:0;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableOrderedScatterSetOf(#A, #A, #A): androidx.collection/MutableOrderedScatterSet<#A> // androidx.collection/mutableOrderedScatterSetOf|mutableOrderedScatterSetOf(0:0;0:0;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableOrderedScatterSetOf(): androidx.collection/MutableOrderedScatterSet<#A> // androidx.collection/mutableOrderedScatterSetOf|mutableOrderedScatterSetOf(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableOrderedScatterSetOf(kotlin/Array<out #A>...): androidx.collection/MutableOrderedScatterSet<#A> // androidx.collection/mutableOrderedScatterSetOf|mutableOrderedScatterSetOf(kotlin.Array<out|0:0>...){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableScatterSetOf(#A): androidx.collection/MutableScatterSet<#A> // androidx.collection/mutableScatterSetOf|mutableScatterSetOf(0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableScatterSetOf(#A, #A): androidx.collection/MutableScatterSet<#A> // androidx.collection/mutableScatterSetOf|mutableScatterSetOf(0:0;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableScatterSetOf(#A, #A, #A): androidx.collection/MutableScatterSet<#A> // androidx.collection/mutableScatterSetOf|mutableScatterSetOf(0:0;0:0;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableScatterSetOf(): androidx.collection/MutableScatterSet<#A> // androidx.collection/mutableScatterSetOf|mutableScatterSetOf(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/mutableScatterSetOf(kotlin/Array<out #A>...): androidx.collection/MutableScatterSet<#A> // androidx.collection/mutableScatterSetOf|mutableScatterSetOf(kotlin.Array<out|0:0>...){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectFloatMap(): androidx.collection/ObjectFloatMap<#A> // androidx.collection/objectFloatMap|objectFloatMap(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectFloatMapOf(#A, kotlin/Float): androidx.collection/ObjectFloatMap<#A> // androidx.collection/objectFloatMapOf|objectFloatMapOf(0:0;kotlin.Float){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectFloatMapOf(#A, kotlin/Float, #A, kotlin/Float): androidx.collection/ObjectFloatMap<#A> // androidx.collection/objectFloatMapOf|objectFloatMapOf(0:0;kotlin.Float;0:0;kotlin.Float){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectFloatMapOf(#A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float): androidx.collection/ObjectFloatMap<#A> // androidx.collection/objectFloatMapOf|objectFloatMapOf(0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectFloatMapOf(#A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float): androidx.collection/ObjectFloatMap<#A> // androidx.collection/objectFloatMapOf|objectFloatMapOf(0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectFloatMapOf(#A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float, #A, kotlin/Float): androidx.collection/ObjectFloatMap<#A> // androidx.collection/objectFloatMapOf|objectFloatMapOf(0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float;0:0;kotlin.Float){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectIntMap(): androidx.collection/ObjectIntMap<#A> // androidx.collection/objectIntMap|objectIntMap(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectIntMapOf(#A, kotlin/Int): androidx.collection/ObjectIntMap<#A> // androidx.collection/objectIntMapOf|objectIntMapOf(0:0;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectIntMapOf(#A, kotlin/Int, #A, kotlin/Int): androidx.collection/ObjectIntMap<#A> // androidx.collection/objectIntMapOf|objectIntMapOf(0:0;kotlin.Int;0:0;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectIntMapOf(#A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int): androidx.collection/ObjectIntMap<#A> // androidx.collection/objectIntMapOf|objectIntMapOf(0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectIntMapOf(#A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int): androidx.collection/ObjectIntMap<#A> // androidx.collection/objectIntMapOf|objectIntMapOf(0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectIntMapOf(#A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int, #A, kotlin/Int): androidx.collection/ObjectIntMap<#A> // androidx.collection/objectIntMapOf|objectIntMapOf(0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int;0:0;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectListOf(#A): androidx.collection/ObjectList<#A> // androidx.collection/objectListOf|objectListOf(0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectListOf(#A, #A): androidx.collection/ObjectList<#A> // androidx.collection/objectListOf|objectListOf(0:0;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectListOf(#A, #A, #A): androidx.collection/ObjectList<#A> // androidx.collection/objectListOf|objectListOf(0:0;0:0;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectListOf(): androidx.collection/ObjectList<#A> // androidx.collection/objectListOf|objectListOf(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectListOf(kotlin/Array<out #A>...): androidx.collection/ObjectList<#A> // androidx.collection/objectListOf|objectListOf(kotlin.Array<out|0:0>...){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectLongMap(): androidx.collection/ObjectLongMap<#A> // androidx.collection/objectLongMap|objectLongMap(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectLongMapOf(#A, kotlin/Long): androidx.collection/ObjectLongMap<#A> // androidx.collection/objectLongMapOf|objectLongMapOf(0:0;kotlin.Long){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectLongMapOf(#A, kotlin/Long, #A, kotlin/Long): androidx.collection/ObjectLongMap<#A> // androidx.collection/objectLongMapOf|objectLongMapOf(0:0;kotlin.Long;0:0;kotlin.Long){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectLongMapOf(#A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long): androidx.collection/ObjectLongMap<#A> // androidx.collection/objectLongMapOf|objectLongMapOf(0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectLongMapOf(#A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long): androidx.collection/ObjectLongMap<#A> // androidx.collection/objectLongMapOf|objectLongMapOf(0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/objectLongMapOf(#A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long, #A, kotlin/Long): androidx.collection/ObjectLongMap<#A> // androidx.collection/objectLongMapOf|objectLongMapOf(0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long;0:0;kotlin.Long){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/orderedScatterSetOf(#A): androidx.collection/OrderedScatterSet<#A> // androidx.collection/orderedScatterSetOf|orderedScatterSetOf(0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/orderedScatterSetOf(#A, #A): androidx.collection/OrderedScatterSet<#A> // androidx.collection/orderedScatterSetOf|orderedScatterSetOf(0:0;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/orderedScatterSetOf(#A, #A, #A): androidx.collection/OrderedScatterSet<#A> // androidx.collection/orderedScatterSetOf|orderedScatterSetOf(0:0;0:0;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/orderedScatterSetOf(): androidx.collection/OrderedScatterSet<#A> // androidx.collection/orderedScatterSetOf|orderedScatterSetOf(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/orderedScatterSetOf(kotlin/Array<out #A>...): androidx.collection/OrderedScatterSet<#A> // androidx.collection/orderedScatterSetOf|orderedScatterSetOf(kotlin.Array<out|0:0>...){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/scatterSetOf(#A): androidx.collection/ScatterSet<#A> // androidx.collection/scatterSetOf|scatterSetOf(0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/scatterSetOf(#A, #A): androidx.collection/ScatterSet<#A> // androidx.collection/scatterSetOf|scatterSetOf(0:0;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/scatterSetOf(#A, #A, #A): androidx.collection/ScatterSet<#A> // androidx.collection/scatterSetOf|scatterSetOf(0:0;0:0;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/scatterSetOf(): androidx.collection/ScatterSet<#A> // androidx.collection/scatterSetOf|scatterSetOf(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.collection/scatterSetOf(kotlin/Array<out #A>...): androidx.collection/ScatterSet<#A> // androidx.collection/scatterSetOf|scatterSetOf(kotlin.Array<out|0:0>...){0§<kotlin.Any?>}[0]
final fun androidx.collection.internal/throwNoSuchElementExceptionForInline(kotlin/String): kotlin/Nothing // androidx.collection.internal/throwNoSuchElementExceptionForInline|throwNoSuchElementExceptionForInline(kotlin.String){}[0]
final fun androidx.collection/doubleListOf(): androidx.collection/DoubleList // androidx.collection/doubleListOf|doubleListOf(){}[0]
final fun androidx.collection/doubleListOf(kotlin/Double): androidx.collection/DoubleList // androidx.collection/doubleListOf|doubleListOf(kotlin.Double){}[0]
final fun androidx.collection/doubleListOf(kotlin/Double, kotlin/Double): androidx.collection/DoubleList // androidx.collection/doubleListOf|doubleListOf(kotlin.Double;kotlin.Double){}[0]
final fun androidx.collection/doubleListOf(kotlin/Double, kotlin/Double, kotlin/Double): androidx.collection/DoubleList // androidx.collection/doubleListOf|doubleListOf(kotlin.Double;kotlin.Double;kotlin.Double){}[0]
final fun androidx.collection/doubleListOf(kotlin/DoubleArray...): androidx.collection/DoubleList // androidx.collection/doubleListOf|doubleListOf(kotlin.DoubleArray...){}[0]
final fun androidx.collection/emptyDoubleList(): androidx.collection/DoubleList // androidx.collection/emptyDoubleList|emptyDoubleList(){}[0]
final fun androidx.collection/emptyFloatFloatMap(): androidx.collection/FloatFloatMap // androidx.collection/emptyFloatFloatMap|emptyFloatFloatMap(){}[0]
final fun androidx.collection/emptyFloatIntMap(): androidx.collection/FloatIntMap // androidx.collection/emptyFloatIntMap|emptyFloatIntMap(){}[0]
final fun androidx.collection/emptyFloatList(): androidx.collection/FloatList // androidx.collection/emptyFloatList|emptyFloatList(){}[0]
final fun androidx.collection/emptyFloatLongMap(): androidx.collection/FloatLongMap // androidx.collection/emptyFloatLongMap|emptyFloatLongMap(){}[0]
final fun androidx.collection/emptyFloatSet(): androidx.collection/FloatSet // androidx.collection/emptyFloatSet|emptyFloatSet(){}[0]
final fun androidx.collection/emptyIntFloatMap(): androidx.collection/IntFloatMap // androidx.collection/emptyIntFloatMap|emptyIntFloatMap(){}[0]
final fun androidx.collection/emptyIntIntMap(): androidx.collection/IntIntMap // androidx.collection/emptyIntIntMap|emptyIntIntMap(){}[0]
final fun androidx.collection/emptyIntList(): androidx.collection/IntList // androidx.collection/emptyIntList|emptyIntList(){}[0]
final fun androidx.collection/emptyIntLongMap(): androidx.collection/IntLongMap // androidx.collection/emptyIntLongMap|emptyIntLongMap(){}[0]
final fun androidx.collection/emptyIntSet(): androidx.collection/IntSet // androidx.collection/emptyIntSet|emptyIntSet(){}[0]
final fun androidx.collection/emptyLongFloatMap(): androidx.collection/LongFloatMap // androidx.collection/emptyLongFloatMap|emptyLongFloatMap(){}[0]
final fun androidx.collection/emptyLongIntMap(): androidx.collection/LongIntMap // androidx.collection/emptyLongIntMap|emptyLongIntMap(){}[0]
final fun androidx.collection/emptyLongList(): androidx.collection/LongList // androidx.collection/emptyLongList|emptyLongList(){}[0]
final fun androidx.collection/emptyLongLongMap(): androidx.collection/LongLongMap // androidx.collection/emptyLongLongMap|emptyLongLongMap(){}[0]
final fun androidx.collection/emptyLongSet(): androidx.collection/LongSet // androidx.collection/emptyLongSet|emptyLongSet(){}[0]
final fun androidx.collection/floatFloatMapOf(): androidx.collection/FloatFloatMap // androidx.collection/floatFloatMapOf|floatFloatMapOf(){}[0]
final fun androidx.collection/floatFloatMapOf(kotlin/Float, kotlin/Float): androidx.collection/FloatFloatMap // androidx.collection/floatFloatMapOf|floatFloatMapOf(kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/floatFloatMapOf(kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float): androidx.collection/FloatFloatMap // androidx.collection/floatFloatMapOf|floatFloatMapOf(kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/floatFloatMapOf(kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float): androidx.collection/FloatFloatMap // androidx.collection/floatFloatMapOf|floatFloatMapOf(kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/floatFloatMapOf(kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float): androidx.collection/FloatFloatMap // androidx.collection/floatFloatMapOf|floatFloatMapOf(kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/floatFloatMapOf(kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float): androidx.collection/FloatFloatMap // androidx.collection/floatFloatMapOf|floatFloatMapOf(kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/floatIntMapOf(): androidx.collection/FloatIntMap // androidx.collection/floatIntMapOf|floatIntMapOf(){}[0]
final fun androidx.collection/floatIntMapOf(kotlin/Float, kotlin/Int): androidx.collection/FloatIntMap // androidx.collection/floatIntMapOf|floatIntMapOf(kotlin.Float;kotlin.Int){}[0]
final fun androidx.collection/floatIntMapOf(kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int): androidx.collection/FloatIntMap // androidx.collection/floatIntMapOf|floatIntMapOf(kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int){}[0]
final fun androidx.collection/floatIntMapOf(kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int): androidx.collection/FloatIntMap // androidx.collection/floatIntMapOf|floatIntMapOf(kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int){}[0]
final fun androidx.collection/floatIntMapOf(kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int): androidx.collection/FloatIntMap // androidx.collection/floatIntMapOf|floatIntMapOf(kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int){}[0]
final fun androidx.collection/floatIntMapOf(kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int): androidx.collection/FloatIntMap // androidx.collection/floatIntMapOf|floatIntMapOf(kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int){}[0]
final fun androidx.collection/floatListOf(): androidx.collection/FloatList // androidx.collection/floatListOf|floatListOf(){}[0]
final fun androidx.collection/floatListOf(kotlin/Float): androidx.collection/FloatList // androidx.collection/floatListOf|floatListOf(kotlin.Float){}[0]
final fun androidx.collection/floatListOf(kotlin/Float, kotlin/Float): androidx.collection/FloatList // androidx.collection/floatListOf|floatListOf(kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/floatListOf(kotlin/Float, kotlin/Float, kotlin/Float): androidx.collection/FloatList // androidx.collection/floatListOf|floatListOf(kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/floatListOf(kotlin/FloatArray...): androidx.collection/FloatList // androidx.collection/floatListOf|floatListOf(kotlin.FloatArray...){}[0]
final fun androidx.collection/floatLongMapOf(): androidx.collection/FloatLongMap // androidx.collection/floatLongMapOf|floatLongMapOf(){}[0]
final fun androidx.collection/floatLongMapOf(kotlin/Float, kotlin/Long): androidx.collection/FloatLongMap // androidx.collection/floatLongMapOf|floatLongMapOf(kotlin.Float;kotlin.Long){}[0]
final fun androidx.collection/floatLongMapOf(kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long): androidx.collection/FloatLongMap // androidx.collection/floatLongMapOf|floatLongMapOf(kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long){}[0]
final fun androidx.collection/floatLongMapOf(kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long): androidx.collection/FloatLongMap // androidx.collection/floatLongMapOf|floatLongMapOf(kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long){}[0]
final fun androidx.collection/floatLongMapOf(kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long): androidx.collection/FloatLongMap // androidx.collection/floatLongMapOf|floatLongMapOf(kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long){}[0]
final fun androidx.collection/floatLongMapOf(kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long): androidx.collection/FloatLongMap // androidx.collection/floatLongMapOf|floatLongMapOf(kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long){}[0]
final fun androidx.collection/floatSetOf(): androidx.collection/FloatSet // androidx.collection/floatSetOf|floatSetOf(){}[0]
final fun androidx.collection/floatSetOf(kotlin/Float): androidx.collection/FloatSet // androidx.collection/floatSetOf|floatSetOf(kotlin.Float){}[0]
final fun androidx.collection/floatSetOf(kotlin/Float, kotlin/Float): androidx.collection/FloatSet // androidx.collection/floatSetOf|floatSetOf(kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/floatSetOf(kotlin/Float, kotlin/Float, kotlin/Float): androidx.collection/FloatSet // androidx.collection/floatSetOf|floatSetOf(kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/floatSetOf(kotlin/FloatArray...): androidx.collection/FloatSet // androidx.collection/floatSetOf|floatSetOf(kotlin.FloatArray...){}[0]
final fun androidx.collection/intFloatMapOf(): androidx.collection/IntFloatMap // androidx.collection/intFloatMapOf|intFloatMapOf(){}[0]
final fun androidx.collection/intFloatMapOf(kotlin/Int, kotlin/Float): androidx.collection/IntFloatMap // androidx.collection/intFloatMapOf|intFloatMapOf(kotlin.Int;kotlin.Float){}[0]
final fun androidx.collection/intFloatMapOf(kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float): androidx.collection/IntFloatMap // androidx.collection/intFloatMapOf|intFloatMapOf(kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float){}[0]
final fun androidx.collection/intFloatMapOf(kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float): androidx.collection/IntFloatMap // androidx.collection/intFloatMapOf|intFloatMapOf(kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float){}[0]
final fun androidx.collection/intFloatMapOf(kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float): androidx.collection/IntFloatMap // androidx.collection/intFloatMapOf|intFloatMapOf(kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float){}[0]
final fun androidx.collection/intFloatMapOf(kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float): androidx.collection/IntFloatMap // androidx.collection/intFloatMapOf|intFloatMapOf(kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float){}[0]
final fun androidx.collection/intIntMapOf(): androidx.collection/IntIntMap // androidx.collection/intIntMapOf|intIntMapOf(){}[0]
final fun androidx.collection/intIntMapOf(kotlin/Int, kotlin/Int): androidx.collection/IntIntMap // androidx.collection/intIntMapOf|intIntMapOf(kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/intIntMapOf(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): androidx.collection/IntIntMap // androidx.collection/intIntMapOf|intIntMapOf(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/intIntMapOf(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): androidx.collection/IntIntMap // androidx.collection/intIntMapOf|intIntMapOf(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/intIntMapOf(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): androidx.collection/IntIntMap // androidx.collection/intIntMapOf|intIntMapOf(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/intIntMapOf(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): androidx.collection/IntIntMap // androidx.collection/intIntMapOf|intIntMapOf(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/intListOf(): androidx.collection/IntList // androidx.collection/intListOf|intListOf(){}[0]
final fun androidx.collection/intListOf(kotlin/Int): androidx.collection/IntList // androidx.collection/intListOf|intListOf(kotlin.Int){}[0]
final fun androidx.collection/intListOf(kotlin/Int, kotlin/Int): androidx.collection/IntList // androidx.collection/intListOf|intListOf(kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/intListOf(kotlin/Int, kotlin/Int, kotlin/Int): androidx.collection/IntList // androidx.collection/intListOf|intListOf(kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/intListOf(kotlin/IntArray...): androidx.collection/IntList // androidx.collection/intListOf|intListOf(kotlin.IntArray...){}[0]
final fun androidx.collection/intLongMapOf(): androidx.collection/IntLongMap // androidx.collection/intLongMapOf|intLongMapOf(){}[0]
final fun androidx.collection/intLongMapOf(kotlin/Int, kotlin/Long): androidx.collection/IntLongMap // androidx.collection/intLongMapOf|intLongMapOf(kotlin.Int;kotlin.Long){}[0]
final fun androidx.collection/intLongMapOf(kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long): androidx.collection/IntLongMap // androidx.collection/intLongMapOf|intLongMapOf(kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long){}[0]
final fun androidx.collection/intLongMapOf(kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long): androidx.collection/IntLongMap // androidx.collection/intLongMapOf|intLongMapOf(kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long){}[0]
final fun androidx.collection/intLongMapOf(kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long): androidx.collection/IntLongMap // androidx.collection/intLongMapOf|intLongMapOf(kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long){}[0]
final fun androidx.collection/intLongMapOf(kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long): androidx.collection/IntLongMap // androidx.collection/intLongMapOf|intLongMapOf(kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long){}[0]
final fun androidx.collection/intSetOf(): androidx.collection/IntSet // androidx.collection/intSetOf|intSetOf(){}[0]
final fun androidx.collection/intSetOf(kotlin/Int): androidx.collection/IntSet // androidx.collection/intSetOf|intSetOf(kotlin.Int){}[0]
final fun androidx.collection/intSetOf(kotlin/Int, kotlin/Int): androidx.collection/IntSet // androidx.collection/intSetOf|intSetOf(kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/intSetOf(kotlin/Int, kotlin/Int, kotlin/Int): androidx.collection/IntSet // androidx.collection/intSetOf|intSetOf(kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/intSetOf(kotlin/IntArray...): androidx.collection/IntSet // androidx.collection/intSetOf|intSetOf(kotlin.IntArray...){}[0]
final fun androidx.collection/longFloatMapOf(): androidx.collection/LongFloatMap // androidx.collection/longFloatMapOf|longFloatMapOf(){}[0]
final fun androidx.collection/longFloatMapOf(kotlin/Long, kotlin/Float): androidx.collection/LongFloatMap // androidx.collection/longFloatMapOf|longFloatMapOf(kotlin.Long;kotlin.Float){}[0]
final fun androidx.collection/longFloatMapOf(kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float): androidx.collection/LongFloatMap // androidx.collection/longFloatMapOf|longFloatMapOf(kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float){}[0]
final fun androidx.collection/longFloatMapOf(kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float): androidx.collection/LongFloatMap // androidx.collection/longFloatMapOf|longFloatMapOf(kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float){}[0]
final fun androidx.collection/longFloatMapOf(kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float): androidx.collection/LongFloatMap // androidx.collection/longFloatMapOf|longFloatMapOf(kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float){}[0]
final fun androidx.collection/longFloatMapOf(kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float): androidx.collection/LongFloatMap // androidx.collection/longFloatMapOf|longFloatMapOf(kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float){}[0]
final fun androidx.collection/longIntMapOf(): androidx.collection/LongIntMap // androidx.collection/longIntMapOf|longIntMapOf(){}[0]
final fun androidx.collection/longIntMapOf(kotlin/Long, kotlin/Int): androidx.collection/LongIntMap // androidx.collection/longIntMapOf|longIntMapOf(kotlin.Long;kotlin.Int){}[0]
final fun androidx.collection/longIntMapOf(kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int): androidx.collection/LongIntMap // androidx.collection/longIntMapOf|longIntMapOf(kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int){}[0]
final fun androidx.collection/longIntMapOf(kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int): androidx.collection/LongIntMap // androidx.collection/longIntMapOf|longIntMapOf(kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int){}[0]
final fun androidx.collection/longIntMapOf(kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int): androidx.collection/LongIntMap // androidx.collection/longIntMapOf|longIntMapOf(kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int){}[0]
final fun androidx.collection/longIntMapOf(kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int): androidx.collection/LongIntMap // androidx.collection/longIntMapOf|longIntMapOf(kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int){}[0]
final fun androidx.collection/longListOf(): androidx.collection/LongList // androidx.collection/longListOf|longListOf(){}[0]
final fun androidx.collection/longListOf(kotlin/Long): androidx.collection/LongList // androidx.collection/longListOf|longListOf(kotlin.Long){}[0]
final fun androidx.collection/longListOf(kotlin/Long, kotlin/Long): androidx.collection/LongList // androidx.collection/longListOf|longListOf(kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/longListOf(kotlin/Long, kotlin/Long, kotlin/Long): androidx.collection/LongList // androidx.collection/longListOf|longListOf(kotlin.Long;kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/longListOf(kotlin/LongArray...): androidx.collection/LongList // androidx.collection/longListOf|longListOf(kotlin.LongArray...){}[0]
final fun androidx.collection/longLongMapOf(): androidx.collection/LongLongMap // androidx.collection/longLongMapOf|longLongMapOf(){}[0]
final fun androidx.collection/longLongMapOf(kotlin/Long, kotlin/Long): androidx.collection/LongLongMap // androidx.collection/longLongMapOf|longLongMapOf(kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/longLongMapOf(kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long): androidx.collection/LongLongMap // androidx.collection/longLongMapOf|longLongMapOf(kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/longLongMapOf(kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long): androidx.collection/LongLongMap // androidx.collection/longLongMapOf|longLongMapOf(kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/longLongMapOf(kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long): androidx.collection/LongLongMap // androidx.collection/longLongMapOf|longLongMapOf(kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/longLongMapOf(kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long): androidx.collection/LongLongMap // androidx.collection/longLongMapOf|longLongMapOf(kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/longSetOf(): androidx.collection/LongSet // androidx.collection/longSetOf|longSetOf(){}[0]
final fun androidx.collection/longSetOf(kotlin/Long): androidx.collection/LongSet // androidx.collection/longSetOf|longSetOf(kotlin.Long){}[0]
final fun androidx.collection/longSetOf(kotlin/Long, kotlin/Long): androidx.collection/LongSet // androidx.collection/longSetOf|longSetOf(kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/longSetOf(kotlin/Long, kotlin/Long, kotlin/Long): androidx.collection/LongSet // androidx.collection/longSetOf|longSetOf(kotlin.Long;kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/longSetOf(kotlin/LongArray...): androidx.collection/LongSet // androidx.collection/longSetOf|longSetOf(kotlin.LongArray...){}[0]
final fun androidx.collection/mutableDoubleListOf(kotlin/Double): androidx.collection/MutableDoubleList // androidx.collection/mutableDoubleListOf|mutableDoubleListOf(kotlin.Double){}[0]
final fun androidx.collection/mutableDoubleListOf(kotlin/Double, kotlin/Double): androidx.collection/MutableDoubleList // androidx.collection/mutableDoubleListOf|mutableDoubleListOf(kotlin.Double;kotlin.Double){}[0]
final fun androidx.collection/mutableDoubleListOf(kotlin/Double, kotlin/Double, kotlin/Double): androidx.collection/MutableDoubleList // androidx.collection/mutableDoubleListOf|mutableDoubleListOf(kotlin.Double;kotlin.Double;kotlin.Double){}[0]
final fun androidx.collection/mutableFloatFloatMapOf(): androidx.collection/MutableFloatFloatMap // androidx.collection/mutableFloatFloatMapOf|mutableFloatFloatMapOf(){}[0]
final fun androidx.collection/mutableFloatFloatMapOf(kotlin/Float, kotlin/Float): androidx.collection/MutableFloatFloatMap // androidx.collection/mutableFloatFloatMapOf|mutableFloatFloatMapOf(kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/mutableFloatFloatMapOf(kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float): androidx.collection/MutableFloatFloatMap // androidx.collection/mutableFloatFloatMapOf|mutableFloatFloatMapOf(kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/mutableFloatFloatMapOf(kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float): androidx.collection/MutableFloatFloatMap // androidx.collection/mutableFloatFloatMapOf|mutableFloatFloatMapOf(kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/mutableFloatFloatMapOf(kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float): androidx.collection/MutableFloatFloatMap // androidx.collection/mutableFloatFloatMapOf|mutableFloatFloatMapOf(kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/mutableFloatFloatMapOf(kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float): androidx.collection/MutableFloatFloatMap // androidx.collection/mutableFloatFloatMapOf|mutableFloatFloatMapOf(kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/mutableFloatIntMapOf(): androidx.collection/MutableFloatIntMap // androidx.collection/mutableFloatIntMapOf|mutableFloatIntMapOf(){}[0]
final fun androidx.collection/mutableFloatIntMapOf(kotlin/Float, kotlin/Int): androidx.collection/MutableFloatIntMap // androidx.collection/mutableFloatIntMapOf|mutableFloatIntMapOf(kotlin.Float;kotlin.Int){}[0]
final fun androidx.collection/mutableFloatIntMapOf(kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int): androidx.collection/MutableFloatIntMap // androidx.collection/mutableFloatIntMapOf|mutableFloatIntMapOf(kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int){}[0]
final fun androidx.collection/mutableFloatIntMapOf(kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int): androidx.collection/MutableFloatIntMap // androidx.collection/mutableFloatIntMapOf|mutableFloatIntMapOf(kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int){}[0]
final fun androidx.collection/mutableFloatIntMapOf(kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int): androidx.collection/MutableFloatIntMap // androidx.collection/mutableFloatIntMapOf|mutableFloatIntMapOf(kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int){}[0]
final fun androidx.collection/mutableFloatIntMapOf(kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int): androidx.collection/MutableFloatIntMap // androidx.collection/mutableFloatIntMapOf|mutableFloatIntMapOf(kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int){}[0]
final fun androidx.collection/mutableFloatListOf(kotlin/Float): androidx.collection/MutableFloatList // androidx.collection/mutableFloatListOf|mutableFloatListOf(kotlin.Float){}[0]
final fun androidx.collection/mutableFloatListOf(kotlin/Float, kotlin/Float): androidx.collection/MutableFloatList // androidx.collection/mutableFloatListOf|mutableFloatListOf(kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/mutableFloatListOf(kotlin/Float, kotlin/Float, kotlin/Float): androidx.collection/MutableFloatList // androidx.collection/mutableFloatListOf|mutableFloatListOf(kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/mutableFloatLongMapOf(): androidx.collection/MutableFloatLongMap // androidx.collection/mutableFloatLongMapOf|mutableFloatLongMapOf(){}[0]
final fun androidx.collection/mutableFloatLongMapOf(kotlin/Float, kotlin/Long): androidx.collection/MutableFloatLongMap // androidx.collection/mutableFloatLongMapOf|mutableFloatLongMapOf(kotlin.Float;kotlin.Long){}[0]
final fun androidx.collection/mutableFloatLongMapOf(kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long): androidx.collection/MutableFloatLongMap // androidx.collection/mutableFloatLongMapOf|mutableFloatLongMapOf(kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long){}[0]
final fun androidx.collection/mutableFloatLongMapOf(kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long): androidx.collection/MutableFloatLongMap // androidx.collection/mutableFloatLongMapOf|mutableFloatLongMapOf(kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long){}[0]
final fun androidx.collection/mutableFloatLongMapOf(kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long): androidx.collection/MutableFloatLongMap // androidx.collection/mutableFloatLongMapOf|mutableFloatLongMapOf(kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long){}[0]
final fun androidx.collection/mutableFloatLongMapOf(kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long): androidx.collection/MutableFloatLongMap // androidx.collection/mutableFloatLongMapOf|mutableFloatLongMapOf(kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long){}[0]
final fun androidx.collection/mutableFloatSetOf(): androidx.collection/MutableFloatSet // androidx.collection/mutableFloatSetOf|mutableFloatSetOf(){}[0]
final fun androidx.collection/mutableFloatSetOf(kotlin/Float): androidx.collection/MutableFloatSet // androidx.collection/mutableFloatSetOf|mutableFloatSetOf(kotlin.Float){}[0]
final fun androidx.collection/mutableFloatSetOf(kotlin/Float, kotlin/Float): androidx.collection/MutableFloatSet // androidx.collection/mutableFloatSetOf|mutableFloatSetOf(kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/mutableFloatSetOf(kotlin/Float, kotlin/Float, kotlin/Float): androidx.collection/MutableFloatSet // androidx.collection/mutableFloatSetOf|mutableFloatSetOf(kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.collection/mutableFloatSetOf(kotlin/FloatArray...): androidx.collection/MutableFloatSet // androidx.collection/mutableFloatSetOf|mutableFloatSetOf(kotlin.FloatArray...){}[0]
final fun androidx.collection/mutableIntFloatMapOf(): androidx.collection/MutableIntFloatMap // androidx.collection/mutableIntFloatMapOf|mutableIntFloatMapOf(){}[0]
final fun androidx.collection/mutableIntFloatMapOf(kotlin/Int, kotlin/Float): androidx.collection/MutableIntFloatMap // androidx.collection/mutableIntFloatMapOf|mutableIntFloatMapOf(kotlin.Int;kotlin.Float){}[0]
final fun androidx.collection/mutableIntFloatMapOf(kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float): androidx.collection/MutableIntFloatMap // androidx.collection/mutableIntFloatMapOf|mutableIntFloatMapOf(kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float){}[0]
final fun androidx.collection/mutableIntFloatMapOf(kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float): androidx.collection/MutableIntFloatMap // androidx.collection/mutableIntFloatMapOf|mutableIntFloatMapOf(kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float){}[0]
final fun androidx.collection/mutableIntFloatMapOf(kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float): androidx.collection/MutableIntFloatMap // androidx.collection/mutableIntFloatMapOf|mutableIntFloatMapOf(kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float){}[0]
final fun androidx.collection/mutableIntFloatMapOf(kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Float): androidx.collection/MutableIntFloatMap // androidx.collection/mutableIntFloatMapOf|mutableIntFloatMapOf(kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Float){}[0]
final fun androidx.collection/mutableIntIntMapOf(): androidx.collection/MutableIntIntMap // androidx.collection/mutableIntIntMapOf|mutableIntIntMapOf(){}[0]
final fun androidx.collection/mutableIntIntMapOf(kotlin/Int, kotlin/Int): androidx.collection/MutableIntIntMap // androidx.collection/mutableIntIntMapOf|mutableIntIntMapOf(kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/mutableIntIntMapOf(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): androidx.collection/MutableIntIntMap // androidx.collection/mutableIntIntMapOf|mutableIntIntMapOf(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/mutableIntIntMapOf(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): androidx.collection/MutableIntIntMap // androidx.collection/mutableIntIntMapOf|mutableIntIntMapOf(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/mutableIntIntMapOf(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): androidx.collection/MutableIntIntMap // androidx.collection/mutableIntIntMapOf|mutableIntIntMapOf(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/mutableIntIntMapOf(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): androidx.collection/MutableIntIntMap // androidx.collection/mutableIntIntMapOf|mutableIntIntMapOf(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/mutableIntListOf(kotlin/Int): androidx.collection/MutableIntList // androidx.collection/mutableIntListOf|mutableIntListOf(kotlin.Int){}[0]
final fun androidx.collection/mutableIntListOf(kotlin/Int, kotlin/Int): androidx.collection/MutableIntList // androidx.collection/mutableIntListOf|mutableIntListOf(kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/mutableIntListOf(kotlin/Int, kotlin/Int, kotlin/Int): androidx.collection/MutableIntList // androidx.collection/mutableIntListOf|mutableIntListOf(kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/mutableIntLongMapOf(): androidx.collection/MutableIntLongMap // androidx.collection/mutableIntLongMapOf|mutableIntLongMapOf(){}[0]
final fun androidx.collection/mutableIntLongMapOf(kotlin/Int, kotlin/Long): androidx.collection/MutableIntLongMap // androidx.collection/mutableIntLongMapOf|mutableIntLongMapOf(kotlin.Int;kotlin.Long){}[0]
final fun androidx.collection/mutableIntLongMapOf(kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long): androidx.collection/MutableIntLongMap // androidx.collection/mutableIntLongMapOf|mutableIntLongMapOf(kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long){}[0]
final fun androidx.collection/mutableIntLongMapOf(kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long): androidx.collection/MutableIntLongMap // androidx.collection/mutableIntLongMapOf|mutableIntLongMapOf(kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long){}[0]
final fun androidx.collection/mutableIntLongMapOf(kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long): androidx.collection/MutableIntLongMap // androidx.collection/mutableIntLongMapOf|mutableIntLongMapOf(kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long){}[0]
final fun androidx.collection/mutableIntLongMapOf(kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long): androidx.collection/MutableIntLongMap // androidx.collection/mutableIntLongMapOf|mutableIntLongMapOf(kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long){}[0]
final fun androidx.collection/mutableIntSetOf(): androidx.collection/MutableIntSet // androidx.collection/mutableIntSetOf|mutableIntSetOf(){}[0]
final fun androidx.collection/mutableIntSetOf(kotlin/Int): androidx.collection/MutableIntSet // androidx.collection/mutableIntSetOf|mutableIntSetOf(kotlin.Int){}[0]
final fun androidx.collection/mutableIntSetOf(kotlin/Int, kotlin/Int): androidx.collection/MutableIntSet // androidx.collection/mutableIntSetOf|mutableIntSetOf(kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/mutableIntSetOf(kotlin/Int, kotlin/Int, kotlin/Int): androidx.collection/MutableIntSet // androidx.collection/mutableIntSetOf|mutableIntSetOf(kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.collection/mutableIntSetOf(kotlin/IntArray...): androidx.collection/MutableIntSet // androidx.collection/mutableIntSetOf|mutableIntSetOf(kotlin.IntArray...){}[0]
final fun androidx.collection/mutableLongFloatMapOf(): androidx.collection/MutableLongFloatMap // androidx.collection/mutableLongFloatMapOf|mutableLongFloatMapOf(){}[0]
final fun androidx.collection/mutableLongFloatMapOf(kotlin/Long, kotlin/Float): androidx.collection/MutableLongFloatMap // androidx.collection/mutableLongFloatMapOf|mutableLongFloatMapOf(kotlin.Long;kotlin.Float){}[0]
final fun androidx.collection/mutableLongFloatMapOf(kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float): androidx.collection/MutableLongFloatMap // androidx.collection/mutableLongFloatMapOf|mutableLongFloatMapOf(kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float){}[0]
final fun androidx.collection/mutableLongFloatMapOf(kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float): androidx.collection/MutableLongFloatMap // androidx.collection/mutableLongFloatMapOf|mutableLongFloatMapOf(kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float){}[0]
final fun androidx.collection/mutableLongFloatMapOf(kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float): androidx.collection/MutableLongFloatMap // androidx.collection/mutableLongFloatMapOf|mutableLongFloatMapOf(kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float){}[0]
final fun androidx.collection/mutableLongFloatMapOf(kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float, kotlin/Long, kotlin/Float): androidx.collection/MutableLongFloatMap // androidx.collection/mutableLongFloatMapOf|mutableLongFloatMapOf(kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float;kotlin.Long;kotlin.Float){}[0]
final fun androidx.collection/mutableLongIntMapOf(): androidx.collection/MutableLongIntMap // androidx.collection/mutableLongIntMapOf|mutableLongIntMapOf(){}[0]
final fun androidx.collection/mutableLongIntMapOf(kotlin/Long, kotlin/Int): androidx.collection/MutableLongIntMap // androidx.collection/mutableLongIntMapOf|mutableLongIntMapOf(kotlin.Long;kotlin.Int){}[0]
final fun androidx.collection/mutableLongIntMapOf(kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int): androidx.collection/MutableLongIntMap // androidx.collection/mutableLongIntMapOf|mutableLongIntMapOf(kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int){}[0]
final fun androidx.collection/mutableLongIntMapOf(kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int): androidx.collection/MutableLongIntMap // androidx.collection/mutableLongIntMapOf|mutableLongIntMapOf(kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int){}[0]
final fun androidx.collection/mutableLongIntMapOf(kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int): androidx.collection/MutableLongIntMap // androidx.collection/mutableLongIntMapOf|mutableLongIntMapOf(kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int){}[0]
final fun androidx.collection/mutableLongIntMapOf(kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int, kotlin/Long, kotlin/Int): androidx.collection/MutableLongIntMap // androidx.collection/mutableLongIntMapOf|mutableLongIntMapOf(kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int;kotlin.Long;kotlin.Int){}[0]
final fun androidx.collection/mutableLongListOf(kotlin/Long): androidx.collection/MutableLongList // androidx.collection/mutableLongListOf|mutableLongListOf(kotlin.Long){}[0]
final fun androidx.collection/mutableLongListOf(kotlin/Long, kotlin/Long): androidx.collection/MutableLongList // androidx.collection/mutableLongListOf|mutableLongListOf(kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/mutableLongListOf(kotlin/Long, kotlin/Long, kotlin/Long): androidx.collection/MutableLongList // androidx.collection/mutableLongListOf|mutableLongListOf(kotlin.Long;kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/mutableLongLongMapOf(): androidx.collection/MutableLongLongMap // androidx.collection/mutableLongLongMapOf|mutableLongLongMapOf(){}[0]
final fun androidx.collection/mutableLongLongMapOf(kotlin/Long, kotlin/Long): androidx.collection/MutableLongLongMap // androidx.collection/mutableLongLongMapOf|mutableLongLongMapOf(kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/mutableLongLongMapOf(kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long): androidx.collection/MutableLongLongMap // androidx.collection/mutableLongLongMapOf|mutableLongLongMapOf(kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/mutableLongLongMapOf(kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long): androidx.collection/MutableLongLongMap // androidx.collection/mutableLongLongMapOf|mutableLongLongMapOf(kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/mutableLongLongMapOf(kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long): androidx.collection/MutableLongLongMap // androidx.collection/mutableLongLongMapOf|mutableLongLongMapOf(kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/mutableLongLongMapOf(kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Long): androidx.collection/MutableLongLongMap // androidx.collection/mutableLongLongMapOf|mutableLongLongMapOf(kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/mutableLongSetOf(): androidx.collection/MutableLongSet // androidx.collection/mutableLongSetOf|mutableLongSetOf(){}[0]
final fun androidx.collection/mutableLongSetOf(kotlin/Long): androidx.collection/MutableLongSet // androidx.collection/mutableLongSetOf|mutableLongSetOf(kotlin.Long){}[0]
final fun androidx.collection/mutableLongSetOf(kotlin/Long, kotlin/Long): androidx.collection/MutableLongSet // androidx.collection/mutableLongSetOf|mutableLongSetOf(kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/mutableLongSetOf(kotlin/Long, kotlin/Long, kotlin/Long): androidx.collection/MutableLongSet // androidx.collection/mutableLongSetOf|mutableLongSetOf(kotlin.Long;kotlin.Long;kotlin.Long){}[0]
final fun androidx.collection/mutableLongSetOf(kotlin/LongArray...): androidx.collection/MutableLongSet // androidx.collection/mutableLongSetOf|mutableLongSetOf(kotlin.LongArray...){}[0]
final inline fun (kotlin/Long).androidx.collection/lowestBitSet(): kotlin/Int // androidx.collection/lowestBitSet|lowestBitSet@kotlin.Long(){}[0]
final inline fun (kotlin/Long).androidx.collection/maskEmptyOrDeleted(): kotlin/Long // androidx.collection/maskEmptyOrDeleted|maskEmptyOrDeleted@kotlin.Long(){}[0]
final inline fun (kotlin/Long).androidx.collection/match(kotlin/Int): kotlin/Long // androidx.collection/match|match@kotlin.Long(kotlin.Int){}[0]
final inline fun <#A: kotlin/Any, #B: kotlin/Any> androidx.collection/lruCache(kotlin/Int, crossinline kotlin/Function2<#A, #B, kotlin/Int> = ..., crossinline kotlin/Function1<#A, #B?> = ..., crossinline kotlin/Function4<kotlin/Boolean, #A, #B, #B?, kotlin/Unit> = ...): androidx.collection/LruCache<#A, #B> // androidx.collection/lruCache|lruCache(kotlin.Int;kotlin.Function2<0:0,0:1,kotlin.Int>;kotlin.Function1<0:0,0:1?>;kotlin.Function4<kotlin.Boolean,0:0,0:1,0:1?,kotlin.Unit>){0§<kotlin.Any>;1§<kotlin.Any>}[0]
final inline fun <#A: kotlin/Any?> (androidx.collection/LongSparseArray<#A>).androidx.collection/contains(kotlin/Long): kotlin/Boolean // androidx.collection/contains|contains@androidx.collection.LongSparseArray<0:0>(kotlin.Long){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.collection/LongSparseArray<#A>).androidx.collection/forEach(kotlin/Function2<kotlin/Long, #A, kotlin/Unit>) // androidx.collection/forEach|forEach@androidx.collection.LongSparseArray<0:0>(kotlin.Function2<kotlin.Long,0:0,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.collection/LongSparseArray<#A>).androidx.collection/getOrDefault(kotlin/Long, #A): #A // androidx.collection/getOrDefault|getOrDefault@androidx.collection.LongSparseArray<0:0>(kotlin.Long;0:0){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.collection/LongSparseArray<#A>).androidx.collection/getOrElse(kotlin/Long, kotlin/Function0<#A>): #A // androidx.collection/getOrElse|getOrElse@androidx.collection.LongSparseArray<0:0>(kotlin.Long;kotlin.Function0<0:0>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.collection/LongSparseArray<#A>).androidx.collection/isNotEmpty(): kotlin/Boolean // androidx.collection/isNotEmpty|isNotEmpty@androidx.collection.LongSparseArray<0:0>(){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.collection/LongSparseArray<#A>).androidx.collection/set(kotlin/Long, #A) // androidx.collection/set|set@androidx.collection.LongSparseArray<0:0>(kotlin.Long;0:0){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.collection/SparseArrayCompat<#A>).androidx.collection/contains(kotlin/Int): kotlin/Boolean // androidx.collection/contains|contains@androidx.collection.SparseArrayCompat<0:0>(kotlin.Int){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.collection/SparseArrayCompat<#A>).androidx.collection/forEach(kotlin/Function2<kotlin/Int, #A, kotlin/Unit>) // androidx.collection/forEach|forEach@androidx.collection.SparseArrayCompat<0:0>(kotlin.Function2<kotlin.Int,0:0,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.collection/SparseArrayCompat<#A>).androidx.collection/getOrDefault(kotlin/Int, #A): #A // androidx.collection/getOrDefault|getOrDefault@androidx.collection.SparseArrayCompat<0:0>(kotlin.Int;0:0){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.collection/SparseArrayCompat<#A>).androidx.collection/getOrElse(kotlin/Int, kotlin/Function0<#A>): #A // androidx.collection/getOrElse|getOrElse@androidx.collection.SparseArrayCompat<0:0>(kotlin.Int;kotlin.Function0<0:0>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.collection/SparseArrayCompat<#A>).androidx.collection/isNotEmpty(): kotlin/Boolean // androidx.collection/isNotEmpty|isNotEmpty@androidx.collection.SparseArrayCompat<0:0>(){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.collection/SparseArrayCompat<#A>).androidx.collection/set(kotlin/Int, #A) // androidx.collection/set|set@androidx.collection.SparseArrayCompat<0:0>(kotlin.Int;0:0){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> androidx.collection/arraySetOf(): androidx.collection/ArraySet<#A> // androidx.collection/arraySetOf|arraySetOf(){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> androidx.collection/mutableObjectListOf(): androidx.collection/MutableObjectList<#A> // androidx.collection/mutableObjectListOf|mutableObjectListOf(){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> androidx.collection/mutableObjectListOf(kotlin/Array<out #A>...): androidx.collection/MutableObjectList<#A> // androidx.collection/mutableObjectListOf|mutableObjectListOf(kotlin.Array<out|0:0>...){0§<kotlin.Any?>}[0]
final inline fun androidx.collection.internal/floatFromBits(kotlin/Int): kotlin/Float // androidx.collection.internal/floatFromBits|floatFromBits(kotlin.Int){}[0]
final inline fun androidx.collection/isFull(kotlin/Long): kotlin/Boolean // androidx.collection/isFull|isFull(kotlin.Long){}[0]
final inline fun androidx.collection/mutableDoubleListOf(): androidx.collection/MutableDoubleList // androidx.collection/mutableDoubleListOf|mutableDoubleListOf(){}[0]
final inline fun androidx.collection/mutableDoubleListOf(kotlin/DoubleArray...): androidx.collection/MutableDoubleList // androidx.collection/mutableDoubleListOf|mutableDoubleListOf(kotlin.DoubleArray...){}[0]
final inline fun androidx.collection/mutableFloatListOf(): androidx.collection/MutableFloatList // androidx.collection/mutableFloatListOf|mutableFloatListOf(){}[0]
final inline fun androidx.collection/mutableFloatListOf(kotlin/FloatArray...): androidx.collection/MutableFloatList // androidx.collection/mutableFloatListOf|mutableFloatListOf(kotlin.FloatArray...){}[0]
final inline fun androidx.collection/mutableIntListOf(): androidx.collection/MutableIntList // androidx.collection/mutableIntListOf|mutableIntListOf(){}[0]
final inline fun androidx.collection/mutableIntListOf(kotlin/IntArray...): androidx.collection/MutableIntList // androidx.collection/mutableIntListOf|mutableIntListOf(kotlin.IntArray...){}[0]
final inline fun androidx.collection/mutableLongListOf(): androidx.collection/MutableLongList // androidx.collection/mutableLongListOf|mutableLongListOf(){}[0]
final inline fun androidx.collection/mutableLongListOf(kotlin/LongArray...): androidx.collection/MutableLongList // androidx.collection/mutableLongListOf|mutableLongListOf(kotlin.LongArray...){}[0]
final inline fun androidx.collection/readRawMetadata(kotlin/LongArray, kotlin/Int): kotlin/Long // androidx.collection/readRawMetadata|readRawMetadata(kotlin.LongArray;kotlin.Int){}[0]
