<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.4.0-alpha08" type="baseline" client="gradle" dependencies="false" name="AGP (7.4.0-alpha08)" variant="all" version="7.4.0-alpha08">

    <issue
        id="BanParcelableUsage"
        message="Class implements android.os.Parcelable"
        errorLine1="public data class ExerciseGoalRequest(val packageName: String, val exerciseGoal: ExerciseGoal&lt;*>) :"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/request/ExerciseGoalRequest.kt"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="        @Synchronized"
        errorLine2="        ^">
        <location
            file="src/main/java/androidx/health/services/client/impl/MeasureCallbackStub.kt"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="        @Synchronized"
        errorLine2="        ^">
        <location
            file="src/main/java/androidx/health/services/client/impl/MeasureCallbackStub.kt"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    private synchronized void handleRetriableDisconnection(Throwable throwable) {"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ServiceConnection.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mCurrentVersion` of class `Client` requires synthetic accessor"
        errorLine1="                        mCurrentVersion ="
        errorLine2="                        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mConnectionConfiguration` of class `Client` requires synthetic accessor"
        errorLine1="                        return mConnectionConfiguration;"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mConnectionManager` of class `Client` requires synthetic accessor"
        errorLine1="                            mConnectionManager.scheduleForExecution("
        errorLine2="                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mConnectionConfiguration` of class `Client` requires synthetic accessor"
        errorLine1="                                    new BaseQueueOperation(mConnectionConfiguration));"
        errorLine2="                                                           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` field `mConnectionManager` of class `Client` requires synthetic accessor"
        errorLine1="                            mConnectionManager.scheduleForExecution("
        errorLine2="                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `createQueueOperation` of class `Client` requires synthetic accessor"
        errorLine1="                                    createQueueOperation(operation, settableFuture));"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `getService` of class `Client` requires synthetic accessor"
        errorLine1="                operation.execute(getService(binder), settableFuture);"
        errorLine2="                                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` constructor of class `MeasureCallbackStub` requires synthetic accessor"
        errorLine1="                measureCallbackStub = MeasureCallbackStub(callbackKey, measureCallback)"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/MeasureCallbackStub.kt"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 1, &quot;operation&quot;, in androidx.health.services.client.impl.ipc.Client.executeWithVersionCheck) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            RemoteFutureOperation&lt;S, R> operation, int minApiVersion) {"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BaseQueueOperation(ConnectionConfiguration connectionConfiguration) {"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/BaseQueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void execute(IBinder binder) throws RemoteException {}"
        errorLine2="                        ~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/BaseQueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void setException(Throwable exception) {}"
        errorLine2="                             ~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/BaseQueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public QueueOperation trackExecution(ExecutionTracker tracker) {"
        errorLine2="           ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/BaseQueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public QueueOperation trackExecution(ExecutionTracker tracker) {"
        errorLine2="                                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/BaseQueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ConnectionConfiguration getConnectionConfiguration() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/BaseQueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            ClientConfiguration clientConfiguration,"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            ConnectionManager connectionManager,"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            ServiceGetter&lt;S> serviceGetter,"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            RemoteOperation&lt;S, Integer> remoteVersionGetter) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected &lt;R> ListenableFuture&lt;R> execute(RemoteOperation&lt;S, R> operation) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected &lt;R> ListenableFuture&lt;R> execute(RemoteOperation&lt;S, R> operation) {"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected &lt;R> ListenableFuture&lt;R> execute(RemoteFutureOperation&lt;S, R> operation) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected &lt;R> ListenableFuture&lt;R> execute(RemoteFutureOperation&lt;S, R> operation) {"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected &lt;R> ListenableFuture&lt;R> executeWithVersionCheck("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            RemoteFutureOperation&lt;S, R> operation, int minApiVersion) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected ListenableFuture&lt;Integer> getCurrentRemoteVersion(boolean forceRefresh) {"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected &lt;R> ListenableFuture&lt;R> registerListener("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            ListenerKey listenerKey, RemoteOperation&lt;S, R> registerListenerOperation) {"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            ListenerKey listenerKey, RemoteOperation&lt;S, R> registerListenerOperation) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected &lt;R> ListenableFuture&lt;R> registerListener("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            ListenerKey listenerKey, RemoteFutureOperation&lt;S, R> registerListenerOperation) {"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            ListenerKey listenerKey, RemoteFutureOperation&lt;S, R> registerListenerOperation) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected &lt;R> ListenableFuture&lt;R> unregisterListener("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            ListenerKey listenerKey, RemoteOperation&lt;S, R> unregisterListenerOperation) {"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            ListenerKey listenerKey, RemoteOperation&lt;S, R> unregisterListenerOperation) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected &lt;R> ListenableFuture&lt;R> unregisterListener("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            ListenerKey listenerKey, RemoteFutureOperation&lt;S, R> unregisterListenerOperation) {"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            ListenerKey listenerKey, RemoteFutureOperation&lt;S, R> unregisterListenerOperation) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/Client.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ClientConfiguration(String apiClientName, String servicePackageName, String bindAction) {"
        errorLine2="                               ~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ClientConfiguration(String apiClientName, String servicePackageName, String bindAction) {"
        errorLine2="                                                     ~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ClientConfiguration(String apiClientName, String servicePackageName, String bindAction) {"
        errorLine2="                                                                                ~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getServicePackageName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getBindAction() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getApiClientName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/ClientConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            String packageName,"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ConnectionConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            String clientName,"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ConnectionConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            String bindAction,"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ConnectionConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            QueueOperation refreshVersionOperation) {"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ConnectionConfiguration.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ConnectionManager(Context context, Looper looper) {"
        errorLine2="                             ~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ConnectionManager(Context context, Looper looper) {"
        errorLine2="                                              ~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void scheduleForExecution(QueueOperation operation) {"
        errorLine2="                                     ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void registerListener(ListenerKey listenerKey, QueueOperation registerOperation) {"
        errorLine2="                                 ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void registerListener(ListenerKey listenerKey, QueueOperation registerOperation) {"
        errorLine2="                                                          ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void unregisterListener(ListenerKey listenerKey, QueueOperation unregisterOperation) {"
        errorLine2="                                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void unregisterListener(ListenerKey listenerKey, QueueOperation unregisterOperation) {"
        errorLine2="                                                            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onConnected(ServiceConnection connection) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onDisconnected(ServiceConnection connection, long reconnectDelayMs) {"
        errorLine2="                               ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean handleMessage(Message msg) {"
        errorLine2="                                 ~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ConnectionManager.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void track(SettableFuture&lt;?> future) {"
        errorLine2="                      ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/DefaultExecutionTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void cancelPendingFutures(Throwable throwable) {"
        errorLine2="                                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/DefaultExecutionTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void track(SettableFuture&lt;?> future);"
        errorLine2="               ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ExecutionTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void cancelPendingFutures(Throwable throwable);"
        errorLine2="                              ~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ExecutionTracker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ListenerKey(Object listenerKey) {"
        errorLine2="                       ~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ListenerKey.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void execute(IBinder binder) throws RemoteException;"
        errorLine2="                 ~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void setException(Throwable exception);"
        errorLine2="                      ~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    QueueOperation trackExecution(ExecutionTracker tracker);"
        errorLine2="    ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    QueueOperation trackExecution(ExecutionTracker tracker);"
        errorLine2="                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    ConnectionConfiguration getConnectionConfiguration();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/QueueOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void execute(S service, SettableFuture&lt;R> resultFuture) throws RemoteException;"
        errorLine2="                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/RemoteFutureOperation.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        void onConnected(ServiceConnection connection);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ServiceConnection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        void onDisconnected(ServiceConnection connection, long reconnectDelayMs);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/health/services/client/impl/ipc/internal/ServiceConnection.java"/>
    </issue>

</issues>
