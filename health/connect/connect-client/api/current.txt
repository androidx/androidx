// Signature format: 4.0
package androidx.health.connect.client {

  @kotlin.jvm.JvmDefaultWithCompatibility public interface HealthConnectClient {
    method public suspend Object? aggregate(androidx.health.connect.client.request.AggregateRequest request, kotlin.coroutines.Continuation<? super androidx.health.connect.client.aggregate.AggregationResult>);
    method public suspend Object? aggregateGroupByDuration(androidx.health.connect.client.request.AggregateGroupByDurationRequest request, kotlin.coroutines.Continuation<? super java.util.List<androidx.health.connect.client.aggregate.AggregationResultGroupedByDuration>>);
    method public suspend Object? aggregateGroupByPeriod(androidx.health.connect.client.request.AggregateGroupByPeriodRequest request, kotlin.coroutines.Continuation<? super java.util.List<androidx.health.connect.client.aggregate.AggregationResultGroupedByPeriod>>);
    method public suspend Object? deleteRecords(kotlin.reflect.KClass<? extends androidx.health.connect.client.records.Record> recordType, androidx.health.connect.client.time.TimeRangeFilter timeRangeFilter, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public suspend Object? deleteRecords(kotlin.reflect.KClass<? extends androidx.health.connect.client.records.Record> recordType, java.util.List<java.lang.String> recordIdsList, java.util.List<java.lang.String> clientRecordIdsList, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public suspend Object? getChanges(String changesToken, kotlin.coroutines.Continuation<? super androidx.health.connect.client.response.ChangesResponse>);
    method public suspend Object? getChangesToken(androidx.health.connect.client.request.ChangesTokenRequest request, kotlin.coroutines.Continuation<? super java.lang.String>);
    method public static android.content.Intent getHealthConnectManageDataIntent(android.content.Context context);
    method public static android.content.Intent getHealthConnectManageDataIntent(android.content.Context context, optional String providerPackageName);
    method public static String getHealthConnectSettingsAction();
    method public static androidx.health.connect.client.HealthConnectClient getOrCreate(android.content.Context context);
    method public static androidx.health.connect.client.HealthConnectClient getOrCreate(android.content.Context context, optional String providerPackageName);
    method public androidx.health.connect.client.PermissionController getPermissionController();
    method public static int getSdkStatus(android.content.Context context);
    method public static int getSdkStatus(android.content.Context context, optional String providerPackageName);
    method public suspend Object? insertRecords(java.util.List<? extends androidx.health.connect.client.records.Record> records, kotlin.coroutines.Continuation<? super androidx.health.connect.client.response.InsertRecordsResponse>);
    method public suspend <T extends androidx.health.connect.client.records.Record> Object? readRecord(kotlin.reflect.KClass<T> recordType, String recordId, kotlin.coroutines.Continuation<? super androidx.health.connect.client.response.ReadRecordResponse<T>>);
    method public suspend <T extends androidx.health.connect.client.records.Record> Object? readRecords(androidx.health.connect.client.request.ReadRecordsRequest<T> request, kotlin.coroutines.Continuation<? super androidx.health.connect.client.response.ReadRecordsResponse<T>>);
    method public suspend Object? updateRecords(java.util.List<? extends androidx.health.connect.client.records.Record> records, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    property public static String ACTION_HEALTH_CONNECT_SETTINGS;
    property public abstract androidx.health.connect.client.PermissionController permissionController;
    field public static final androidx.health.connect.client.HealthConnectClient.Companion Companion;
    field public static final int SDK_AVAILABLE = 3; // 0x3
    field public static final int SDK_UNAVAILABLE = 1; // 0x1
    field public static final int SDK_UNAVAILABLE_PROVIDER_UPDATE_REQUIRED = 2; // 0x2
  }

  public static final class HealthConnectClient.Companion {
    method public android.content.Intent getHealthConnectManageDataIntent(android.content.Context context);
    method public android.content.Intent getHealthConnectManageDataIntent(android.content.Context context, optional String providerPackageName);
    method public String getHealthConnectSettingsAction();
    method public androidx.health.connect.client.HealthConnectClient getOrCreate(android.content.Context context);
    method public androidx.health.connect.client.HealthConnectClient getOrCreate(android.content.Context context, optional String providerPackageName);
    method public int getSdkStatus(android.content.Context context);
    method public int getSdkStatus(android.content.Context context, optional String providerPackageName);
    property public final String ACTION_HEALTH_CONNECT_SETTINGS;
    field public static final int SDK_AVAILABLE = 3; // 0x3
    field public static final int SDK_UNAVAILABLE = 1; // 0x1
    field public static final int SDK_UNAVAILABLE_PROVIDER_UPDATE_REQUIRED = 2; // 0x2
  }

  public final class HealthConnectClientExt {
    method public static suspend inline <reified T extends androidx.health.connect.client.records.Record> Object? deleteRecords(androidx.health.connect.client.HealthConnectClient, androidx.health.connect.client.time.TimeRangeFilter timeRangeFilter, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public static suspend inline <reified T extends androidx.health.connect.client.records.Record> Object? deleteRecords(androidx.health.connect.client.HealthConnectClient, java.util.List<java.lang.String> recordIdsList, java.util.List<java.lang.String> clientRecordIdsList, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public static suspend inline <reified T extends androidx.health.connect.client.records.Record> Object? readRecord(androidx.health.connect.client.HealthConnectClient, String recordId, kotlin.coroutines.Continuation<? super androidx.health.connect.client.response.ReadRecordResponse<T>>);
  }

  @kotlin.jvm.JvmDefaultWithCompatibility public interface PermissionController {
    method public static androidx.activity.result.contract.ActivityResultContract<java.util.Set<java.lang.String>,java.util.Set<java.lang.String>> createRequestPermissionResultContract();
    method public static androidx.activity.result.contract.ActivityResultContract<java.util.Set<java.lang.String>,java.util.Set<java.lang.String>> createRequestPermissionResultContract(optional String providerPackageName);
    method public suspend Object? getGrantedPermissions(kotlin.coroutines.Continuation<? super java.util.Set<java.lang.String>>);
    method public suspend Object? revokeAllPermissions(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    field public static final androidx.health.connect.client.PermissionController.Companion Companion;
  }

  public static final class PermissionController.Companion {
    method public androidx.activity.result.contract.ActivityResultContract<java.util.Set<java.lang.String>,java.util.Set<java.lang.String>> createRequestPermissionResultContract();
    method public androidx.activity.result.contract.ActivityResultContract<java.util.Set<java.lang.String>,java.util.Set<java.lang.String>> createRequestPermissionResultContract(optional String providerPackageName);
  }

}

package androidx.health.connect.client.aggregate {

  public final class AggregateMetric<T> {
  }

  public final class AggregationResult {
    method public operator boolean contains(androidx.health.connect.client.aggregate.AggregateMetric<?> metric);
    method public operator <T> T? get(androidx.health.connect.client.aggregate.AggregateMetric<? extends T> metric);
    method public java.util.Set<androidx.health.connect.client.records.metadata.DataOrigin> getDataOrigins();
    property public final java.util.Set<androidx.health.connect.client.records.metadata.DataOrigin> dataOrigins;
  }

  public final class AggregationResultGroupedByDuration {
    method public java.time.Instant getEndTime();
    method public androidx.health.connect.client.aggregate.AggregationResult getResult();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset getZoneOffset();
    property public final java.time.Instant endTime;
    property public final androidx.health.connect.client.aggregate.AggregationResult result;
    property public final java.time.Instant startTime;
    property public final java.time.ZoneOffset zoneOffset;
  }

  public final class AggregationResultGroupedByPeriod {
    method public java.time.LocalDateTime getEndTime();
    method public androidx.health.connect.client.aggregate.AggregationResult getResult();
    method public java.time.LocalDateTime getStartTime();
    property public final java.time.LocalDateTime endTime;
    property public final androidx.health.connect.client.aggregate.AggregationResult result;
    property public final java.time.LocalDateTime startTime;
  }

}

package androidx.health.connect.client.changes {

  public interface Change {
  }

  public final class DeletionChange implements androidx.health.connect.client.changes.Change {
    method public String getRecordId();
    property public final String recordId;
  }

  public final class UpsertionChange implements androidx.health.connect.client.changes.Change {
    method public androidx.health.connect.client.records.Record getRecord();
    property public final androidx.health.connect.client.records.Record record;
  }

}

package androidx.health.connect.client.contracts {

  public final class ExerciseRouteRequestContract extends androidx.activity.result.contract.ActivityResultContract<java.lang.String,androidx.health.connect.client.records.ExerciseRoute?> {
    ctor public ExerciseRouteRequestContract();
    method public android.content.Intent createIntent(android.content.Context context, String input);
    method public androidx.health.connect.client.records.ExerciseRoute? parseResult(int resultCode, android.content.Intent? intent);
  }

  public final class HealthPermissionsRequestContract extends androidx.activity.result.contract.ActivityResultContract<java.util.Set<? extends java.lang.String>,java.util.Set<? extends java.lang.String>> {
    ctor public HealthPermissionsRequestContract(optional String providerPackageName);
    method public android.content.Intent createIntent(android.content.Context context, java.util.Set<java.lang.String> input);
    method public java.util.Set<java.lang.String> parseResult(int resultCode, android.content.Intent? intent);
  }

}

package androidx.health.connect.client.permission {

  public final class HealthPermission {
    method public static String getReadPermission(kotlin.reflect.KClass<? extends androidx.health.connect.client.records.Record> recordType);
    method public static String getWritePermission(kotlin.reflect.KClass<? extends androidx.health.connect.client.records.Record> recordType);
    field public static final androidx.health.connect.client.permission.HealthPermission.Companion Companion;
    field public static final String PERMISSION_WRITE_EXERCISE_ROUTE = "android.permission.health.WRITE_EXERCISE_ROUTE";
  }

  public static final class HealthPermission.Companion {
    method public String getReadPermission(kotlin.reflect.KClass<? extends androidx.health.connect.client.records.Record> recordType);
    method public String getWritePermission(kotlin.reflect.KClass<? extends androidx.health.connect.client.records.Record> recordType);
  }

}

package androidx.health.connect.client.records {

  public final class ActiveCaloriesBurnedRecord implements androidx.health.connect.client.records.Record {
    ctor public ActiveCaloriesBurnedRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, androidx.health.connect.client.units.Energy energy, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.units.Energy getEnergy();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public final androidx.health.connect.client.units.Energy energy;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Energy> ACTIVE_CALORIES_TOTAL;
    field public static final androidx.health.connect.client.records.ActiveCaloriesBurnedRecord.Companion Companion;
  }

  public static final class ActiveCaloriesBurnedRecord.Companion {
  }

  public final class BasalBodyTemperatureRecord implements androidx.health.connect.client.records.Record {
    ctor public BasalBodyTemperatureRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, androidx.health.connect.client.units.Temperature temperature, optional int measurementLocation, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public int getMeasurementLocation();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public androidx.health.connect.client.units.Temperature getTemperature();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final int measurementLocation;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public final androidx.health.connect.client.units.Temperature temperature;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
  }

  public final class BasalMetabolicRateRecord implements androidx.health.connect.client.records.Record {
    ctor public BasalMetabolicRateRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, androidx.health.connect.client.units.Power basalMetabolicRate, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.units.Power getBasalMetabolicRate();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final androidx.health.connect.client.units.Power basalMetabolicRate;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Energy> BASAL_CALORIES_TOTAL;
    field public static final androidx.health.connect.client.records.BasalMetabolicRateRecord.Companion Companion;
  }

  public static final class BasalMetabolicRateRecord.Companion {
  }

  public final class BloodGlucoseRecord implements androidx.health.connect.client.records.Record {
    ctor public BloodGlucoseRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, androidx.health.connect.client.units.BloodGlucose level, optional int specimenSource, optional int mealType, optional int relationToMeal, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.units.BloodGlucose getLevel();
    method public int getMealType();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public int getRelationToMeal();
    method public int getSpecimenSource();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final androidx.health.connect.client.units.BloodGlucose level;
    property public final int mealType;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public final int relationToMeal;
    property public final int specimenSource;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
    field public static final androidx.health.connect.client.records.BloodGlucoseRecord.Companion Companion;
    field public static final int RELATION_TO_MEAL_AFTER_MEAL = 4; // 0x4
    field public static final int RELATION_TO_MEAL_BEFORE_MEAL = 3; // 0x3
    field public static final int RELATION_TO_MEAL_FASTING = 2; // 0x2
    field public static final int RELATION_TO_MEAL_GENERAL = 1; // 0x1
    field public static final int RELATION_TO_MEAL_UNKNOWN = 0; // 0x0
    field public static final int SPECIMEN_SOURCE_CAPILLARY_BLOOD = 2; // 0x2
    field public static final int SPECIMEN_SOURCE_INTERSTITIAL_FLUID = 1; // 0x1
    field public static final int SPECIMEN_SOURCE_PLASMA = 3; // 0x3
    field public static final int SPECIMEN_SOURCE_SERUM = 4; // 0x4
    field public static final int SPECIMEN_SOURCE_TEARS = 5; // 0x5
    field public static final int SPECIMEN_SOURCE_UNKNOWN = 0; // 0x0
    field public static final int SPECIMEN_SOURCE_WHOLE_BLOOD = 6; // 0x6
  }

  public static final class BloodGlucoseRecord.Companion {
  }

  public final class BloodPressureRecord implements androidx.health.connect.client.records.Record {
    ctor public BloodPressureRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, androidx.health.connect.client.units.Pressure systolic, androidx.health.connect.client.units.Pressure diastolic, optional int bodyPosition, optional int measurementLocation, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public int getBodyPosition();
    method public androidx.health.connect.client.units.Pressure getDiastolic();
    method public int getMeasurementLocation();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public androidx.health.connect.client.units.Pressure getSystolic();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final int bodyPosition;
    property public final androidx.health.connect.client.units.Pressure diastolic;
    property public final int measurementLocation;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public final androidx.health.connect.client.units.Pressure systolic;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
    field public static final int BODY_POSITION_LYING_DOWN = 3; // 0x3
    field public static final int BODY_POSITION_RECLINING = 4; // 0x4
    field public static final int BODY_POSITION_SITTING_DOWN = 2; // 0x2
    field public static final int BODY_POSITION_STANDING_UP = 1; // 0x1
    field public static final int BODY_POSITION_UNKNOWN = 0; // 0x0
    field public static final androidx.health.connect.client.records.BloodPressureRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Pressure> DIASTOLIC_AVG;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Pressure> DIASTOLIC_MAX;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Pressure> DIASTOLIC_MIN;
    field public static final int MEASUREMENT_LOCATION_LEFT_UPPER_ARM = 3; // 0x3
    field public static final int MEASUREMENT_LOCATION_LEFT_WRIST = 1; // 0x1
    field public static final int MEASUREMENT_LOCATION_RIGHT_UPPER_ARM = 4; // 0x4
    field public static final int MEASUREMENT_LOCATION_RIGHT_WRIST = 2; // 0x2
    field public static final int MEASUREMENT_LOCATION_UNKNOWN = 0; // 0x0
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Pressure> SYSTOLIC_AVG;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Pressure> SYSTOLIC_MAX;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Pressure> SYSTOLIC_MIN;
  }

  public static final class BloodPressureRecord.Companion {
  }

  public final class BodyFatRecord implements androidx.health.connect.client.records.Record {
    ctor public BodyFatRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, androidx.health.connect.client.units.Percentage percentage, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public androidx.health.connect.client.units.Percentage getPercentage();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public final androidx.health.connect.client.units.Percentage percentage;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
  }

  public final class BodyTemperatureMeasurementLocation {
    field public static final androidx.health.connect.client.records.BodyTemperatureMeasurementLocation INSTANCE;
    field public static final int MEASUREMENT_LOCATION_ARMPIT = 1; // 0x1
    field public static final int MEASUREMENT_LOCATION_EAR = 8; // 0x8
    field public static final int MEASUREMENT_LOCATION_FINGER = 2; // 0x2
    field public static final int MEASUREMENT_LOCATION_FOREHEAD = 3; // 0x3
    field public static final int MEASUREMENT_LOCATION_MOUTH = 4; // 0x4
    field public static final int MEASUREMENT_LOCATION_RECTUM = 5; // 0x5
    field public static final int MEASUREMENT_LOCATION_TEMPORAL_ARTERY = 6; // 0x6
    field public static final int MEASUREMENT_LOCATION_TOE = 7; // 0x7
    field public static final int MEASUREMENT_LOCATION_UNKNOWN = 0; // 0x0
    field public static final int MEASUREMENT_LOCATION_VAGINA = 10; // 0xa
    field public static final int MEASUREMENT_LOCATION_WRIST = 9; // 0x9
  }

  public final class BodyTemperatureRecord implements androidx.health.connect.client.records.Record {
    ctor public BodyTemperatureRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, androidx.health.connect.client.units.Temperature temperature, optional int measurementLocation, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public int getMeasurementLocation();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public androidx.health.connect.client.units.Temperature getTemperature();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final int measurementLocation;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public final androidx.health.connect.client.units.Temperature temperature;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
  }

  public final class BodyWaterMassRecord implements androidx.health.connect.client.records.Record {
    ctor public BodyWaterMassRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, androidx.health.connect.client.units.Mass mass, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.units.Mass getMass();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final androidx.health.connect.client.units.Mass mass;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
  }

  public final class BoneMassRecord implements androidx.health.connect.client.records.Record {
    ctor public BoneMassRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, androidx.health.connect.client.units.Mass mass, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.units.Mass getMass();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final androidx.health.connect.client.units.Mass mass;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
  }

  public final class CervicalMucusRecord implements androidx.health.connect.client.records.Record {
    ctor public CervicalMucusRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, optional int appearance, optional int sensation, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public int getAppearance();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public int getSensation();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final int appearance;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public final int sensation;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
    field public static final int APPEARANCE_CREAMY = 3; // 0x3
    field public static final int APPEARANCE_DRY = 1; // 0x1
    field public static final int APPEARANCE_EGG_WHITE = 5; // 0x5
    field public static final int APPEARANCE_STICKY = 2; // 0x2
    field public static final int APPEARANCE_UNKNOWN = 0; // 0x0
    field public static final int APPEARANCE_UNUSUAL = 6; // 0x6
    field public static final int APPEARANCE_WATERY = 4; // 0x4
    field public static final androidx.health.connect.client.records.CervicalMucusRecord.Companion Companion;
    field public static final int SENSATION_HEAVY = 3; // 0x3
    field public static final int SENSATION_LIGHT = 1; // 0x1
    field public static final int SENSATION_MEDIUM = 2; // 0x2
    field public static final int SENSATION_UNKNOWN = 0; // 0x0
  }

  public static final class CervicalMucusRecord.Companion {
  }

  public final class CyclingPedalingCadenceRecord implements androidx.health.connect.client.records.Record {
    ctor public CyclingPedalingCadenceRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, java.util.List<androidx.health.connect.client.records.CyclingPedalingCadenceRecord.Sample> samples, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.util.List<androidx.health.connect.client.records.CyclingPedalingCadenceRecord.Sample> getSamples();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.util.List<androidx.health.connect.client.records.CyclingPedalingCadenceRecord.Sample> samples;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    field public static final androidx.health.connect.client.records.CyclingPedalingCadenceRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Double> RPM_AVG;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Double> RPM_MAX;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Double> RPM_MIN;
  }

  public static final class CyclingPedalingCadenceRecord.Companion {
  }

  public static final class CyclingPedalingCadenceRecord.Sample {
    ctor public CyclingPedalingCadenceRecord.Sample(java.time.Instant time, @FloatRange(from=0.0, to=10000.0) double revolutionsPerMinute);
    method public double getRevolutionsPerMinute();
    method public java.time.Instant getTime();
    property public final double revolutionsPerMinute;
    property public final java.time.Instant time;
  }

  public final class DistanceRecord implements androidx.health.connect.client.records.Record {
    ctor public DistanceRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, androidx.health.connect.client.units.Length distance, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.units.Length getDistance();
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public final androidx.health.connect.client.units.Length distance;
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    field public static final androidx.health.connect.client.records.DistanceRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Length> DISTANCE_TOTAL;
  }

  public static final class DistanceRecord.Companion {
  }

  public final class ElevationGainedRecord implements androidx.health.connect.client.records.Record {
    ctor public ElevationGainedRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, androidx.health.connect.client.units.Length elevation, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.units.Length getElevation();
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public final androidx.health.connect.client.units.Length elevation;
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    field public static final androidx.health.connect.client.records.ElevationGainedRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Length> ELEVATION_GAINED_TOTAL;
  }

  public static final class ElevationGainedRecord.Companion {
  }

  public final class ExerciseLap {
    ctor public ExerciseLap(java.time.Instant startTime, java.time.Instant endTime, optional androidx.health.connect.client.units.Length? length);
    method public java.time.Instant getEndTime();
    method public androidx.health.connect.client.units.Length? getLength();
    method public java.time.Instant getStartTime();
    property public final java.time.Instant endTime;
    property public final androidx.health.connect.client.units.Length? length;
    property public final java.time.Instant startTime;
  }

  public final class ExerciseRoute {
    ctor public ExerciseRoute(java.util.List<androidx.health.connect.client.records.ExerciseRoute.Location> route);
    method public java.util.List<androidx.health.connect.client.records.ExerciseRoute.Location> getRoute();
    property public final java.util.List<androidx.health.connect.client.records.ExerciseRoute.Location> route;
  }

  public static final class ExerciseRoute.Location {
    ctor public ExerciseRoute.Location(java.time.Instant time, double latitude, double longitude, optional androidx.health.connect.client.units.Length? horizontalAccuracy, optional androidx.health.connect.client.units.Length? verticalAccuracy, optional androidx.health.connect.client.units.Length? altitude);
    method public androidx.health.connect.client.units.Length? getAltitude();
    method public androidx.health.connect.client.units.Length? getHorizontalAccuracy();
    method public double getLatitude();
    method public double getLongitude();
    method public java.time.Instant getTime();
    method public androidx.health.connect.client.units.Length? getVerticalAccuracy();
    property public final androidx.health.connect.client.units.Length? altitude;
    property public final androidx.health.connect.client.units.Length? horizontalAccuracy;
    property public final double latitude;
    property public final double longitude;
    property public final java.time.Instant time;
    property public final androidx.health.connect.client.units.Length? verticalAccuracy;
    field public static final androidx.health.connect.client.records.ExerciseRoute.Location.Companion Companion;
  }

  public static final class ExerciseRoute.Location.Companion {
  }

  public abstract class ExerciseRouteResult {
  }

  public static final class ExerciseRouteResult.ConsentRequired extends androidx.health.connect.client.records.ExerciseRouteResult {
    ctor public ExerciseRouteResult.ConsentRequired();
  }

  public static final class ExerciseRouteResult.Data extends androidx.health.connect.client.records.ExerciseRouteResult {
    ctor public ExerciseRouteResult.Data(androidx.health.connect.client.records.ExerciseRoute exerciseRoute);
    method public androidx.health.connect.client.records.ExerciseRoute getExerciseRoute();
    property public final androidx.health.connect.client.records.ExerciseRoute exerciseRoute;
  }

  public static final class ExerciseRouteResult.NoData extends androidx.health.connect.client.records.ExerciseRouteResult {
    ctor public ExerciseRouteResult.NoData();
  }

  public final class ExerciseSegment {
    ctor public ExerciseSegment(java.time.Instant startTime, java.time.Instant endTime, int segmentType, optional int repetitions);
    method public java.time.Instant getEndTime();
    method public int getRepetitions();
    method public int getSegmentType();
    method public java.time.Instant getStartTime();
    property public final java.time.Instant endTime;
    property public final int repetitions;
    property public final int segmentType;
    property public final java.time.Instant startTime;
    field public static final androidx.health.connect.client.records.ExerciseSegment.Companion Companion;
    field public static final int EXERCISE_SEGMENT_TYPE_ARM_CURL = 1; // 0x1
    field public static final int EXERCISE_SEGMENT_TYPE_BACK_EXTENSION = 2; // 0x2
    field public static final int EXERCISE_SEGMENT_TYPE_BALL_SLAM = 3; // 0x3
    field public static final int EXERCISE_SEGMENT_TYPE_BARBELL_SHOULDER_PRESS = 4; // 0x4
    field public static final int EXERCISE_SEGMENT_TYPE_BENCH_PRESS = 5; // 0x5
    field public static final int EXERCISE_SEGMENT_TYPE_BENCH_SIT_UP = 6; // 0x6
    field public static final int EXERCISE_SEGMENT_TYPE_BIKING = 7; // 0x7
    field public static final int EXERCISE_SEGMENT_TYPE_BIKING_STATIONARY = 8; // 0x8
    field public static final int EXERCISE_SEGMENT_TYPE_BURPEE = 9; // 0x9
    field public static final int EXERCISE_SEGMENT_TYPE_CRUNCH = 10; // 0xa
    field public static final int EXERCISE_SEGMENT_TYPE_DEADLIFT = 11; // 0xb
    field public static final int EXERCISE_SEGMENT_TYPE_DOUBLE_ARM_TRICEPS_EXTENSION = 12; // 0xc
    field public static final int EXERCISE_SEGMENT_TYPE_DUMBBELL_CURL_LEFT_ARM = 13; // 0xd
    field public static final int EXERCISE_SEGMENT_TYPE_DUMBBELL_CURL_RIGHT_ARM = 14; // 0xe
    field public static final int EXERCISE_SEGMENT_TYPE_DUMBBELL_FRONT_RAISE = 15; // 0xf
    field public static final int EXERCISE_SEGMENT_TYPE_DUMBBELL_LATERAL_RAISE = 16; // 0x10
    field public static final int EXERCISE_SEGMENT_TYPE_DUMBBELL_ROW = 17; // 0x11
    field public static final int EXERCISE_SEGMENT_TYPE_DUMBBELL_TRICEPS_EXTENSION_LEFT_ARM = 18; // 0x12
    field public static final int EXERCISE_SEGMENT_TYPE_DUMBBELL_TRICEPS_EXTENSION_RIGHT_ARM = 19; // 0x13
    field public static final int EXERCISE_SEGMENT_TYPE_DUMBBELL_TRICEPS_EXTENSION_TWO_ARM = 20; // 0x14
    field public static final int EXERCISE_SEGMENT_TYPE_ELLIPTICAL = 21; // 0x15
    field public static final int EXERCISE_SEGMENT_TYPE_FORWARD_TWIST = 22; // 0x16
    field public static final int EXERCISE_SEGMENT_TYPE_FRONT_RAISE = 23; // 0x17
    field public static final int EXERCISE_SEGMENT_TYPE_HIGH_INTENSITY_INTERVAL_TRAINING = 24; // 0x18
    field public static final int EXERCISE_SEGMENT_TYPE_HIP_THRUST = 25; // 0x19
    field public static final int EXERCISE_SEGMENT_TYPE_HULA_HOOP = 26; // 0x1a
    field public static final int EXERCISE_SEGMENT_TYPE_JUMPING_JACK = 27; // 0x1b
    field public static final int EXERCISE_SEGMENT_TYPE_JUMP_ROPE = 28; // 0x1c
    field public static final int EXERCISE_SEGMENT_TYPE_KETTLEBELL_SWING = 29; // 0x1d
    field public static final int EXERCISE_SEGMENT_TYPE_LATERAL_RAISE = 30; // 0x1e
    field public static final int EXERCISE_SEGMENT_TYPE_LAT_PULL_DOWN = 31; // 0x1f
    field public static final int EXERCISE_SEGMENT_TYPE_LEG_CURL = 32; // 0x20
    field public static final int EXERCISE_SEGMENT_TYPE_LEG_EXTENSION = 33; // 0x21
    field public static final int EXERCISE_SEGMENT_TYPE_LEG_PRESS = 34; // 0x22
    field public static final int EXERCISE_SEGMENT_TYPE_LEG_RAISE = 35; // 0x23
    field public static final int EXERCISE_SEGMENT_TYPE_LUNGE = 36; // 0x24
    field public static final int EXERCISE_SEGMENT_TYPE_MOUNTAIN_CLIMBER = 37; // 0x25
    field public static final int EXERCISE_SEGMENT_TYPE_OTHER_WORKOUT = 38; // 0x26
    field public static final int EXERCISE_SEGMENT_TYPE_PAUSE = 39; // 0x27
    field public static final int EXERCISE_SEGMENT_TYPE_PILATES = 40; // 0x28
    field public static final int EXERCISE_SEGMENT_TYPE_PLANK = 41; // 0x29
    field public static final int EXERCISE_SEGMENT_TYPE_PULL_UP = 42; // 0x2a
    field public static final int EXERCISE_SEGMENT_TYPE_PUNCH = 43; // 0x2b
    field public static final int EXERCISE_SEGMENT_TYPE_REST = 44; // 0x2c
    field public static final int EXERCISE_SEGMENT_TYPE_ROWING_MACHINE = 45; // 0x2d
    field public static final int EXERCISE_SEGMENT_TYPE_RUNNING = 46; // 0x2e
    field public static final int EXERCISE_SEGMENT_TYPE_RUNNING_TREADMILL = 47; // 0x2f
    field public static final int EXERCISE_SEGMENT_TYPE_SHOULDER_PRESS = 48; // 0x30
    field public static final int EXERCISE_SEGMENT_TYPE_SINGLE_ARM_TRICEPS_EXTENSION = 49; // 0x31
    field public static final int EXERCISE_SEGMENT_TYPE_SIT_UP = 50; // 0x32
    field public static final int EXERCISE_SEGMENT_TYPE_SQUAT = 51; // 0x33
    field public static final int EXERCISE_SEGMENT_TYPE_STAIR_CLIMBING = 52; // 0x34
    field public static final int EXERCISE_SEGMENT_TYPE_STAIR_CLIMBING_MACHINE = 53; // 0x35
    field public static final int EXERCISE_SEGMENT_TYPE_STRETCHING = 54; // 0x36
    field public static final int EXERCISE_SEGMENT_TYPE_SWIMMING_BACKSTROKE = 55; // 0x37
    field public static final int EXERCISE_SEGMENT_TYPE_SWIMMING_BREASTSTROKE = 56; // 0x38
    field public static final int EXERCISE_SEGMENT_TYPE_SWIMMING_BUTTERFLY = 57; // 0x39
    field public static final int EXERCISE_SEGMENT_TYPE_SWIMMING_FREESTYLE = 58; // 0x3a
    field public static final int EXERCISE_SEGMENT_TYPE_SWIMMING_MIXED = 59; // 0x3b
    field public static final int EXERCISE_SEGMENT_TYPE_SWIMMING_OPEN_WATER = 60; // 0x3c
    field public static final int EXERCISE_SEGMENT_TYPE_SWIMMING_OTHER = 61; // 0x3d
    field public static final int EXERCISE_SEGMENT_TYPE_SWIMMING_POOL = 62; // 0x3e
    field public static final int EXERCISE_SEGMENT_TYPE_UNKNOWN = 0; // 0x0
    field public static final int EXERCISE_SEGMENT_TYPE_UPPER_TWIST = 63; // 0x3f
    field public static final int EXERCISE_SEGMENT_TYPE_WALKING = 64; // 0x40
    field public static final int EXERCISE_SEGMENT_TYPE_WEIGHTLIFTING = 65; // 0x41
    field public static final int EXERCISE_SEGMENT_TYPE_WHEELCHAIR = 66; // 0x42
    field public static final int EXERCISE_SEGMENT_TYPE_YOGA = 67; // 0x43
  }

  public static final class ExerciseSegment.Companion {
  }

  public final class ExerciseSessionRecord implements androidx.health.connect.client.records.Record {
    ctor public ExerciseSessionRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, int exerciseType);
    ctor public ExerciseSessionRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, int exerciseType, optional String? title);
    ctor public ExerciseSessionRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, int exerciseType, optional String? title, optional String? notes);
    ctor public ExerciseSessionRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, int exerciseType, optional String? title, optional String? notes, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    ctor public ExerciseSessionRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, int exerciseType, optional String? title, optional String? notes, optional androidx.health.connect.client.records.metadata.Metadata metadata, optional java.util.List<androidx.health.connect.client.records.ExerciseSegment> segments);
    ctor public ExerciseSessionRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, int exerciseType, optional String? title, optional String? notes, optional androidx.health.connect.client.records.metadata.Metadata metadata, optional java.util.List<androidx.health.connect.client.records.ExerciseSegment> segments, optional java.util.List<androidx.health.connect.client.records.ExerciseLap> laps);
    ctor public ExerciseSessionRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, int exerciseType, optional String? title, optional String? notes, optional androidx.health.connect.client.records.metadata.Metadata metadata, optional java.util.List<androidx.health.connect.client.records.ExerciseSegment> segments, optional java.util.List<androidx.health.connect.client.records.ExerciseLap> laps, optional androidx.health.connect.client.records.ExerciseRoute? exerciseRoute);
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.records.ExerciseRouteResult getExerciseRouteResult();
    method public int getExerciseType();
    method public java.util.List<androidx.health.connect.client.records.ExerciseLap> getLaps();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public String? getNotes();
    method public java.util.List<androidx.health.connect.client.records.ExerciseSegment> getSegments();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    method public String? getTitle();
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public final androidx.health.connect.client.records.ExerciseRouteResult exerciseRouteResult;
    property public final int exerciseType;
    property public final java.util.List<androidx.health.connect.client.records.ExerciseLap> laps;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public final String? notes;
    property public final java.util.List<androidx.health.connect.client.records.ExerciseSegment> segments;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    property public final String? title;
    field public static final androidx.health.connect.client.records.ExerciseSessionRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.time.Duration> EXERCISE_DURATION_TOTAL;
    field public static final int EXERCISE_TYPE_BADMINTON = 2; // 0x2
    field public static final int EXERCISE_TYPE_BASEBALL = 4; // 0x4
    field public static final int EXERCISE_TYPE_BASKETBALL = 5; // 0x5
    field public static final int EXERCISE_TYPE_BIKING = 8; // 0x8
    field public static final int EXERCISE_TYPE_BIKING_STATIONARY = 9; // 0x9
    field public static final int EXERCISE_TYPE_BOOT_CAMP = 10; // 0xa
    field public static final int EXERCISE_TYPE_BOXING = 11; // 0xb
    field public static final int EXERCISE_TYPE_CALISTHENICS = 13; // 0xd
    field public static final int EXERCISE_TYPE_CRICKET = 14; // 0xe
    field public static final int EXERCISE_TYPE_DANCING = 16; // 0x10
    field public static final int EXERCISE_TYPE_ELLIPTICAL = 25; // 0x19
    field public static final int EXERCISE_TYPE_EXERCISE_CLASS = 26; // 0x1a
    field public static final int EXERCISE_TYPE_FENCING = 27; // 0x1b
    field public static final int EXERCISE_TYPE_FOOTBALL_AMERICAN = 28; // 0x1c
    field public static final int EXERCISE_TYPE_FOOTBALL_AUSTRALIAN = 29; // 0x1d
    field public static final int EXERCISE_TYPE_FRISBEE_DISC = 31; // 0x1f
    field public static final int EXERCISE_TYPE_GOLF = 32; // 0x20
    field public static final int EXERCISE_TYPE_GUIDED_BREATHING = 33; // 0x21
    field public static final int EXERCISE_TYPE_GYMNASTICS = 34; // 0x22
    field public static final int EXERCISE_TYPE_HANDBALL = 35; // 0x23
    field public static final int EXERCISE_TYPE_HIGH_INTENSITY_INTERVAL_TRAINING = 36; // 0x24
    field public static final int EXERCISE_TYPE_HIKING = 37; // 0x25
    field public static final int EXERCISE_TYPE_ICE_HOCKEY = 38; // 0x26
    field public static final int EXERCISE_TYPE_ICE_SKATING = 39; // 0x27
    field public static final int EXERCISE_TYPE_MARTIAL_ARTS = 44; // 0x2c
    field public static final int EXERCISE_TYPE_OTHER_WORKOUT = 0; // 0x0
    field public static final int EXERCISE_TYPE_PADDLING = 46; // 0x2e
    field public static final int EXERCISE_TYPE_PARAGLIDING = 47; // 0x2f
    field public static final int EXERCISE_TYPE_PILATES = 48; // 0x30
    field public static final int EXERCISE_TYPE_RACQUETBALL = 50; // 0x32
    field public static final int EXERCISE_TYPE_ROCK_CLIMBING = 51; // 0x33
    field public static final int EXERCISE_TYPE_ROLLER_HOCKEY = 52; // 0x34
    field public static final int EXERCISE_TYPE_ROWING = 53; // 0x35
    field public static final int EXERCISE_TYPE_ROWING_MACHINE = 54; // 0x36
    field public static final int EXERCISE_TYPE_RUGBY = 55; // 0x37
    field public static final int EXERCISE_TYPE_RUNNING = 56; // 0x38
    field public static final int EXERCISE_TYPE_RUNNING_TREADMILL = 57; // 0x39
    field public static final int EXERCISE_TYPE_SAILING = 58; // 0x3a
    field public static final int EXERCISE_TYPE_SCUBA_DIVING = 59; // 0x3b
    field public static final int EXERCISE_TYPE_SKATING = 60; // 0x3c
    field public static final int EXERCISE_TYPE_SKIING = 61; // 0x3d
    field public static final int EXERCISE_TYPE_SNOWBOARDING = 62; // 0x3e
    field public static final int EXERCISE_TYPE_SNOWSHOEING = 63; // 0x3f
    field public static final int EXERCISE_TYPE_SOCCER = 64; // 0x40
    field public static final int EXERCISE_TYPE_SOFTBALL = 65; // 0x41
    field public static final int EXERCISE_TYPE_SQUASH = 66; // 0x42
    field public static final int EXERCISE_TYPE_STAIR_CLIMBING = 68; // 0x44
    field public static final int EXERCISE_TYPE_STAIR_CLIMBING_MACHINE = 69; // 0x45
    field public static final int EXERCISE_TYPE_STRENGTH_TRAINING = 70; // 0x46
    field public static final int EXERCISE_TYPE_STRETCHING = 71; // 0x47
    field public static final int EXERCISE_TYPE_SURFING = 72; // 0x48
    field public static final int EXERCISE_TYPE_SWIMMING_OPEN_WATER = 73; // 0x49
    field public static final int EXERCISE_TYPE_SWIMMING_POOL = 74; // 0x4a
    field public static final int EXERCISE_TYPE_TABLE_TENNIS = 75; // 0x4b
    field public static final int EXERCISE_TYPE_TENNIS = 76; // 0x4c
    field public static final int EXERCISE_TYPE_VOLLEYBALL = 78; // 0x4e
    field public static final int EXERCISE_TYPE_WALKING = 79; // 0x4f
    field public static final int EXERCISE_TYPE_WATER_POLO = 80; // 0x50
    field public static final int EXERCISE_TYPE_WEIGHTLIFTING = 81; // 0x51
    field public static final int EXERCISE_TYPE_WHEELCHAIR = 82; // 0x52
    field public static final int EXERCISE_TYPE_YOGA = 83; // 0x53
  }

  public static final class ExerciseSessionRecord.Companion {
  }

  public final class FloorsClimbedRecord implements androidx.health.connect.client.records.Record {
    ctor public FloorsClimbedRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, double floors, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public double getFloors();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public final double floors;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    field public static final androidx.health.connect.client.records.FloorsClimbedRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Double> FLOORS_CLIMBED_TOTAL;
  }

  public static final class FloorsClimbedRecord.Companion {
  }

  public final class HeartRateRecord implements androidx.health.connect.client.records.Record {
    ctor public HeartRateRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, java.util.List<androidx.health.connect.client.records.HeartRateRecord.Sample> samples, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.util.List<androidx.health.connect.client.records.HeartRateRecord.Sample> getSamples();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.util.List<androidx.health.connect.client.records.HeartRateRecord.Sample> samples;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Long> BPM_AVG;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Long> BPM_MAX;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Long> BPM_MIN;
    field public static final androidx.health.connect.client.records.HeartRateRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Long> MEASUREMENTS_COUNT;
  }

  public static final class HeartRateRecord.Companion {
  }

  public static final class HeartRateRecord.Sample {
    ctor public HeartRateRecord.Sample(java.time.Instant time, @IntRange(from=1L, to=300L) long beatsPerMinute);
    method public long getBeatsPerMinute();
    method public java.time.Instant getTime();
    property public final long beatsPerMinute;
    property public final java.time.Instant time;
  }

  public final class HeartRateVariabilityRmssdRecord implements androidx.health.connect.client.records.Record {
    ctor public HeartRateVariabilityRmssdRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, double heartRateVariabilityMillis, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public double getHeartRateVariabilityMillis();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final double heartRateVariabilityMillis;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
  }

  public final class HeightRecord implements androidx.health.connect.client.records.Record {
    ctor public HeightRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, androidx.health.connect.client.units.Length height, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.units.Length getHeight();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final androidx.health.connect.client.units.Length height;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
    field public static final androidx.health.connect.client.records.HeightRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Length> HEIGHT_AVG;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Length> HEIGHT_MAX;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Length> HEIGHT_MIN;
  }

  public static final class HeightRecord.Companion {
  }

  public final class HydrationRecord implements androidx.health.connect.client.records.Record {
    ctor public HydrationRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, androidx.health.connect.client.units.Volume volume, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    method public androidx.health.connect.client.units.Volume getVolume();
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    property public final androidx.health.connect.client.units.Volume volume;
    field public static final androidx.health.connect.client.records.HydrationRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Volume> VOLUME_TOTAL;
  }

  public static final class HydrationRecord.Companion {
  }

  public final class IntermenstrualBleedingRecord implements androidx.health.connect.client.records.Record {
    ctor public IntermenstrualBleedingRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
  }

  public final class LeanBodyMassRecord implements androidx.health.connect.client.records.Record {
    ctor public LeanBodyMassRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, androidx.health.connect.client.units.Mass mass, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.units.Mass getMass();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final androidx.health.connect.client.units.Mass mass;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
  }

  public final class MealType {
    field public static final androidx.health.connect.client.records.MealType INSTANCE;
    field public static final int MEAL_TYPE_BREAKFAST = 1; // 0x1
    field public static final int MEAL_TYPE_DINNER = 3; // 0x3
    field public static final int MEAL_TYPE_LUNCH = 2; // 0x2
    field public static final int MEAL_TYPE_SNACK = 4; // 0x4
    field public static final int MEAL_TYPE_UNKNOWN = 0; // 0x0
  }

  public final class MenstruationFlowRecord implements androidx.health.connect.client.records.Record {
    ctor public MenstruationFlowRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, optional int flow, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public int getFlow();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final int flow;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
    field public static final androidx.health.connect.client.records.MenstruationFlowRecord.Companion Companion;
    field public static final int FLOW_HEAVY = 3; // 0x3
    field public static final int FLOW_LIGHT = 1; // 0x1
    field public static final int FLOW_MEDIUM = 2; // 0x2
    field public static final int FLOW_UNKNOWN = 0; // 0x0
  }

  public static final class MenstruationFlowRecord.Companion {
  }

  public final class MenstruationPeriodRecord implements androidx.health.connect.client.records.Record {
    ctor public MenstruationPeriodRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
  }

  public final class NutritionRecord implements androidx.health.connect.client.records.Record {
    ctor public NutritionRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, optional androidx.health.connect.client.units.Mass? biotin, optional androidx.health.connect.client.units.Mass? caffeine, optional androidx.health.connect.client.units.Mass? calcium, optional androidx.health.connect.client.units.Energy? energy, optional androidx.health.connect.client.units.Energy? energyFromFat, optional androidx.health.connect.client.units.Mass? chloride, optional androidx.health.connect.client.units.Mass? cholesterol, optional androidx.health.connect.client.units.Mass? chromium, optional androidx.health.connect.client.units.Mass? copper, optional androidx.health.connect.client.units.Mass? dietaryFiber, optional androidx.health.connect.client.units.Mass? folate, optional androidx.health.connect.client.units.Mass? folicAcid, optional androidx.health.connect.client.units.Mass? iodine, optional androidx.health.connect.client.units.Mass? iron, optional androidx.health.connect.client.units.Mass? magnesium, optional androidx.health.connect.client.units.Mass? manganese, optional androidx.health.connect.client.units.Mass? molybdenum, optional androidx.health.connect.client.units.Mass? monounsaturatedFat, optional androidx.health.connect.client.units.Mass? niacin, optional androidx.health.connect.client.units.Mass? pantothenicAcid, optional androidx.health.connect.client.units.Mass? phosphorus, optional androidx.health.connect.client.units.Mass? polyunsaturatedFat, optional androidx.health.connect.client.units.Mass? potassium, optional androidx.health.connect.client.units.Mass? protein, optional androidx.health.connect.client.units.Mass? riboflavin, optional androidx.health.connect.client.units.Mass? saturatedFat, optional androidx.health.connect.client.units.Mass? selenium, optional androidx.health.connect.client.units.Mass? sodium, optional androidx.health.connect.client.units.Mass? sugar, optional androidx.health.connect.client.units.Mass? thiamin, optional androidx.health.connect.client.units.Mass? totalCarbohydrate, optional androidx.health.connect.client.units.Mass? totalFat, optional androidx.health.connect.client.units.Mass? transFat, optional androidx.health.connect.client.units.Mass? unsaturatedFat, optional androidx.health.connect.client.units.Mass? vitaminA, optional androidx.health.connect.client.units.Mass? vitaminB12, optional androidx.health.connect.client.units.Mass? vitaminB6, optional androidx.health.connect.client.units.Mass? vitaminC, optional androidx.health.connect.client.units.Mass? vitaminD, optional androidx.health.connect.client.units.Mass? vitaminE, optional androidx.health.connect.client.units.Mass? vitaminK, optional androidx.health.connect.client.units.Mass? zinc, optional String? name, optional int mealType, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.units.Mass? getBiotin();
    method public androidx.health.connect.client.units.Mass? getCaffeine();
    method public androidx.health.connect.client.units.Mass? getCalcium();
    method public androidx.health.connect.client.units.Mass? getChloride();
    method public androidx.health.connect.client.units.Mass? getCholesterol();
    method public androidx.health.connect.client.units.Mass? getChromium();
    method public androidx.health.connect.client.units.Mass? getCopper();
    method public androidx.health.connect.client.units.Mass? getDietaryFiber();
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.units.Energy? getEnergy();
    method public androidx.health.connect.client.units.Energy? getEnergyFromFat();
    method public androidx.health.connect.client.units.Mass? getFolate();
    method public androidx.health.connect.client.units.Mass? getFolicAcid();
    method public androidx.health.connect.client.units.Mass? getIodine();
    method public androidx.health.connect.client.units.Mass? getIron();
    method public androidx.health.connect.client.units.Mass? getMagnesium();
    method public androidx.health.connect.client.units.Mass? getManganese();
    method public int getMealType();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public androidx.health.connect.client.units.Mass? getMolybdenum();
    method public androidx.health.connect.client.units.Mass? getMonounsaturatedFat();
    method public String? getName();
    method public androidx.health.connect.client.units.Mass? getNiacin();
    method public androidx.health.connect.client.units.Mass? getPantothenicAcid();
    method public androidx.health.connect.client.units.Mass? getPhosphorus();
    method public androidx.health.connect.client.units.Mass? getPolyunsaturatedFat();
    method public androidx.health.connect.client.units.Mass? getPotassium();
    method public androidx.health.connect.client.units.Mass? getProtein();
    method public androidx.health.connect.client.units.Mass? getRiboflavin();
    method public androidx.health.connect.client.units.Mass? getSaturatedFat();
    method public androidx.health.connect.client.units.Mass? getSelenium();
    method public androidx.health.connect.client.units.Mass? getSodium();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    method public androidx.health.connect.client.units.Mass? getSugar();
    method public androidx.health.connect.client.units.Mass? getThiamin();
    method public androidx.health.connect.client.units.Mass? getTotalCarbohydrate();
    method public androidx.health.connect.client.units.Mass? getTotalFat();
    method public androidx.health.connect.client.units.Mass? getTransFat();
    method public androidx.health.connect.client.units.Mass? getUnsaturatedFat();
    method public androidx.health.connect.client.units.Mass? getVitaminA();
    method public androidx.health.connect.client.units.Mass? getVitaminB12();
    method public androidx.health.connect.client.units.Mass? getVitaminB6();
    method public androidx.health.connect.client.units.Mass? getVitaminC();
    method public androidx.health.connect.client.units.Mass? getVitaminD();
    method public androidx.health.connect.client.units.Mass? getVitaminE();
    method public androidx.health.connect.client.units.Mass? getVitaminK();
    method public androidx.health.connect.client.units.Mass? getZinc();
    property public final androidx.health.connect.client.units.Mass? biotin;
    property public final androidx.health.connect.client.units.Mass? caffeine;
    property public final androidx.health.connect.client.units.Mass? calcium;
    property public final androidx.health.connect.client.units.Mass? chloride;
    property public final androidx.health.connect.client.units.Mass? cholesterol;
    property public final androidx.health.connect.client.units.Mass? chromium;
    property public final androidx.health.connect.client.units.Mass? copper;
    property public final androidx.health.connect.client.units.Mass? dietaryFiber;
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public final androidx.health.connect.client.units.Energy? energy;
    property public final androidx.health.connect.client.units.Energy? energyFromFat;
    property public final androidx.health.connect.client.units.Mass? folate;
    property public final androidx.health.connect.client.units.Mass? folicAcid;
    property public final androidx.health.connect.client.units.Mass? iodine;
    property public final androidx.health.connect.client.units.Mass? iron;
    property public final androidx.health.connect.client.units.Mass? magnesium;
    property public final androidx.health.connect.client.units.Mass? manganese;
    property public final int mealType;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public final androidx.health.connect.client.units.Mass? molybdenum;
    property public final androidx.health.connect.client.units.Mass? monounsaturatedFat;
    property public final String? name;
    property public final androidx.health.connect.client.units.Mass? niacin;
    property public final androidx.health.connect.client.units.Mass? pantothenicAcid;
    property public final androidx.health.connect.client.units.Mass? phosphorus;
    property public final androidx.health.connect.client.units.Mass? polyunsaturatedFat;
    property public final androidx.health.connect.client.units.Mass? potassium;
    property public final androidx.health.connect.client.units.Mass? protein;
    property public final androidx.health.connect.client.units.Mass? riboflavin;
    property public final androidx.health.connect.client.units.Mass? saturatedFat;
    property public final androidx.health.connect.client.units.Mass? selenium;
    property public final androidx.health.connect.client.units.Mass? sodium;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    property public final androidx.health.connect.client.units.Mass? sugar;
    property public final androidx.health.connect.client.units.Mass? thiamin;
    property public final androidx.health.connect.client.units.Mass? totalCarbohydrate;
    property public final androidx.health.connect.client.units.Mass? totalFat;
    property public final androidx.health.connect.client.units.Mass? transFat;
    property public final androidx.health.connect.client.units.Mass? unsaturatedFat;
    property public final androidx.health.connect.client.units.Mass? vitaminA;
    property public final androidx.health.connect.client.units.Mass? vitaminB12;
    property public final androidx.health.connect.client.units.Mass? vitaminB6;
    property public final androidx.health.connect.client.units.Mass? vitaminC;
    property public final androidx.health.connect.client.units.Mass? vitaminD;
    property public final androidx.health.connect.client.units.Mass? vitaminE;
    property public final androidx.health.connect.client.units.Mass? vitaminK;
    property public final androidx.health.connect.client.units.Mass? zinc;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> BIOTIN_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> CAFFEINE_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> CALCIUM_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> CHLORIDE_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> CHOLESTEROL_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> CHROMIUM_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> COPPER_TOTAL;
    field public static final androidx.health.connect.client.records.NutritionRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> DIETARY_FIBER_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Energy> ENERGY_FROM_FAT_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Energy> ENERGY_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> FOLATE_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> FOLIC_ACID_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> IODINE_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> IRON_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> MAGNESIUM_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> MANGANESE_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> MOLYBDENUM_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> MONOUNSATURATED_FAT_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> NIACIN_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> PANTOTHENIC_ACID_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> PHOSPHORUS_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> POLYUNSATURATED_FAT_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> POTASSIUM_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> PROTEIN_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> RIBOFLAVIN_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> SATURATED_FAT_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> SELENIUM_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> SODIUM_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> SUGAR_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> THIAMIN_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> TOTAL_CARBOHYDRATE_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> TOTAL_FAT_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> TRANS_FAT_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> UNSATURATED_FAT_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> VITAMIN_A_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> VITAMIN_B12_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> VITAMIN_B6_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> VITAMIN_C_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> VITAMIN_D_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> VITAMIN_E_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> VITAMIN_K_TOTAL;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> ZINC_TOTAL;
  }

  public static final class NutritionRecord.Companion {
  }

  public final class OvulationTestRecord implements androidx.health.connect.client.records.Record {
    ctor public OvulationTestRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, int result, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public int getResult();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public final int result;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
    field public static final androidx.health.connect.client.records.OvulationTestRecord.Companion Companion;
    field public static final int RESULT_HIGH = 2; // 0x2
    field public static final int RESULT_INCONCLUSIVE = 0; // 0x0
    field public static final int RESULT_NEGATIVE = 3; // 0x3
    field public static final int RESULT_POSITIVE = 1; // 0x1
  }

  public static final class OvulationTestRecord.Companion {
  }

  public final class OxygenSaturationRecord implements androidx.health.connect.client.records.Record {
    ctor public OxygenSaturationRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, androidx.health.connect.client.units.Percentage percentage, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public androidx.health.connect.client.units.Percentage getPercentage();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public final androidx.health.connect.client.units.Percentage percentage;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
  }

  public final class PowerRecord implements androidx.health.connect.client.records.Record {
    ctor public PowerRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, java.util.List<androidx.health.connect.client.records.PowerRecord.Sample> samples, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.util.List<androidx.health.connect.client.records.PowerRecord.Sample> getSamples();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.util.List<androidx.health.connect.client.records.PowerRecord.Sample> samples;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    field public static final androidx.health.connect.client.records.PowerRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Power> POWER_AVG;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Power> POWER_MAX;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Power> POWER_MIN;
  }

  public static final class PowerRecord.Companion {
  }

  public static final class PowerRecord.Sample {
    ctor public PowerRecord.Sample(java.time.Instant time, androidx.health.connect.client.units.Power power);
    method public androidx.health.connect.client.units.Power getPower();
    method public java.time.Instant getTime();
    property public final androidx.health.connect.client.units.Power power;
    property public final java.time.Instant time;
  }

  public interface Record {
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    property public abstract androidx.health.connect.client.records.metadata.Metadata metadata;
  }

  public final class RespiratoryRateRecord implements androidx.health.connect.client.records.Record {
    ctor public RespiratoryRateRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, double rate, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public double getRate();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public final double rate;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
  }

  public final class RestingHeartRateRecord implements androidx.health.connect.client.records.Record {
    ctor public RestingHeartRateRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, long beatsPerMinute, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public long getBeatsPerMinute();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final long beatsPerMinute;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Long> BPM_AVG;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Long> BPM_MAX;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Long> BPM_MIN;
    field public static final androidx.health.connect.client.records.RestingHeartRateRecord.Companion Companion;
  }

  public static final class RestingHeartRateRecord.Companion {
  }

  public final class SexualActivityRecord implements androidx.health.connect.client.records.Record {
    ctor public SexualActivityRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, optional int protectionUsed, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public int getProtectionUsed();
    method public java.time.Instant getTime();
    method public java.time.ZoneOffset? getZoneOffset();
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public final int protectionUsed;
    property public java.time.Instant time;
    property public java.time.ZoneOffset? zoneOffset;
    field public static final androidx.health.connect.client.records.SexualActivityRecord.Companion Companion;
    field public static final int PROTECTION_USED_PROTECTED = 1; // 0x1
    field public static final int PROTECTION_USED_UNKNOWN = 0; // 0x0
    field public static final int PROTECTION_USED_UNPROTECTED = 2; // 0x2
  }

  public static final class SexualActivityRecord.Companion {
  }

  public final class SleepSessionRecord implements androidx.health.connect.client.records.Record {
    ctor public SleepSessionRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, optional String? title, optional String? notes, optional java.util.List<androidx.health.connect.client.records.SleepSessionRecord.Stage> stages, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public String? getNotes();
    method public java.util.List<androidx.health.connect.client.records.SleepSessionRecord.Stage> getStages();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    method public String? getTitle();
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public final String? notes;
    property public final java.util.List<androidx.health.connect.client.records.SleepSessionRecord.Stage> stages;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    property public final String? title;
    field public static final androidx.health.connect.client.records.SleepSessionRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.time.Duration> SLEEP_DURATION_TOTAL;
    field public static final int STAGE_TYPE_AWAKE = 1; // 0x1
    field public static final int STAGE_TYPE_AWAKE_IN_BED = 7; // 0x7
    field public static final int STAGE_TYPE_DEEP = 5; // 0x5
    field public static final int STAGE_TYPE_LIGHT = 4; // 0x4
    field public static final int STAGE_TYPE_OUT_OF_BED = 3; // 0x3
    field public static final int STAGE_TYPE_REM = 6; // 0x6
    field public static final int STAGE_TYPE_SLEEPING = 2; // 0x2
    field public static final int STAGE_TYPE_UNKNOWN = 0; // 0x0
  }

  public static final class SleepSessionRecord.Companion {
  }

  public static final class SleepSessionRecord.Stage {
    ctor public SleepSessionRecord.Stage(java.time.Instant startTime, java.time.Instant endTime, int stage);
    method public java.time.Instant getEndTime();
    method public int getStage();
    method public java.time.Instant getStartTime();
    property public final java.time.Instant endTime;
    property public final int stage;
    property public final java.time.Instant startTime;
  }

  public final class SpeedRecord implements androidx.health.connect.client.records.Record {
    ctor public SpeedRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, java.util.List<androidx.health.connect.client.records.SpeedRecord.Sample> samples, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.util.List<androidx.health.connect.client.records.SpeedRecord.Sample> getSamples();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.util.List<androidx.health.connect.client.records.SpeedRecord.Sample> samples;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    field public static final androidx.health.connect.client.records.SpeedRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Velocity> SPEED_AVG;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Velocity> SPEED_MAX;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Velocity> SPEED_MIN;
  }

  public static final class SpeedRecord.Companion {
  }

  public static final class SpeedRecord.Sample {
    ctor public SpeedRecord.Sample(java.time.Instant time, androidx.health.connect.client.units.Velocity speed);
    method public androidx.health.connect.client.units.Velocity getSpeed();
    method public java.time.Instant getTime();
    property public final androidx.health.connect.client.units.Velocity speed;
    property public final java.time.Instant time;
  }

  public final class StepsCadenceRecord implements androidx.health.connect.client.records.Record {
    ctor public StepsCadenceRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, java.util.List<androidx.health.connect.client.records.StepsCadenceRecord.Sample> samples, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.util.List<androidx.health.connect.client.records.StepsCadenceRecord.Sample> getSamples();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.util.List<androidx.health.connect.client.records.StepsCadenceRecord.Sample> samples;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    field public static final androidx.health.connect.client.records.StepsCadenceRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Double> RATE_AVG;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Double> RATE_MAX;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Double> RATE_MIN;
  }

  public static final class StepsCadenceRecord.Companion {
  }

  public static final class StepsCadenceRecord.Sample {
    ctor public StepsCadenceRecord.Sample(java.time.Instant time, @FloatRange(from=0.0, to=10000.0) double rate);
    method public double getRate();
    method public java.time.Instant getTime();
    property public final double rate;
    property public final java.time.Instant time;
  }

  public final class StepsRecord implements androidx.health.connect.client.records.Record {
    ctor public StepsRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, @IntRange(from=1L, to=1000000L) long count, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public long getCount();
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public final long count;
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Long> COUNT_TOTAL;
    field public static final androidx.health.connect.client.records.StepsRecord.Companion Companion;
  }

  public static final class StepsRecord.Companion {
  }

  public final class TotalCaloriesBurnedRecord implements androidx.health.connect.client.records.Record {
    ctor public TotalCaloriesBurnedRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, androidx.health.connect.client.units.Energy energy, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.units.Energy getEnergy();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public final androidx.health.connect.client.units.Energy energy;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    field public static final androidx.health.connect.client.records.TotalCaloriesBurnedRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Energy> ENERGY_TOTAL;
  }

  public static final class TotalCaloriesBurnedRecord.Companion {
  }

  public final class Vo2MaxRecord implements androidx.health.connect.client.records.Record {
    ctor public Vo2MaxRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, double vo2MillilitersPerMinuteKilogram, optional int measurementMethod, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public int getMeasurementMethod();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getTime();
    method public double getVo2MillilitersPerMinuteKilogram();
    method public java.time.ZoneOffset? getZoneOffset();
    property public final int measurementMethod;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant time;
    property public final double vo2MillilitersPerMinuteKilogram;
    property public java.time.ZoneOffset? zoneOffset;
    field public static final androidx.health.connect.client.records.Vo2MaxRecord.Companion Companion;
    field public static final int MEASUREMENT_METHOD_COOPER_TEST = 3; // 0x3
    field public static final int MEASUREMENT_METHOD_HEART_RATE_RATIO = 2; // 0x2
    field public static final int MEASUREMENT_METHOD_METABOLIC_CART = 1; // 0x1
    field public static final int MEASUREMENT_METHOD_MULTISTAGE_FITNESS_TEST = 4; // 0x4
    field public static final int MEASUREMENT_METHOD_OTHER = 0; // 0x0
    field public static final int MEASUREMENT_METHOD_ROCKPORT_FITNESS_TEST = 5; // 0x5
  }

  public static final class Vo2MaxRecord.Companion {
  }

  public final class WeightRecord implements androidx.health.connect.client.records.Record {
    ctor public WeightRecord(java.time.Instant time, java.time.ZoneOffset? zoneOffset, androidx.health.connect.client.units.Mass weight, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getTime();
    method public androidx.health.connect.client.units.Mass getWeight();
    method public java.time.ZoneOffset? getZoneOffset();
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant time;
    property public final androidx.health.connect.client.units.Mass weight;
    property public java.time.ZoneOffset? zoneOffset;
    field public static final androidx.health.connect.client.records.WeightRecord.Companion Companion;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> WEIGHT_AVG;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> WEIGHT_MAX;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<androidx.health.connect.client.units.Mass> WEIGHT_MIN;
  }

  public static final class WeightRecord.Companion {
  }

  public final class WheelchairPushesRecord implements androidx.health.connect.client.records.Record {
    ctor public WheelchairPushesRecord(java.time.Instant startTime, java.time.ZoneOffset? startZoneOffset, java.time.Instant endTime, java.time.ZoneOffset? endZoneOffset, long count, optional androidx.health.connect.client.records.metadata.Metadata metadata);
    method public long getCount();
    method public java.time.Instant getEndTime();
    method public java.time.ZoneOffset? getEndZoneOffset();
    method public androidx.health.connect.client.records.metadata.Metadata getMetadata();
    method public java.time.Instant getStartTime();
    method public java.time.ZoneOffset? getStartZoneOffset();
    property public final long count;
    property public java.time.Instant endTime;
    property public java.time.ZoneOffset? endZoneOffset;
    property public androidx.health.connect.client.records.metadata.Metadata metadata;
    property public java.time.Instant startTime;
    property public java.time.ZoneOffset? startZoneOffset;
    field public static final androidx.health.connect.client.aggregate.AggregateMetric<java.lang.Long> COUNT_TOTAL;
    field public static final androidx.health.connect.client.records.WheelchairPushesRecord.Companion Companion;
  }

  public static final class WheelchairPushesRecord.Companion {
  }

}

package androidx.health.connect.client.records.metadata {

  public final class DataOrigin {
    ctor public DataOrigin(String packageName);
    method public String getPackageName();
    property public final String packageName;
  }

  public final class Device {
    ctor public Device(optional String? manufacturer, optional String? model, optional int type);
    method public String? getManufacturer();
    method public String? getModel();
    method public int getType();
    property public final String? manufacturer;
    property public final String? model;
    property public final int type;
    field public static final androidx.health.connect.client.records.metadata.Device.Companion Companion;
    field public static final int TYPE_CHEST_STRAP = 7; // 0x7
    field public static final int TYPE_FITNESS_BAND = 6; // 0x6
    field public static final int TYPE_HEAD_MOUNTED = 5; // 0x5
    field public static final int TYPE_PHONE = 2; // 0x2
    field public static final int TYPE_RING = 4; // 0x4
    field public static final int TYPE_SCALE = 3; // 0x3
    field public static final int TYPE_SMART_DISPLAY = 8; // 0x8
    field public static final int TYPE_UNKNOWN = 0; // 0x0
    field public static final int TYPE_WATCH = 1; // 0x1
  }

  public static final class Device.Companion {
  }

  public final class Metadata {
    ctor public Metadata(optional String id, optional androidx.health.connect.client.records.metadata.DataOrigin dataOrigin, optional java.time.Instant lastModifiedTime, optional String? clientRecordId, optional long clientRecordVersion, optional androidx.health.connect.client.records.metadata.Device? device, optional int recordingMethod);
    method public String? getClientRecordId();
    method public long getClientRecordVersion();
    method public androidx.health.connect.client.records.metadata.DataOrigin getDataOrigin();
    method public androidx.health.connect.client.records.metadata.Device? getDevice();
    method public String getId();
    method public java.time.Instant getLastModifiedTime();
    method public int getRecordingMethod();
    property public final String? clientRecordId;
    property public final long clientRecordVersion;
    property public final androidx.health.connect.client.records.metadata.DataOrigin dataOrigin;
    property public final androidx.health.connect.client.records.metadata.Device? device;
    property public final String id;
    property public final java.time.Instant lastModifiedTime;
    property public final int recordingMethod;
    field public static final androidx.health.connect.client.records.metadata.Metadata.Companion Companion;
    field public static final int RECORDING_METHOD_ACTIVELY_RECORDED = 1; // 0x1
    field public static final int RECORDING_METHOD_AUTOMATICALLY_RECORDED = 2; // 0x2
    field public static final int RECORDING_METHOD_MANUAL_ENTRY = 3; // 0x3
    field public static final int RECORDING_METHOD_UNKNOWN = 0; // 0x0
  }

  public static final class Metadata.Companion {
  }

}

package androidx.health.connect.client.request {

  public final class AggregateGroupByDurationRequest {
    ctor public AggregateGroupByDurationRequest(java.util.Set<? extends androidx.health.connect.client.aggregate.AggregateMetric<?>> metrics, androidx.health.connect.client.time.TimeRangeFilter timeRangeFilter, java.time.Duration timeRangeSlicer, optional java.util.Set<androidx.health.connect.client.records.metadata.DataOrigin> dataOriginFilter);
  }

  public final class AggregateGroupByPeriodRequest {
    ctor public AggregateGroupByPeriodRequest(java.util.Set<? extends androidx.health.connect.client.aggregate.AggregateMetric<?>> metrics, androidx.health.connect.client.time.TimeRangeFilter timeRangeFilter, java.time.Period timeRangeSlicer, optional java.util.Set<androidx.health.connect.client.records.metadata.DataOrigin> dataOriginFilter);
  }

  public final class AggregateRequest {
    ctor public AggregateRequest(java.util.Set<? extends androidx.health.connect.client.aggregate.AggregateMetric<?>> metrics, androidx.health.connect.client.time.TimeRangeFilter timeRangeFilter, optional java.util.Set<androidx.health.connect.client.records.metadata.DataOrigin> dataOriginFilter);
  }

  public final class ChangesTokenRequest {
    ctor public ChangesTokenRequest(java.util.Set<? extends kotlin.reflect.KClass<? extends androidx.health.connect.client.records.Record>> recordTypes, optional java.util.Set<androidx.health.connect.client.records.metadata.DataOrigin> dataOriginFilters);
  }

  public final class ReadRecordsRequest<T extends androidx.health.connect.client.records.Record> {
    ctor public ReadRecordsRequest(kotlin.reflect.KClass<T> recordType, androidx.health.connect.client.time.TimeRangeFilter timeRangeFilter, optional java.util.Set<androidx.health.connect.client.records.metadata.DataOrigin> dataOriginFilter, optional boolean ascendingOrder, optional int pageSize, optional String? pageToken);
  }

  public final class ReadRecordsRequestKt {
    method public static inline <reified T extends androidx.health.connect.client.records.Record> androidx.health.connect.client.request.ReadRecordsRequest<T> ReadRecordsRequest(androidx.health.connect.client.time.TimeRangeFilter timeRangeFilter, optional java.util.Set<androidx.health.connect.client.records.metadata.DataOrigin> dataOriginFilter, optional boolean ascendingOrder, optional int pageSize, optional String? pageToken);
  }

}

package androidx.health.connect.client.response {

  public final class ChangesResponse {
    method public java.util.List<androidx.health.connect.client.changes.Change> getChanges();
    method public boolean getChangesTokenExpired();
    method public String getNextChangesToken();
    method public boolean hasMore();
    property public final java.util.List<androidx.health.connect.client.changes.Change> changes;
    property public final boolean changesTokenExpired;
    property public final boolean hasMore;
    property public final String nextChangesToken;
  }

  public final class InsertRecordsResponse {
    method public java.util.List<java.lang.String> getRecordIdsList();
    property public final java.util.List<java.lang.String> recordIdsList;
  }

  public final class ReadRecordResponse<T extends androidx.health.connect.client.records.Record> {
    method public T getRecord();
    property public final T record;
  }

  public final class ReadRecordsResponse<T extends androidx.health.connect.client.records.Record> {
    method public String? getPageToken();
    method public java.util.List<T> getRecords();
    property public final String? pageToken;
    property public final java.util.List<T> records;
  }

}

package androidx.health.connect.client.time {

  public final class TimeRangeFilter {
    method public static androidx.health.connect.client.time.TimeRangeFilter after(java.time.Instant startTime);
    method public static androidx.health.connect.client.time.TimeRangeFilter after(java.time.LocalDateTime startTime);
    method public static androidx.health.connect.client.time.TimeRangeFilter before(java.time.Instant endTime);
    method public static androidx.health.connect.client.time.TimeRangeFilter before(java.time.LocalDateTime endTime);
    method public static androidx.health.connect.client.time.TimeRangeFilter between(java.time.Instant startTime, java.time.Instant endTime);
    method public static androidx.health.connect.client.time.TimeRangeFilter between(java.time.LocalDateTime startTime, java.time.LocalDateTime endTime);
    field public static final androidx.health.connect.client.time.TimeRangeFilter.Companion Companion;
  }

  public static final class TimeRangeFilter.Companion {
    method public androidx.health.connect.client.time.TimeRangeFilter after(java.time.Instant startTime);
    method public androidx.health.connect.client.time.TimeRangeFilter after(java.time.LocalDateTime startTime);
    method public androidx.health.connect.client.time.TimeRangeFilter before(java.time.Instant endTime);
    method public androidx.health.connect.client.time.TimeRangeFilter before(java.time.LocalDateTime endTime);
    method public androidx.health.connect.client.time.TimeRangeFilter between(java.time.Instant startTime, java.time.Instant endTime);
    method public androidx.health.connect.client.time.TimeRangeFilter between(java.time.LocalDateTime startTime, java.time.LocalDateTime endTime);
  }

}

package androidx.health.connect.client.units {

  public final class BloodGlucose implements java.lang.Comparable<androidx.health.connect.client.units.BloodGlucose> {
    method public int compareTo(androidx.health.connect.client.units.BloodGlucose other);
    method public double getMilligramsPerDeciliter();
    method public double getMillimolesPerLiter();
    method public static androidx.health.connect.client.units.BloodGlucose milligramsPerDeciliter(double value);
    method public static androidx.health.connect.client.units.BloodGlucose millimolesPerLiter(double value);
    property public final double inMilligramsPerDeciliter;
    property public final double inMillimolesPerLiter;
    field public static final androidx.health.connect.client.units.BloodGlucose.Companion Companion;
  }

  public static final class BloodGlucose.Companion {
    method public androidx.health.connect.client.units.BloodGlucose milligramsPerDeciliter(double value);
    method public androidx.health.connect.client.units.BloodGlucose millimolesPerLiter(double value);
  }

  public final class Energy implements java.lang.Comparable<androidx.health.connect.client.units.Energy> {
    method public static androidx.health.connect.client.units.Energy calories(double value);
    method public int compareTo(androidx.health.connect.client.units.Energy other);
    method public double getCalories();
    method public double getJoules();
    method public double getKilocalories();
    method public double getKilojoules();
    method public static androidx.health.connect.client.units.Energy joules(double value);
    method public static androidx.health.connect.client.units.Energy kilocalories(double value);
    method public static androidx.health.connect.client.units.Energy kilojoules(double value);
    property public final double inCalories;
    property public final double inJoules;
    property public final double inKilocalories;
    property public final double inKilojoules;
    field public static final androidx.health.connect.client.units.Energy.Companion Companion;
  }

  public static final class Energy.Companion {
    method public androidx.health.connect.client.units.Energy calories(double value);
    method public androidx.health.connect.client.units.Energy joules(double value);
    method public androidx.health.connect.client.units.Energy kilocalories(double value);
    method public androidx.health.connect.client.units.Energy kilojoules(double value);
  }

  public final class Length implements java.lang.Comparable<androidx.health.connect.client.units.Length> {
    method public int compareTo(androidx.health.connect.client.units.Length other);
    method public static androidx.health.connect.client.units.Length feet(double value);
    method public double getFeet();
    method public double getInches();
    method public double getKilometers();
    method public double getMeters();
    method public double getMiles();
    method public static androidx.health.connect.client.units.Length inches(double value);
    method public static androidx.health.connect.client.units.Length kilometers(double value);
    method public static androidx.health.connect.client.units.Length meters(double value);
    method public static androidx.health.connect.client.units.Length miles(double value);
    property public final double inFeet;
    property public final double inInches;
    property public final double inKilometers;
    property public final double inMeters;
    property public final double inMiles;
    field public static final androidx.health.connect.client.units.Length.Companion Companion;
  }

  public static final class Length.Companion {
    method public androidx.health.connect.client.units.Length feet(double value);
    method public androidx.health.connect.client.units.Length inches(double value);
    method public androidx.health.connect.client.units.Length kilometers(double value);
    method public androidx.health.connect.client.units.Length meters(double value);
    method public androidx.health.connect.client.units.Length miles(double value);
  }

  public final class Mass implements java.lang.Comparable<androidx.health.connect.client.units.Mass> {
    method public int compareTo(androidx.health.connect.client.units.Mass other);
    method public double getGrams();
    method public double getKilograms();
    method public double getMicrograms();
    method public double getMilligrams();
    method public double getOunces();
    method public double getPounds();
    method public static androidx.health.connect.client.units.Mass grams(double value);
    method public static androidx.health.connect.client.units.Mass kilograms(double value);
    method public static androidx.health.connect.client.units.Mass micrograms(double value);
    method public static androidx.health.connect.client.units.Mass milligrams(double value);
    method public static androidx.health.connect.client.units.Mass ounces(double value);
    method public static androidx.health.connect.client.units.Mass pounds(double value);
    property public final double inGrams;
    property public final double inKilograms;
    property public final double inMicrograms;
    property public final double inMilligrams;
    property public final double inOunces;
    property public final double inPounds;
    field public static final androidx.health.connect.client.units.Mass.Companion Companion;
  }

  public static final class Mass.Companion {
    method public androidx.health.connect.client.units.Mass grams(double value);
    method public androidx.health.connect.client.units.Mass kilograms(double value);
    method public androidx.health.connect.client.units.Mass micrograms(double value);
    method public androidx.health.connect.client.units.Mass milligrams(double value);
    method public androidx.health.connect.client.units.Mass ounces(double value);
    method public androidx.health.connect.client.units.Mass pounds(double value);
  }

  public final class Percentage implements java.lang.Comparable<androidx.health.connect.client.units.Percentage> {
    ctor public Percentage(double value);
    method public int compareTo(androidx.health.connect.client.units.Percentage other);
    method public double getValue();
    property public final double value;
  }

  public final class Power implements java.lang.Comparable<androidx.health.connect.client.units.Power> {
    method public int compareTo(androidx.health.connect.client.units.Power other);
    method public double getKilocaloriesPerDay();
    method public double getWatts();
    method public static androidx.health.connect.client.units.Power kilocaloriesPerDay(double value);
    method public static androidx.health.connect.client.units.Power watts(double value);
    property public final double inKilocaloriesPerDay;
    property public final double inWatts;
    field public static final androidx.health.connect.client.units.Power.Companion Companion;
  }

  public static final class Power.Companion {
    method public androidx.health.connect.client.units.Power kilocaloriesPerDay(double value);
    method public androidx.health.connect.client.units.Power watts(double value);
  }

  public final class Pressure implements java.lang.Comparable<androidx.health.connect.client.units.Pressure> {
    method public int compareTo(androidx.health.connect.client.units.Pressure other);
    method public double getMillimetersOfMercury();
    method public static androidx.health.connect.client.units.Pressure millimetersOfMercury(double value);
    property public final double inMillimetersOfMercury;
    field public static final androidx.health.connect.client.units.Pressure.Companion Companion;
  }

  public static final class Pressure.Companion {
    method public androidx.health.connect.client.units.Pressure millimetersOfMercury(double value);
  }

  public final class Temperature implements java.lang.Comparable<androidx.health.connect.client.units.Temperature> {
    method public static androidx.health.connect.client.units.Temperature celsius(double value);
    method public int compareTo(androidx.health.connect.client.units.Temperature other);
    method public static androidx.health.connect.client.units.Temperature fahrenheit(double value);
    method public double getCelsius();
    method public double getFahrenheit();
    property public final double inCelsius;
    property public final double inFahrenheit;
    field public static final androidx.health.connect.client.units.Temperature.Companion Companion;
  }

  public static final class Temperature.Companion {
    method public androidx.health.connect.client.units.Temperature celsius(double value);
    method public androidx.health.connect.client.units.Temperature fahrenheit(double value);
  }

  public final class Velocity implements java.lang.Comparable<androidx.health.connect.client.units.Velocity> {
    method public int compareTo(androidx.health.connect.client.units.Velocity other);
    method public double getKilometersPerHour();
    method public double getMetersPerSecond();
    method public double getMilesPerHour();
    method public static androidx.health.connect.client.units.Velocity kilometersPerHour(double value);
    method public static androidx.health.connect.client.units.Velocity metersPerSecond(double value);
    method public static androidx.health.connect.client.units.Velocity milesPerHour(double value);
    property public final double inKilometersPerHour;
    property public final double inMetersPerSecond;
    property public final double inMilesPerHour;
    field public static final androidx.health.connect.client.units.Velocity.Companion Companion;
  }

  public static final class Velocity.Companion {
    method public androidx.health.connect.client.units.Velocity kilometersPerHour(double value);
    method public androidx.health.connect.client.units.Velocity metersPerSecond(double value);
    method public androidx.health.connect.client.units.Velocity milesPerHour(double value);
  }

  public final class Volume implements java.lang.Comparable<androidx.health.connect.client.units.Volume> {
    method public int compareTo(androidx.health.connect.client.units.Volume other);
    method public static androidx.health.connect.client.units.Volume fluidOuncesUs(double value);
    method public double getFluidOuncesUs();
    method public double getLiters();
    method public double getMilliliters();
    method public static androidx.health.connect.client.units.Volume liters(double value);
    method public static androidx.health.connect.client.units.Volume milliliters(double value);
    property public final double inFluidOuncesUs;
    property public final double inLiters;
    property public final double inMilliliters;
    field public static final androidx.health.connect.client.units.Volume.Companion Companion;
  }

  public static final class Volume.Companion {
    method public androidx.health.connect.client.units.Volume fluidOuncesUs(double value);
    method public androidx.health.connect.client.units.Volume liters(double value);
    method public androidx.health.connect.client.units.Volume milliliters(double value);
  }

}

