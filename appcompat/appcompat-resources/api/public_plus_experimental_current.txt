// Signature format: 4.0
package androidx.appcompat.content.res {

  public final class AppCompatResources {
    method public static android.content.res.ColorStateList! getColorStateList(android.content.Context, @ColorRes int);
    method public static android.graphics.drawable.Drawable? getDrawable(android.content.Context, @DrawableRes int);
  }

}

package androidx.appcompat.graphics.drawable {

  public class AnimatedStateListDrawableCompat extends androidx.appcompat.graphics.drawable.StateListDrawableCompat {
    ctor public AnimatedStateListDrawableCompat();
    method public void addState(int[], android.graphics.drawable.Drawable, int);
    method public <T extends android.graphics.drawable.Drawable & android.graphics.drawable.Animatable> void addTransition(int, int, T, boolean);
    method public static androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat? create(android.content.Context, @DrawableRes int, android.content.res.Resources.Theme?);
    method public static androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources.Theme?) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException;
  }

  public class DrawableContainerCompat extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable.Callback {
    ctor public DrawableContainerCompat();
    method public void draw(android.graphics.Canvas);
    method public final android.graphics.drawable.Drawable.ConstantState! getConstantState();
    method public int getOpacity();
    method public void invalidateDrawable(android.graphics.drawable.Drawable);
    method public void scheduleDrawable(android.graphics.drawable.Drawable, Runnable, long);
    method public void setAlpha(int);
    method public void setColorFilter(android.graphics.ColorFilter!);
    method public void setDither(boolean);
    method public void setEnterFadeDuration(int);
    method public void setExitFadeDuration(int);
    method public void unscheduleDrawable(android.graphics.drawable.Drawable, Runnable);
  }

  public class DrawableWrapperCompat extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable.Callback {
    ctor public DrawableWrapperCompat(android.graphics.drawable.Drawable!);
    method public void draw(android.graphics.Canvas!);
    method public android.graphics.drawable.Drawable? getDrawable();
    method public int getOpacity();
    method public void invalidateDrawable(android.graphics.drawable.Drawable!);
    method public void scheduleDrawable(android.graphics.drawable.Drawable!, Runnable!, long);
    method public void setAlpha(int);
    method public void setColorFilter(android.graphics.ColorFilter!);
    method public void setDither(boolean);
    method public void setDrawable(android.graphics.drawable.Drawable?);
    method public void unscheduleDrawable(android.graphics.drawable.Drawable!, Runnable!);
  }

  public class StateListDrawableCompat extends androidx.appcompat.graphics.drawable.DrawableContainerCompat {
    ctor public StateListDrawableCompat();
    method public void addState(int[]!, android.graphics.drawable.Drawable!);
    method public void inflate(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources.Theme?) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException;
  }

}

