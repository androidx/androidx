import androidx.build.LibraryGroups
import androidx.build.LibraryVersions
import androidx.build.Publish

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("kotlin-android")
    id("kotlin-kapt")
}

dependencies {
    api(project(":annotation:annotation"))
    api(project(":core:core"))

    implementation(project(":emoji2:emoji2"))
    implementation(project(":emoji2:emoji2-views-helper"))
    implementation("androidx.collection:collection:1.0.0")
    api("androidx.cursoradapter:cursoradapter:1.0.0")
    api("androidx.activity:activity:1.2.4")
    api("androidx.fragment:fragment:1.3.6")
    api(project(":appcompat:appcompat-resources"))
    api("androidx.drawerlayout:drawerlayout:1.0.0")
    implementation("androidx.lifecycle:lifecycle-runtime:2.3.1")
    implementation("androidx.lifecycle:lifecycle-viewmodel:2.3.1")
    implementation(project(":resourceinspection:resourceinspection-annotation"))
    api("androidx.savedstate:savedstate:1.1.0")

    kapt(project(":resourceinspection:resourceinspection-processor"))

    androidTestImplementation(libs.kotlinStdlib)
    androidTestImplementation(libs.testExtJunit)
    androidTestImplementation(libs.testCore)
    androidTestImplementation(libs.testRunner)
    androidTestImplementation(libs.testRules)
    androidTestImplementation(libs.testUiautomator)
    androidTestImplementation(libs.truth)
    androidTestImplementation(libs.espressoCore, excludes.espresso)
    androidTestImplementation(libs.mockitoCore, excludes.bytebuddy) // DexMaker has it's own MockMaker
    androidTestImplementation(libs.dexmakerMockito, excludes.bytebuddy) // DexMaker has it's own MockMaker
    androidTestImplementation("androidx.lifecycle:lifecycle-runtime-testing:2.3.1" )
    androidTestImplementation(project(":internal-testutils-appcompat"), {
        exclude group: "androidx.appcompat", module: "appcompat"
        exclude group: "androidx.core", module: "core"
    })
    androidTestImplementation(libs.multidex)

    testImplementation(libs.kotlinStdlib)
    testImplementation(libs.testCore)
    testImplementation(libs.junit)
    testImplementation(libs.robolectric)

    lintPublish project(":appcompat:appcompat-lint")
}

android {
    defaultConfig {
        // This disables the builds tools automatic vector -> PNG generation
        generatedDensities = []
        multiDexEnabled = true
    }

    sourceSets {
        main.res.srcDirs += "src/main/res-public"
    }

    aaptOptions {
        additionalParameters "--no-version-vectors"
        noCompress "ttf"
    }

    testOptions {
        animationsDisabled = true

        unitTests {
            includeAndroidResources = true
        }
    }

    buildTypes.all {
        consumerProguardFiles("proguard-rules.pro")
    }

    useLibrary "android.test.runner"
    useLibrary "android.test.base"
    useLibrary "android.test.mock"
}

androidx {
    name = "Android AppCompat Library"
    publish = Publish.SNAPSHOT_AND_RELEASE
    mavenVersion = LibraryVersions.APPCOMPAT
    mavenGroup = LibraryGroups.APPCOMPAT
    inceptionYear = "2011"
    description = "The Support Library is a static library that you can add to your Android application in order to use APIs that are either not available for older platform versions or utility APIs that aren\'t a part of the framework APIs. Compatible on devices running API 14 or later."
    failOnDeprecationWarnings = false
}
