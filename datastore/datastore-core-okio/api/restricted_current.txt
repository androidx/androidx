// Signature format: 4.0
package androidx.datastore.core.okio {

  public interface OkioSerializer<T> {
    method public T getDefaultValue();
    method public suspend Object? readFrom(okio.BufferedSource source, kotlin.coroutines.Continuation<? super T>);
    method public suspend Object? writeTo(T t, okio.BufferedSink sink, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    property public abstract T defaultValue;
  }

  public final class OkioStorage<T> implements androidx.datastore.core.Storage<T> {
    ctor public OkioStorage(okio.FileSystem fileSystem, androidx.datastore.core.okio.OkioSerializer<T> serializer, optional kotlin.jvm.functions.Function2<? super okio.Path,? super okio.FileSystem,? extends androidx.datastore.core.InterProcessCoordinator> coordinatorProducer, kotlin.jvm.functions.Function0<okio.Path> producePath);
    method public androidx.datastore.core.StorageConnection<T> createConnection();
  }

  public final class OkioStorageKt {
    method public static androidx.datastore.core.InterProcessCoordinator createSingleProcessCoordinator(okio.Path path);
  }

}

