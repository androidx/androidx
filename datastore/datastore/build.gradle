/*
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import androidx.build.KmpPlatformsKt
import androidx.build.LibraryType

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
}

def enableNative = KmpPlatformsKt.enableNative(project)

android {
    namespace "androidx.datastore.datastore"
}

androidXMultiplatform {
    android()

    sourceSets {
        androidMain {
            dependencies {
                api(libs.kotlinStdlib)
                api(libs.kotlinCoroutinesCore)
                api("androidx.annotation:annotation:1.2.0")
                api(project(":datastore:datastore-core"))
                api(project(":datastore:datastore-core-okio"))
            }

        }
        androidAndroidTest {
            dependencies {
                implementation(libs.junit)
                implementation(libs.kotlinCoroutinesTest)
                implementation(libs.truth)
                implementation(project(":internal-testutils-truth"))

                implementation(libs.junit)
                implementation(libs.kotlinCoroutinesTest)
                implementation(libs.truth)
                implementation(project(":internal-testutils-truth"))
                implementation(libs.testRunner)
                implementation(libs.testCore)
            }

        }
        targets.withType(org.jetbrains.kotlin.gradle.plugin.mpp.KotlinNativeTarget).configureEach {
            binaries.all {
                binaryOptions["memoryModel"] = "experimental"
            }
        }
        targets.all { target ->
            if (target.platformType == org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType.native) {
                target.compilations["main"].defaultSourceSet {
                    dependsOn(nativeMain)
                }
                target.compilations["test"].defaultSourceSet {
                    dependsOn(nativeTest)
                }
            }
        }
    }
}

androidx {
    name = "Android DataStore"
    type = LibraryType.PUBLISHED_LIBRARY
    mavenGroup = LibraryGroups.DATASTORE
    inceptionYear = "2020"
    description = "Android DataStore - contains the underlying store used by each serialization " +
            "method along with components that require an Android dependency"
    legacyDisableKotlinStrictApiMode = true
}
