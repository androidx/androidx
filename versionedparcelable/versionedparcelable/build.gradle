/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */
import androidx.build.Publish

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("androidx.stableaidl")
}

dependencies {
    api("androidx.annotation:annotation:1.2.0")
    implementation("androidx.collection:collection:1.0.0")

    androidTestImplementation(libs.testExtJunit)
    androidTestImplementation(libs.testCore)
    androidTestImplementation(libs.testRunner)
    androidTestImplementation(libs.mockitoCore, excludes.bytebuddy)
    androidTestImplementation(libs.dexmakerMockito, excludes.bytebuddy)
    androidTestImplementation(libs.truth)
    androidTestAnnotationProcessor project(":versionedparcelable:versionedparcelable-compiler")
}

android {
    buildFeatures {
        aidl = true
    }
    buildTypes.all {
        consumerProguardFiles("proguard-rules.pro")

        stableAidl {
            version 1
        }
    }
    namespace "androidx.versionedparcelable"
}

androidx {
    name = "VersionedParcelable"
    publish = Publish.SNAPSHOT_AND_RELEASE
    mavenVersion = LibraryVersions.VERSIONED_PARCELABLE
    inceptionYear = "2018"
    description = "Provides a stable but relatively compact binary serialization format that can be passed across processes or persisted safely."
    failOnDeprecationWarnings = false
    metalavaK2UastEnabled = true
}
