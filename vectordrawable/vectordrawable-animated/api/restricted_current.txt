// Signature format: 4.0
package androidx.vectordrawable.graphics.drawable {

  public interface Animatable2Compat extends android.graphics.drawable.Animatable {
    method public void clearAnimationCallbacks();
    method public void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback);
    method public boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback);
  }

  public abstract static class Animatable2Compat.AnimationCallback {
    ctor public Animatable2Compat.AnimationCallback();
    method public void onAnimationEnd(android.graphics.drawable.Drawable);
    method public void onAnimationStart(android.graphics.drawable.Drawable);
  }

  public class AnimatedVectorDrawableCompat extends android.graphics.drawable.Drawable implements androidx.vectordrawable.graphics.drawable.Animatable2Compat androidx.core.graphics.drawable.TintAwareDrawable {
    method public void clearAnimationCallbacks();
    method public static void clearAnimationCallbacks(android.graphics.drawable.Drawable?);
    method public static androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat? create(android.content.Context, @DrawableRes int);
    method public static androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources.Theme?) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException;
    method public void draw(android.graphics.Canvas);
    method public int getOpacity();
    method public boolean isRunning();
    method public static void registerAnimationCallback(android.graphics.drawable.Drawable?, androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback?);
    method public void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback?);
    method public void setAlpha(int);
    method public void setColorFilter(android.graphics.ColorFilter?);
    method public void setColorFilter(int, android.graphics.PorterDuff.Mode!);
    method public void start();
    method public void stop();
    method public static boolean unregisterAnimationCallback(android.graphics.drawable.Drawable?, androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback?);
    method public boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat.AnimationCallback?);
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public class AnimationUtilsCompat {
    method public static android.view.animation.Interpolator loadInterpolator(android.content.Context, @AnimRes int) throws android.content.res.Resources.NotFoundException;
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public class AnimatorInflaterCompat {
    method public static android.animation.Animator! loadAnimator(android.content.Context!, android.content.res.Resources!, android.content.res.Resources.Theme!, @AnimatorRes int) throws android.content.res.Resources.NotFoundException;
    method public static android.animation.Animator! loadAnimator(android.content.Context!, android.content.res.Resources!, android.content.res.Resources.Theme!, @AnimatorRes int, float) throws android.content.res.Resources.NotFoundException;
    method public static android.animation.Animator! loadAnimator(android.content.Context!, @AnimatorRes int) throws android.content.res.Resources.NotFoundException;
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public class ArgbEvaluator implements android.animation.TypeEvaluator<java.lang.Object!> {
    ctor public ArgbEvaluator();
    method public Object! evaluate(float, Object!, Object!);
    method public static androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance();
  }

  @RestrictTo(androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX) public class PathInterpolatorCompat implements android.view.animation.Interpolator {
    ctor public PathInterpolatorCompat(android.content.Context!, android.util.AttributeSet!, org.xmlpull.v1.XmlPullParser!);
    ctor public PathInterpolatorCompat(android.content.res.Resources!, android.content.res.Resources.Theme!, android.util.AttributeSet!, org.xmlpull.v1.XmlPullParser!);
    method public float getInterpolation(float);
    field public static final double EPSILON = 1.0E-5;
    field public static final int MAX_NUM_POINTS = 3000; // 0xbb8
  }

}

