// Baseline format: 1.0
AcronymName: androidx.sqlite.SQLiteConnection:
    Acronyms should not be capitalized in class names: was `SQLiteConnection`, should this be `SqLiteConnection`?
AcronymName: androidx.sqlite.SQLiteDriver:
    Acronyms should not be capitalized in class names: was `SQLiteDriver`, should this be `SqLiteDriver`?
AcronymName: androidx.sqlite.SQLiteKt:
    Acronyms should not be capitalized in class names: was `SQLiteKt`, should this be `SqLiteKt`?
AcronymName: androidx.sqlite.SQLiteKt#execSQL(androidx.sqlite.SQLiteConnection, String):
    Acronyms should not be capitalized in method names: was `execSQL`, should this be `execSql`?
AcronymName: androidx.sqlite.SQLiteKt#throwSQLiteException(int, String):
    Acronyms should not be capitalized in method names: was `throwSQLiteException`, should this be `throwSqLiteException`?
AcronymName: androidx.sqlite.SQLiteStatement:
    Acronyms should not be capitalized in class names: was `SQLiteStatement`, should this be `SqLiteStatement`?
AcronymName: androidx.sqlite.db.SimpleSQLiteQuery:
    Acronyms should not be capitalized in class names: was `SimpleSQLiteQuery`, should this be `SimpleSqLiteQuery`?
AcronymName: androidx.sqlite.db.SupportSQLiteDatabase:
    Acronyms should not be capitalized in class names: was `SupportSQLiteDatabase`, should this be `SupportSqLiteDatabase`?
AcronymName: androidx.sqlite.db.SupportSQLiteDatabase#execSQL(String):
    Acronyms should not be capitalized in method names: was `execSQL`, should this be `execSql`?
AcronymName: androidx.sqlite.db.SupportSQLiteDatabase#execSQL(String, Object[]):
    Acronyms should not be capitalized in method names: was `execSQL`, should this be `execSql`?
AcronymName: androidx.sqlite.db.SupportSQLiteOpenHelper:
    Acronyms should not be capitalized in class names: was `SupportSQLiteOpenHelper`, should this be `SupportSqLiteOpenHelper`?
AcronymName: androidx.sqlite.db.SupportSQLiteProgram:
    Acronyms should not be capitalized in class names: was `SupportSQLiteProgram`, should this be `SupportSqLiteProgram`?
AcronymName: androidx.sqlite.db.SupportSQLiteQuery:
    Acronyms should not be capitalized in class names: was `SupportSQLiteQuery`, should this be `SupportSqLiteQuery`?
AcronymName: androidx.sqlite.db.SupportSQLiteQueryBuilder:
    Acronyms should not be capitalized in class names: was `SupportSQLiteQueryBuilder`, should this be `SupportSqLiteQueryBuilder`?
AcronymName: androidx.sqlite.db.SupportSQLiteStatement:
    Acronyms should not be capitalized in class names: was `SupportSQLiteStatement`, should this be `SupportSqLiteStatement`?


ArrayReturn: androidx.sqlite.db.SupportSQLiteDatabase#delete(String, String, Object[]) parameter #2:
    Method parameter should be Collection<Object> (or subclass) instead of raw array; was `java.lang.Object[]`
ArrayReturn: androidx.sqlite.db.SupportSQLiteDatabase#execSQL(String, Object[]) parameter #1:
    Method parameter should be Collection<Object> (or subclass) instead of raw array; was `java.lang.Object[]`
ArrayReturn: androidx.sqlite.db.SupportSQLiteDatabase#query(String, Object[]) parameter #1:
    Method parameter should be Collection<Object> (or subclass) instead of raw array; was `java.lang.Object[]`
ArrayReturn: androidx.sqlite.db.SupportSQLiteDatabase#update(String, int, android.content.ContentValues, String, Object[]) parameter #4:
    Method parameter should be Collection<Object> (or subclass) instead of raw array; was `java.lang.Object[]`
ArrayReturn: androidx.sqlite.db.SupportSQLiteQueryBuilder#selection(String, Object[]) parameter #1:
    Method parameter should be Collection<Object> (or subclass) instead of raw array; was `java.lang.Object[]`


BannedThrow: androidx.sqlite.db.SupportSQLiteDatabase#execSQL(String):
    Methods must not throw unchecked exceptions
BannedThrow: androidx.sqlite.db.SupportSQLiteDatabase#execSQL(String, Object[]):
    Methods must not throw unchecked exceptions
BannedThrow: androidx.sqlite.db.SupportSQLiteDatabase#insert(String, int, android.content.ContentValues):
    Methods must not throw unchecked exceptions


BuilderSetStyle: androidx.sqlite.db.SupportSQLiteOpenHelper.Configuration.Builder#allowDataLossOnRecovery(boolean):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.sqlite.db.SupportSQLiteOpenHelper.Configuration.Builder.allowDataLossOnRecovery(boolean)
BuilderSetStyle: androidx.sqlite.db.SupportSQLiteOpenHelper.Configuration.Builder#callback(androidx.sqlite.db.SupportSQLiteOpenHelper.Callback):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.sqlite.db.SupportSQLiteOpenHelper.Configuration.Builder.callback(androidx.sqlite.db.SupportSQLiteOpenHelper.Callback)
BuilderSetStyle: androidx.sqlite.db.SupportSQLiteOpenHelper.Configuration.Builder#name(String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.sqlite.db.SupportSQLiteOpenHelper.Configuration.Builder.name(String)
BuilderSetStyle: androidx.sqlite.db.SupportSQLiteOpenHelper.Configuration.Builder#noBackupDirectory(boolean):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.sqlite.db.SupportSQLiteOpenHelper.Configuration.Builder.noBackupDirectory(boolean)
BuilderSetStyle: androidx.sqlite.db.SupportSQLiteQueryBuilder#builder(String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.sqlite.db.SupportSQLiteQueryBuilder.builder(String)
BuilderSetStyle: androidx.sqlite.db.SupportSQLiteQueryBuilder#columns(String[]):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.sqlite.db.SupportSQLiteQueryBuilder.columns(String[])
BuilderSetStyle: androidx.sqlite.db.SupportSQLiteQueryBuilder#create():
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.sqlite.db.SupportSQLiteQueryBuilder.create()
BuilderSetStyle: androidx.sqlite.db.SupportSQLiteQueryBuilder#distinct():
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.sqlite.db.SupportSQLiteQueryBuilder.distinct()
BuilderSetStyle: androidx.sqlite.db.SupportSQLiteQueryBuilder#groupBy(String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.sqlite.db.SupportSQLiteQueryBuilder.groupBy(String)
BuilderSetStyle: androidx.sqlite.db.SupportSQLiteQueryBuilder#having(String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.sqlite.db.SupportSQLiteQueryBuilder.having(String)
BuilderSetStyle: androidx.sqlite.db.SupportSQLiteQueryBuilder#limit(String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.sqlite.db.SupportSQLiteQueryBuilder.limit(String)
BuilderSetStyle: androidx.sqlite.db.SupportSQLiteQueryBuilder#orderBy(String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.sqlite.db.SupportSQLiteQueryBuilder.orderBy(String)
BuilderSetStyle: androidx.sqlite.db.SupportSQLiteQueryBuilder#selection(String, Object[]):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.sqlite.db.SupportSQLiteQueryBuilder.selection(String,Object[])


ExecutorRegistration: androidx.sqlite.db.SupportSQLiteDatabase#beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener):
    Registration methods should have overload that accepts delivery Executor: `beginTransactionWithListener`
ExecutorRegistration: androidx.sqlite.db.SupportSQLiteDatabase#beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener):
    Registration methods should have overload that accepts delivery Executor: `beginTransactionWithListenerNonExclusive`
ExecutorRegistration: androidx.sqlite.db.SupportSQLiteOpenHelper.Configuration.Builder#callback(androidx.sqlite.db.SupportSQLiteOpenHelper.Callback):
    Registration methods should have overload that accepts delivery Executor: `callback`


MissingBuildMethod: androidx.sqlite.db.SupportSQLiteQueryBuilder:
    androidx.sqlite.db.SupportSQLiteQueryBuilder does not declare a `build()` method, but builder classes are expected to


StaticFinalBuilder: androidx.sqlite.db.SupportSQLiteOpenHelper.Configuration.Builder:
    Builder must be final: androidx.sqlite.db.SupportSQLiteOpenHelper.Configuration.Builder


TopLevelBuilder: androidx.sqlite.db.SupportSQLiteQueryBuilder:
    Builder should be defined as inner class: androidx.sqlite.db.SupportSQLiteQueryBuilder
