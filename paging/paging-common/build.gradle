/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.KmpPlatformsKt
import androidx.build.PlatformIdentifier
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType
import org.jetbrains.kotlin.gradle.plugin.mpp.KotlinNativeTarget
import androidx.build.Publish

plugins {
    id("AndroidXPlugin")
}

def enableNative = KmpPlatformsKt.enableNative(project)

androidXMultiplatform {
    jvm()
    mac()
    linux()
    ios()

    defaultPlatform(PlatformIdentifier.JVM)

    sourceSets {

        commonMain {
            dependencies {
                api(libs.kotlinStdlib)
                api(libs.kotlinCoroutinesCore)
                implementation(libs.statelyConcurrency)
                implementation(libs.statelyConcurrentCollections)
            }
        }

        jvmMain {
            dependsOn(commonMain)
            dependencies {
                api("androidx.annotation:annotation:1.3.0")
                api("androidx.arch.core:core-common:2.2.0")

            }
        }

        commonTest {
            dependencies {
                implementation(libs.kotlinCoroutinesTest)
            }
        }

        jvmTest {
            dependencies {
                implementation(libs.junit)
                implementation(libs.mockitoCore4)
                implementation(libs.mockitoKotlin4)
                implementation(project(":internal-testutils-common"))
                implementation(project(":internal-testutils-kmp"))
                implementation(project(":internal-testutils-ktx"))
                implementation(project(":internal-testutils-paging"))
                implementation(libs.kotlinTest)
            }
        }

        if (enableNative) {
            nativeMain {
                dependsOn(commonMain)
            }
            nativeTest {
                dependsOn(commonTest)
            }
        }

        // use new memory model
        targets.withType(KotlinNativeTarget).configureEach {
            binaries.all {
                binaryOptions["memoryModel"] = "experimental"
            }
        }
        targets.all { target ->
            if (target.platformType == KotlinPlatformType.native) {
                target.compilations["main"].defaultSourceSet {
                    dependsOn(nativeMain)
                }
                target.compilations["test"].defaultSourceSet {
                    dependsOn(nativeTest)
                }
            }
        }
    }
}

// top level declaration because the KGP sourceSets declaration used by androidXMultiplatform
// does not support constraints or samples configurations yet
dependencies {
    samples(project(":paging:paging-samples"))
}

androidx {
    name = "Paging-Common"
    publish = Publish.SNAPSHOT_AND_RELEASE
    inceptionYear = "2017"
    description = "Android Paging-Common"
}
