// Baseline format: 1.0
ArrayReturn: androidx.navigation.NavType.ParcelableArrayType#get(android.os.Bundle, String):
    Method should return Collection<Parcelable> (or subclass) instead of raw array; was `D[]`
ArrayReturn: androidx.navigation.NavType.ParcelableArrayType#parseValue(String):
    Method should return Collection<Parcelable> (or subclass) instead of raw array; was `D[]`
ArrayReturn: androidx.navigation.NavType.ParcelableArrayType#put(android.os.Bundle, String, D[]) parameter #2:
    Method parameter should be Collection<Parcelable> (or subclass) instead of raw array; was `D[]`
ArrayReturn: androidx.navigation.NavType.SerializableArrayType#get(android.os.Bundle, String):
    Method should return Collection<Serializable> (or subclass) instead of raw array; was `D[]`
ArrayReturn: androidx.navigation.NavType.SerializableArrayType#parseValue(String):
    Method should return Collection<Serializable> (or subclass) instead of raw array; was `D[]`
ArrayReturn: androidx.navigation.NavType.SerializableArrayType#put(android.os.Bundle, String, D[]) parameter #2:
    Method parameter should be Collection<Serializable> (or subclass) instead of raw array; was `D[]`


BuilderSetStyle: androidx.navigation.NavActionBuilder#navOptions(kotlin.jvm.functions.Function1<? super androidx.navigation.NavOptionsBuilder,kotlin.Unit>):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.navigation.NavActionBuilder.navOptions(kotlin.jvm.functions.Function1<? super androidx.navigation.NavOptionsBuilder,kotlin.Unit>)
BuilderSetStyle: androidx.navigation.NavDeepLink.Builder#fromAction(String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.navigation.NavDeepLink.Builder.fromAction(String)
BuilderSetStyle: androidx.navigation.NavDeepLink.Builder#fromMimeType(String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.navigation.NavDeepLink.Builder.fromMimeType(String)
BuilderSetStyle: androidx.navigation.NavDeepLink.Builder#fromUriPattern(String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.navigation.NavDeepLink.Builder.fromUriPattern(String)
BuilderSetStyle: androidx.navigation.NavDeepLinkRequest.Builder#fromAction(String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.navigation.NavDeepLinkRequest.Builder.fromAction(String)
BuilderSetStyle: androidx.navigation.NavDeepLinkRequest.Builder#fromMimeType(String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.navigation.NavDeepLinkRequest.Builder.fromMimeType(String)
BuilderSetStyle: androidx.navigation.NavDeepLinkRequest.Builder#fromUri(android.net.Uri):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.navigation.NavDeepLinkRequest.Builder.fromUri(android.net.Uri)
BuilderSetStyle: androidx.navigation.NavDestinationBuilder#argument(String, kotlin.jvm.functions.Function1<? super androidx.navigation.NavArgumentBuilder,kotlin.Unit>):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.navigation.NavDestinationBuilder.argument(String,kotlin.jvm.functions.Function1<? super androidx.navigation.NavArgumentBuilder,kotlin.Unit>)
BuilderSetStyle: androidx.navigation.NavDestinationBuilder#deepLink(String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.navigation.NavDestinationBuilder.deepLink(String)
BuilderSetStyle: androidx.navigation.NavDestinationBuilder#deepLink(kotlin.jvm.functions.Function1<? super androidx.navigation.NavDeepLinkDslBuilder,kotlin.Unit>):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.navigation.NavDestinationBuilder.deepLink(kotlin.jvm.functions.Function1<? super androidx.navigation.NavDeepLinkDslBuilder,kotlin.Unit>)
BuilderSetStyle: androidx.navigation.NavOptionsBuilder#anim(kotlin.jvm.functions.Function1<? super androidx.navigation.AnimBuilder,kotlin.Unit>):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.navigation.NavOptionsBuilder.anim(kotlin.jvm.functions.Function1<? super androidx.navigation.AnimBuilder,kotlin.Unit>)
BuilderSetStyle: androidx.navigation.NavOptionsBuilder#popUpTo(String, kotlin.jvm.functions.Function1<? super androidx.navigation.PopUpToBuilder,kotlin.Unit>):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.navigation.NavOptionsBuilder.popUpTo(String,kotlin.jvm.functions.Function1<? super androidx.navigation.PopUpToBuilder,kotlin.Unit>)
BuilderSetStyle: androidx.navigation.NavOptionsBuilder#popUpTo(int, kotlin.jvm.functions.Function1<? super androidx.navigation.PopUpToBuilder,kotlin.Unit>):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.navigation.NavOptionsBuilder.popUpTo(int,kotlin.jvm.functions.Function1<? super androidx.navigation.PopUpToBuilder,kotlin.Unit>)


DocumentExceptions: androidx.navigation.NavArgumentBuilder#getType():
    Method NavArgumentBuilder.getType appears to be throwing java.lang.IllegalStateException; this should be listed in the documentation; see https://android.github.io/kotlin-guides/interop.html#document-exceptions
DocumentExceptions: androidx.navigation.NavGraphBuilder#build():
    Method NavGraphBuilder.build appears to be throwing java.lang.IllegalStateException; this should be listed in the documentation; see https://android.github.io/kotlin-guides/interop.html#document-exceptions


GetterOnBuilder: androidx.navigation.AnimBuilder#getEnter():
    Getter should be on the built object, not the builder: method androidx.navigation.AnimBuilder.getEnter()
GetterOnBuilder: androidx.navigation.AnimBuilder#getExit():
    Getter should be on the built object, not the builder: method androidx.navigation.AnimBuilder.getExit()
GetterOnBuilder: androidx.navigation.AnimBuilder#getPopEnter():
    Getter should be on the built object, not the builder: method androidx.navigation.AnimBuilder.getPopEnter()
GetterOnBuilder: androidx.navigation.AnimBuilder#getPopExit():
    Getter should be on the built object, not the builder: method androidx.navigation.AnimBuilder.getPopExit()
GetterOnBuilder: androidx.navigation.NavActionBuilder#getDefaultArguments():
    Getter should be on the built object, not the builder: method androidx.navigation.NavActionBuilder.getDefaultArguments()
GetterOnBuilder: androidx.navigation.NavActionBuilder#getDestinationId():
    Getter should be on the built object, not the builder: method androidx.navigation.NavActionBuilder.getDestinationId()
GetterOnBuilder: androidx.navigation.NavArgumentBuilder#getDefaultValue():
    Getter should be on the built object, not the builder: method androidx.navigation.NavArgumentBuilder.getDefaultValue()
GetterOnBuilder: androidx.navigation.NavArgumentBuilder#getNullable():
    Getter should be on the built object, not the builder: method androidx.navigation.NavArgumentBuilder.getNullable()
GetterOnBuilder: androidx.navigation.NavArgumentBuilder#getType():
    Getter should be on the built object, not the builder: method androidx.navigation.NavArgumentBuilder.getType()
GetterOnBuilder: androidx.navigation.NavDeepLinkDslBuilder#getAction():
    Getter should be on the built object, not the builder: method androidx.navigation.NavDeepLinkDslBuilder.getAction()
GetterOnBuilder: androidx.navigation.NavDeepLinkDslBuilder#getMimeType():
    Getter should be on the built object, not the builder: method androidx.navigation.NavDeepLinkDslBuilder.getMimeType()
GetterOnBuilder: androidx.navigation.NavDeepLinkDslBuilder#getUriPattern():
    Getter should be on the built object, not the builder: method androidx.navigation.NavDeepLinkDslBuilder.getUriPattern()
GetterOnBuilder: androidx.navigation.NavDestinationBuilder#getId():
    Getter should be on the built object, not the builder: method androidx.navigation.NavDestinationBuilder.getId()
GetterOnBuilder: androidx.navigation.NavDestinationBuilder#getLabel():
    Getter should be on the built object, not the builder: method androidx.navigation.NavDestinationBuilder.getLabel()
GetterOnBuilder: androidx.navigation.NavDestinationBuilder#getNavigator():
    Getter should be on the built object, not the builder: method androidx.navigation.NavDestinationBuilder.getNavigator()
GetterOnBuilder: androidx.navigation.NavDestinationBuilder#getRoute():
    Getter should be on the built object, not the builder: method androidx.navigation.NavDestinationBuilder.getRoute()
GetterOnBuilder: androidx.navigation.NavOptionsBuilder#getLaunchSingleTop():
    Getter should be on the built object, not the builder: method androidx.navigation.NavOptionsBuilder.getLaunchSingleTop()
GetterOnBuilder: androidx.navigation.NavOptionsBuilder#getPopUpToId():
    Getter should be on the built object, not the builder: method androidx.navigation.NavOptionsBuilder.getPopUpToId()
GetterOnBuilder: androidx.navigation.NavOptionsBuilder#getPopUpToRoute():
    Getter should be on the built object, not the builder: method androidx.navigation.NavOptionsBuilder.getPopUpToRoute()
GetterOnBuilder: androidx.navigation.PopUpToBuilder#getInclusive():
    Getter should be on the built object, not the builder: method androidx.navigation.PopUpToBuilder.getInclusive()


GetterSetterNames: androidx.navigation.NavArgumentBuilder#nullable:
    Invalid name for boolean property `nullable`. Should start with one of `has`, `can`, `should`, `is`.
GetterSetterNames: androidx.navigation.NavOptionsBuilder#launchSingleTop:
    Invalid name for boolean property `launchSingleTop`. Should start with one of `has`, `can`, `should`, `is`.
GetterSetterNames: androidx.navigation.PopUpToBuilder#inclusive:
    Invalid name for boolean property `inclusive`. Should start with one of `has`, `can`, `should`, `is`.


MissingBuildMethod: androidx.navigation.AnimBuilder:
    androidx.navigation.AnimBuilder does not declare a `build()` method, but builder classes are expected to
MissingBuildMethod: androidx.navigation.NavActionBuilder:
    androidx.navigation.NavActionBuilder does not declare a `build()` method, but builder classes are expected to
MissingBuildMethod: androidx.navigation.NavDeepLinkDslBuilder:
    androidx.navigation.NavDeepLinkDslBuilder does not declare a `build()` method, but builder classes are expected to
MissingBuildMethod: androidx.navigation.NavOptionsBuilder:
    androidx.navigation.NavOptionsBuilder does not declare a `build()` method, but builder classes are expected to
MissingBuildMethod: androidx.navigation.PopUpToBuilder:
    androidx.navigation.PopUpToBuilder does not declare a `build()` method, but builder classes are expected to


MissingGetterMatchingBuilder: androidx.navigation.NavArgument.Builder#setIsNullable(boolean):
    androidx.navigation.NavArgument does not declare a `isIsNullable()` method matching method androidx.navigation.NavArgument.Builder.setIsNullable(boolean)
MissingGetterMatchingBuilder: androidx.navigation.NavOptions.Builder#setLaunchSingleTop(boolean):
    androidx.navigation.NavOptions does not declare a `isLaunchSingleTop()` method matching method androidx.navigation.NavOptions.Builder.setLaunchSingleTop(boolean)


MissingJvmstatic: androidx.navigation.NavDestination#hierarchy:
    Companion object constants like hierarchy should be using @JvmField, not @JvmStatic; see https://developer.android.com/kotlin/interop#companion_constants
MissingJvmstatic: androidx.navigation.NavOptionsBuilder#popUpTo(String, kotlin.jvm.functions.Function1<? super androidx.navigation.PopUpToBuilder,kotlin.Unit>):
    A Kotlin method with default parameter values should be annotated with @JvmOverloads for better Java interoperability; see https://android.github.io/kotlin-guides/interop.html#function-overloads-for-defaults
MissingJvmstatic: androidx.navigation.NavOptionsBuilder#popUpTo(int, kotlin.jvm.functions.Function1<? super androidx.navigation.PopUpToBuilder,kotlin.Unit>):
    A Kotlin method with default parameter values should be annotated with @JvmOverloads for better Java interoperability; see https://android.github.io/kotlin-guides/interop.html#function-overloads-for-defaults


NullableCollection: androidx.navigation.NavAction#getDefaultArguments():
    Return type of method androidx.navigation.NavAction.getDefaultArguments() is a nullable collection (`android.os.Bundle`); must be non-null
NullableCollection: androidx.navigation.NavBackStackEntry#getArguments():
    Return type of method androidx.navigation.NavBackStackEntry.getArguments() is a nullable collection (`android.os.Bundle`); must be non-null
NullableCollection: androidx.navigation.Navigator#onSaveState():
    Return type of method androidx.navigation.Navigator.onSaveState() is a nullable collection (`android.os.Bundle`); must be non-null


OptionalBuilderConstructorArgument: androidx.navigation.NavDestinationBuilder#NavDestinationBuilder(androidx.navigation.Navigator<? extends D>, String) parameter #1:
    Builder constructor arguments must be mandatory (i.e. not @Nullable): parameter route in androidx.navigation.NavDestinationBuilder(androidx.navigation.Navigator<? extends D> navigator, String route)


SetterReturnsThis: androidx.navigation.AnimBuilder#setEnter(int):
    Methods must return the builder object (return type androidx.navigation.AnimBuilder instead of void): method androidx.navigation.AnimBuilder.setEnter(int)
SetterReturnsThis: androidx.navigation.AnimBuilder#setExit(int):
    Methods must return the builder object (return type androidx.navigation.AnimBuilder instead of void): method androidx.navigation.AnimBuilder.setExit(int)
SetterReturnsThis: androidx.navigation.AnimBuilder#setPopEnter(int):
    Methods must return the builder object (return type androidx.navigation.AnimBuilder instead of void): method androidx.navigation.AnimBuilder.setPopEnter(int)
SetterReturnsThis: androidx.navigation.AnimBuilder#setPopExit(int):
    Methods must return the builder object (return type androidx.navigation.AnimBuilder instead of void): method androidx.navigation.AnimBuilder.setPopExit(int)
SetterReturnsThis: androidx.navigation.NavActionBuilder#setDestinationId(int):
    Methods must return the builder object (return type androidx.navigation.NavActionBuilder instead of void): method androidx.navigation.NavActionBuilder.setDestinationId(int)
SetterReturnsThis: androidx.navigation.NavArgumentBuilder#setDefaultValue(Object):
    Methods must return the builder object (return type androidx.navigation.NavArgumentBuilder instead of void): method androidx.navigation.NavArgumentBuilder.setDefaultValue(Object)
SetterReturnsThis: androidx.navigation.NavArgumentBuilder#setNullable(boolean):
    Methods must return the builder object (return type androidx.navigation.NavArgumentBuilder instead of void): method androidx.navigation.NavArgumentBuilder.setNullable(boolean)
SetterReturnsThis: androidx.navigation.NavArgumentBuilder#setType(androidx.navigation.NavType<?>):
    Methods must return the builder object (return type androidx.navigation.NavArgumentBuilder instead of void): method androidx.navigation.NavArgumentBuilder.setType(androidx.navigation.NavType<?>)
SetterReturnsThis: androidx.navigation.NavDeepLinkDslBuilder#setAction(String):
    Methods must return the builder object (return type androidx.navigation.NavDeepLinkDslBuilder instead of void): method androidx.navigation.NavDeepLinkDslBuilder.setAction(String)
SetterReturnsThis: androidx.navigation.NavDeepLinkDslBuilder#setMimeType(String):
    Methods must return the builder object (return type androidx.navigation.NavDeepLinkDslBuilder instead of void): method androidx.navigation.NavDeepLinkDslBuilder.setMimeType(String)
SetterReturnsThis: androidx.navigation.NavDeepLinkDslBuilder#setUriPattern(String):
    Methods must return the builder object (return type androidx.navigation.NavDeepLinkDslBuilder instead of void): method androidx.navigation.NavDeepLinkDslBuilder.setUriPattern(String)
SetterReturnsThis: androidx.navigation.NavDestinationBuilder#setLabel(CharSequence):
    Methods must return the builder object (return type androidx.navigation.NavDestinationBuilder<D> instead of void): method androidx.navigation.NavDestinationBuilder.setLabel(CharSequence)
SetterReturnsThis: androidx.navigation.NavOptionsBuilder#setLaunchSingleTop(boolean):
    Methods must return the builder object (return type androidx.navigation.NavOptionsBuilder instead of void): method androidx.navigation.NavOptionsBuilder.setLaunchSingleTop(boolean)
SetterReturnsThis: androidx.navigation.PopUpToBuilder#setInclusive(boolean):
    Methods must return the builder object (return type androidx.navigation.PopUpToBuilder instead of void): method androidx.navigation.PopUpToBuilder.setInclusive(boolean)


StaticFinalBuilder: androidx.navigation.NavDestinationBuilder:
    Builder must be final: androidx.navigation.NavDestinationBuilder


TopLevelBuilder: androidx.navigation.AnimBuilder:
    Builder should be defined as inner class: androidx.navigation.AnimBuilder
TopLevelBuilder: androidx.navigation.NavActionBuilder:
    Builder should be defined as inner class: androidx.navigation.NavActionBuilder
TopLevelBuilder: androidx.navigation.NavArgumentBuilder:
    Builder should be defined as inner class: androidx.navigation.NavArgumentBuilder
TopLevelBuilder: androidx.navigation.NavDeepLinkDslBuilder:
    Builder should be defined as inner class: androidx.navigation.NavDeepLinkDslBuilder
TopLevelBuilder: androidx.navigation.NavDestinationBuilder:
    Builder should be defined as inner class: androidx.navigation.NavDestinationBuilder
TopLevelBuilder: androidx.navigation.NavOptionsBuilder:
    Builder should be defined as inner class: androidx.navigation.NavOptionsBuilder
TopLevelBuilder: androidx.navigation.PopUpToBuilder:
    Builder should be defined as inner class: androidx.navigation.PopUpToBuilder
