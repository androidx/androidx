<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.3.0-beta01" type="baseline" client="gradle" dependencies="false" name="AGP (8.3.0-beta01)" variant="all" version="8.3.0-beta01">

    <issue
        id="ExperimentalAnnotationRetention"
        message="Experimental annotation has `RUNTIME` retention, should use default (`CLASS`)"
        errorLine1="public @interface ExperimentalJavaAnnotationWrongRetention {}"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/ExperimentalJavaAnnotationWrongRetention.java"/>
    </issue>

    <issue
        id="ExperimentalAnnotationRetention"
        message="Experimental annotation has `RUNTIME` retention, should use default (`CLASS`)"
        errorLine1="public @interface ExperimentalJavaAnnotationWrongRetention {}"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/ExperimentalJavaAnnotationWrongRetention.java"/>
    </issue>

    <issue
        id="ExperimentalAnnotationRetention"
        message="Experimental annotation has default (`RUNTIME`) retention, should use `BINARY`"
        errorLine1="annotation class ExperimentalKotlinAnnotationWrongRetention"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/ExperimentalKotlinAnnotationWrongRetention.kt"/>
    </issue>

    <issue
        id="ExperimentalAnnotationRetention"
        message="Experimental annotation has default (`RUNTIME`) retention, should use `BINARY`"
        errorLine1="annotation class ExperimentalKotlinAnnotationWrongRetention"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/ExperimentalKotlinAnnotationWrongRetention.kt"/>
    </issue>

    <issue
        id="ExperimentalPropertyAnnotation"
        message="This property does not have all required annotations to correctly mark it as experimental."
        errorLine1="    @ExperimentalKotlinAnnotation"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/AnnotatedKotlinMembers.kt"/>
    </issue>

    <issue
        id="ExperimentalPropertyAnnotation"
        message="This property does not have all required annotations to correctly mark it as experimental."
        errorLine1="    @ExperimentalKotlinAnnotation"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/AnnotatedKotlinMembers.kt"/>
    </issue>

    <issue
        id="ExperimentalPropertyAnnotation"
        message="This property does not have all required annotations to correctly mark it as experimental."
        errorLine1="    @set:ExperimentalKotlinAnnotation"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/AnnotatedKotlinMembers.kt"/>
    </issue>

    <issue
        id="ExperimentalPropertyAnnotation"
        message="This property does not have all required annotations to correctly mark it as experimental."
        errorLine1="    @set:ExperimentalKotlinAnnotation"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/AnnotatedKotlinMembers.kt"/>
    </issue>

    <issue
        id="ExperimentalPropertyAnnotation"
        message="This property does not have all required annotations to correctly mark it as experimental."
        errorLine1="        @ExperimentalKotlinAnnotation"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/AnnotatedKotlinMembers.kt"/>
    </issue>

    <issue
        id="ExperimentalPropertyAnnotation"
        message="This property does not have all required annotations to correctly mark it as experimental."
        errorLine1="        @ExperimentalKotlinAnnotation"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/AnnotatedKotlinMembers.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="    static class ConcreteExperimentalInterface implements ExperimentalInterface { // unsafe"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava192562469.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="    static class ConcreteExperimentalInterface implements ExperimentalInterface { // unsafe"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava192562469.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        public void experimentalMethod() {} // unsafe override"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava192562469.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        public void experimentalMethod() {} // unsafe override"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava192562469.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        ExperimentalInterface anonymous = new ExperimentalInterface() { // unsafe"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava192562469.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        ExperimentalInterface anonymous = new ExperimentalInterface() { // unsafe"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava192562469.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        ExperimentalInterface anonymous = new ExperimentalInterface() { // unsafe"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava192562469.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        ExperimentalInterface anonymous = new ExperimentalInterface() { // unsafe"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava192562469.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="            public void experimentalMethod() {} // unsafe override"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava192562469.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="            public void experimentalMethod() {} // unsafe override"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava192562469.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        ExperimentalInterface lambda = () -> {}; // unsafe"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava192562469.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        ExperimentalInterface lambda = () -> {}; // unsafe"
        errorLine2="                                       ~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava192562469.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        ExperimentalInterface lambda = () -> {}; // unsafe"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava192562469.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        ExperimentalInterface lambda = () -> {}; // unsafe"
        errorLine2="                                       ~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava192562469.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        public void experimentalMethod() {} // unsafe override"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava192562926.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        public void experimentalMethod() {} // unsafe override"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava192562926.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="            public void experimentalMethod() {} // unsafe override"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava192562926.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="            public void experimentalMethod() {} // unsafe override"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava192562926.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        StableInterface lambda = () -> {}; // unsafe override"
        errorLine2="                                 ~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava192562926.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        StableInterface lambda = () -> {}; // unsafe override"
        errorLine2="                                 ~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava192562926.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        foo.defaultExperimentalMethod(); // unsafe in Java but safe in Kotlin"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava193110413.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        foo.defaultExperimentalMethod(); // unsafe in Java but safe in Kotlin"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava193110413.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        foo.experimentalMethod(); // unsafe"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava193110413.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        foo.experimentalMethod(); // unsafe"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava193110413.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        Bar bar = new Bar(); // unsafe"
        errorLine2="        ~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava193110413.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        Bar bar = new Bar(); // unsafe"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava193110413.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        Bar bar = new Bar(); // unsafe"
        errorLine2="        ~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava193110413.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        Bar bar = new Bar(); // unsafe"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava193110413.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        bar.stableMethodLevelOptIn(); // unsafe due to experimental class scope"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava193110413.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        bar.stableMethodLevelOptIn(); // unsafe due to experimental class scope"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava193110413.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        bar.experimentalMethod(); // unsafe"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/RegressionTestJava193110413.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        bar.experimentalMethod(); // unsafe"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestJava193110413.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        player.accessor"
        errorLine2="               ~~~~~~~~">
        <location
            file="src/main/java/sample/optin/RegressionTestKotlin298322402.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        AnnotatedJavaClass experimentalObject = new AnnotatedJavaClass();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        AnnotatedJavaClass experimentalObject = new AnnotatedJavaClass();"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        AnnotatedJavaClass experimentalObject = new AnnotatedJavaClass();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        AnnotatedJavaClass experimentalObject = new AnnotatedJavaClass();"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return experimentalObject.field;"
        errorLine2="                                  ~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return experimentalObject.field;"
        errorLine2="                                  ~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        AnnotatedJavaClass experimentalObject = new AnnotatedJavaClass();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        AnnotatedJavaClass experimentalObject = new AnnotatedJavaClass();"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        AnnotatedJavaClass experimentalObject = new AnnotatedJavaClass();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        AnnotatedJavaClass experimentalObject = new AnnotatedJavaClass();"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return experimentalObject.method();"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return experimentalObject.method();"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return AnnotatedJavaClass.FIELD_STATIC;"
        errorLine2="                                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return AnnotatedJavaClass.FIELD_STATIC;"
        errorLine2="                                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return AnnotatedJavaClass.methodStatic();"
        errorLine2="                                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return AnnotatedJavaClass.methodStatic();"
        errorLine2="                                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalClassFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalDateTime` or `@OptIn(markerClass = sample.experimental.ExperimentalDateTime.class)`"
        errorLine1="        DateProvider dateProvider = new DateProvider();"
        errorLine2="        ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalDateTime` or `@OptIn(markerClass = sample.experimental.ExperimentalDateTime.class)`"
        errorLine1="        DateProvider dateProvider = new DateProvider();"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalDateTime` or `@OptIn(markerClass = sample.experimental.ExperimentalDateTime.class)`"
        errorLine1="        return dateProvider.getDate();"
        errorLine2="                            ~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalLocation` or `@OptIn(markerClass = sample.experimental.ExperimentalLocation.class)`"
        errorLine1="        LocationProvider locationProvider = new LocationProvider();"
        errorLine2="        ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalLocation` or `@OptIn(markerClass = sample.experimental.ExperimentalLocation.class)`"
        errorLine1="        LocationProvider locationProvider = new LocationProvider();"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalLocation` or `@OptIn(markerClass = sample.experimental.ExperimentalLocation.class)`"
        errorLine1="        return dateProvider.getDate() + locationProvider.getLocation();"
        errorLine2="                                                         ~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        val experimentalObject = AnnotatedJavaClass()"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        val experimentalObject = AnnotatedJavaClass()"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalDateTime` or `@OptIn(markerClass = sample.experimental.ExperimentalDateTime.class)`"
        errorLine1="        val dateProvider = DateProvider()"
        errorLine2="            ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalDateTime` or `@OptIn(markerClass = sample.experimental.ExperimentalDateTime.class)`"
        errorLine1="        val dateProvider = DateProvider()"
        errorLine2="                           ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return experimentalObject.field"
        errorLine2="                                  ~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalDateTime` or `@OptIn(markerClass = sample.experimental.ExperimentalDateTime.class)`"
        errorLine1="        return dateProvider.date"
        errorLine2="                            ~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        val experimentalObject = AnnotatedJavaClass()"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        val experimentalObject = AnnotatedJavaClass()"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return experimentalObject.method()"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return AnnotatedJavaClass.FIELD_STATIC"
        errorLine2="                                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return AnnotatedJavaClass.methodStatic()"
        errorLine2="                                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalLocation` or `@OptIn(markerClass = sample.experimental.ExperimentalLocation.class)`"
        errorLine1="        val locationProvider = LocationProvider()"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalLocation` or `@OptIn(markerClass = sample.experimental.ExperimentalLocation.class)`"
        errorLine1="        val locationProvider = LocationProvider()"
        errorLine2="                               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalLocation` or `@OptIn(markerClass = sample.experimental.ExperimentalLocation.class)`"
        errorLine1="        return dateProvider.date + locationProvider.location"
        errorLine2="                                                    ~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return stableObject.field"
        errorLine2="                            ~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return stableObject.method()"
        errorLine2="                            ~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return AnnotatedJavaMembers.FIELD_STATIC"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return AnnotatedJavaMembers.methodStatic()"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation2` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation2.class)`"
        errorLine1="        return experimentalObject.method() + AnnotatedJavaClass2.FIELD_STATIC"
        errorLine2="                                                                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        AnnotatedJavaMembers().field = -1"
        errorLine2="                               ~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        val value = AnnotatedJavaMembers().field"
        errorLine2="                                           ~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        AnnotatedJavaMembers().fieldWithSetMarker = -1"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return stableObject.field;"
        errorLine2="                            ~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalMembersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return stableObject.field;"
        errorLine2="                            ~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalMembersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return stableObject.method();"
        errorLine2="                            ~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalMembersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return stableObject.method();"
        errorLine2="                            ~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalMembersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return AnnotatedJavaMembers.FIELD_STATIC;"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalMembersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return AnnotatedJavaMembers.FIELD_STATIC;"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalMembersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return AnnotatedJavaMembers.methodStatic();"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalMembersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        return AnnotatedJavaMembers.methodStatic();"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalMembersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        new AnnotatedJavaMembers().field = -1;"
        errorLine2="                                   ~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalMembersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        new AnnotatedJavaMembers().field = -1;"
        errorLine2="                                   ~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalMembersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        int value = new AnnotatedJavaMembers().field;"
        errorLine2="                                               ~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalMembersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        int value = new AnnotatedJavaMembers().field;"
        errorLine2="                                               ~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalMembersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        new AnnotatedJavaMembers().setFieldWithSetMarker(-1);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalMembersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        new AnnotatedJavaMembers().setFieldWithSetMarker(-1);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalMembersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation2` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation2.class)`"
        errorLine1="        AnnotatedJavaClass2 experimentalObject2 = new AnnotatedJavaClass2();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalMultipleMarkersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation2` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation2.class)`"
        errorLine1="        AnnotatedJavaClass2 experimentalObject2 = new AnnotatedJavaClass2();"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalMultipleMarkersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation2` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation2.class)`"
        errorLine1="        AnnotatedJavaClass2 experimentalObject2 = new AnnotatedJavaClass2();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalMultipleMarkersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation2` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation2.class)`"
        errorLine1="        AnnotatedJavaClass2 experimentalObject2 = new AnnotatedJavaClass2();"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalMultipleMarkersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation2` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation2.class)`"
        errorLine1="        return experimentalObject.method() + experimentalObject2.field;"
        errorLine2="                                                                 ~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaExperimentalMultipleMarkersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation2` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation2.class)`"
        errorLine1="        return experimentalObject.method() + experimentalObject2.field;"
        errorLine2="                                                                 ~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaExperimentalMultipleMarkersFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.foo.ExperimentalPackage` or `@OptIn(markerClass = sample.experimental.foo.ExperimentalPackage.class)`"
        errorLine1="        Bar bar = new Bar();"
        errorLine2="        ~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaPackageFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.foo.ExperimentalPackage` or `@OptIn(markerClass = sample.experimental.foo.ExperimentalPackage.class)`"
        errorLine1="        Bar bar = new Bar();"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaPackageFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.foo.ExperimentalPackage` or `@OptIn(markerClass = sample.experimental.foo.ExperimentalPackage.class)`"
        errorLine1="        bar.baz();"
        errorLine2="            ~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaPackageFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        AnnotatedJavaPackage experimentalObject = new AnnotatedJavaPackage();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaPackageFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        AnnotatedJavaPackage experimentalObject = new AnnotatedJavaPackage();"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaPackageFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        experimentalObject.method();"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaPackageFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        AnnotatedJavaPackage experimentalObject = new AnnotatedJavaPackage();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaPackageFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        AnnotatedJavaPackage experimentalObject = new AnnotatedJavaPackage();"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaPackageFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        experimentalObject.method();"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaPackageFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.foo.ExperimentalPackage` or `@OptIn(markerClass = sample.experimental.foo.ExperimentalPackage.class)`"
        errorLine1="        callPackageExperimental();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaPackageFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        safePropagateMarker();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseJavaPackageFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        safePropagateMarker();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaPackageFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        val experimentalObject = AnnotatedJavaPackage()"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaPackageFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        val experimentalObject = AnnotatedJavaPackage()"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaPackageFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        experimentalObject.method()"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaPackageFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.foo.ExperimentalPackage` or `@OptIn(markerClass = sample.experimental.foo.ExperimentalPackage.class)`"
        errorLine1="        val bar = Bar()"
        errorLine2="            ~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaPackageFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.foo.ExperimentalPackage` or `@OptIn(markerClass = sample.experimental.foo.ExperimentalPackage.class)`"
        errorLine1="        val bar = Bar()"
        errorLine2="                  ~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaPackageFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.foo.ExperimentalPackage` or `@OptIn(markerClass = sample.experimental.foo.ExperimentalPackage.class)`"
        errorLine1="        bar.baz()"
        errorLine2="            ~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaPackageFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.foo.ExperimentalPackage` or `@OptIn(markerClass = sample.experimental.foo.ExperimentalPackage.class)`"
        errorLine1="        callPackageExperimental()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseJavaPackageFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        callPackageExperimental()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseJavaPackageFromKt.kt"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalDateTimeKt` or `@OptIn(markerClass = sample.experimental.ExperimentalDateTimeKt.class)`"
        errorLine1="        sample.experimental.DateProviderKt dateProvider = new sample.experimental.DateProviderKt();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalDateTimeKt` or `@OptIn(markerClass = sample.experimental.ExperimentalDateTimeKt.class)`"
        errorLine1="        sample.experimental.DateProviderKt dateProvider = new sample.experimental.DateProviderKt();"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalDateTimeKt` or `@OptIn(markerClass = sample.experimental.ExperimentalDateTimeKt.class)`"
        errorLine1="        return dateProvider.getDate();"
        errorLine2="                            ~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        AnnotatedKotlinClass experimentalObject = new AnnotatedKotlinClass();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        AnnotatedKotlinClass experimentalObject = new AnnotatedKotlinClass();"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        AnnotatedKotlinClass experimentalObject = new AnnotatedKotlinClass();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        AnnotatedKotlinClass experimentalObject = new AnnotatedKotlinClass();"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        return experimentalObject.method();"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        return experimentalObject.method();"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/sample/optin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalLocationKt` or `@OptIn(markerClass = sample.experimental.ExperimentalLocationKt.class)`"
        errorLine1="        LocationProviderKt locationProvider = new LocationProviderKt();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalLocationKt` or `@OptIn(markerClass = sample.experimental.ExperimentalLocationKt.class)`"
        errorLine1="        LocationProviderKt locationProvider = new LocationProviderKt();"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalLocationKt` or `@OptIn(markerClass = sample.experimental.ExperimentalLocationKt.class)`"
        errorLine1="        return dateProvider.getDate() + locationProvider.getLocation();"
        errorLine2="                                                         ~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalKotlinAnnotation2` or `@OptIn(markerClass = sample.kotlin.ExperimentalKotlinAnnotation2.class)`"
        errorLine1="        return experimentalObject.method() + AnnotatedKotlinClass2.fieldStatic;"
        errorLine2="                                                                   ~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalKotlinAnnotation2` or `@OptIn(markerClass = sample.optin.ExperimentalKotlinAnnotation2.class)`"
        errorLine1="        return experimentalObject.method() + AnnotatedKotlinClass2.fieldStatic;"
        errorLine2="                                                                   ~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalDateTimeKt` or `@OptIn(markerClass = sample.experimental.ExperimentalDateTimeKt.class)`"
        errorLine1="        TimeProviderKt.getTimeStatically();"
        errorLine2="                       ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalDateTimeKt` or `@OptIn(markerClass = sample.experimental.ExperimentalDateTimeKt.class)`"
        errorLine1="        TimeProviderKt.Companion.getTimeStatically();"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalDateTimeKt` or `@OptIn(markerClass = sample.experimental.ExperimentalDateTimeKt.class)`"
        errorLine1="        new TimeProviderKt().getTime();"
        errorLine2="                             ~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.experimental.ExperimentalDateTime` or `@OptIn(markerClass = sample.experimental.ExperimentalDateTime.class)`"
        errorLine1="        new TimeProviderKt().getTimeJava();"
        errorLine2="                             ~~~~~~~~~~~">
        <location
            file="src/main/java/sample/experimental/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        AnnotatedKotlinMembers.methodStatic();"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        AnnotatedKotlinMembers.methodStatic();"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        AnnotatedKotlinMembers.Companion.methodStatic();"
        errorLine2="                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        AnnotatedKotlinMembers.Companion.methodStatic();"
        errorLine2="                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        new AnnotatedKotlinMembers().method();"
        errorLine2="                                     ~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        new AnnotatedKotlinMembers().method();"
        errorLine2="                                     ~~~~~~">
        <location
            file="src/main/java/sample/optin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        new AnnotatedKotlinMembers().methodWithJavaMarker();"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalJavaAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalJavaAnnotation.class)`"
        errorLine1="        new AnnotatedKotlinMembers().methodWithJavaMarker();"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        new AnnotatedKotlinMembers().setField(-1);"
        errorLine2="                                     ~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        new AnnotatedKotlinMembers().setField(-1);"
        errorLine2="                                     ~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        int value = new AnnotatedKotlinMembers().getField();"
        errorLine2="                                                 ~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        int value = new AnnotatedKotlinMembers().getField();"
        errorLine2="                                                 ~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.kotlin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.kotlin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        new AnnotatedKotlinMembers().setFieldWithSetMarker(-1);"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="UnsafeOptInUsageError"
        message="This declaration is opt-in and its usage should be marked with `@sample.optin.ExperimentalKotlinAnnotation` or `@OptIn(markerClass = sample.optin.ExperimentalKotlinAnnotation.class)`"
        errorLine1="        new AnnotatedKotlinMembers().setFieldWithSetMarker(-1);"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/optin/UseKtExperimentalFromJava.java"/>
    </issue>

    <issue
        id="WrongRequiresOptIn"
        message="Experimental annotation should use kotlin.RequiresOptIn"
        errorLine1="annotation class ExperimentalKotlinAnnotationWrongAnnotation"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/sample/kotlin/ExperimentalKotlinAnnotationWrongAnnotation.kt"/>
    </issue>

</issues>
