<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.4.0-alpha08" type="baseline" client="gradle" dependencies="false" name="AGP (7.4.0-alpha08)" variant="all" version="7.4.0-alpha08">

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `DefaultGlyphChecker`"
        errorLine1="        GlyphChecker mGlyphChecker = new EmojiProcessor.DefaultGlyphChecker();"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Class requires API level 19 (current min is 14): `EmojiMetadata`"
        errorLine1="        final EmojiMetadata metadata = mock(EmojiMetadata.class);"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiEditableFactoryTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `TypefaceEmojiSpan`"
        errorLine1="        final EmojiSpan span = new TypefaceEmojiSpan(metadata);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiEditableFactoryTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Class requires API level 19 (current min is 14): `EmojiSpan`"
        errorLine1="        final EmojiSpan[] spans = editable.getSpans(0, 1, EmojiSpan.class);"
        errorLine2="                                                          ~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiEditableFactoryTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 15 (current min is 14): `android.view.View#hasOnClickListeners`"
        errorLine1="        assertTrue(extractButton.hasOnClickListeners());"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiExtractTextLayoutTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 15 (current min is 14): `android.view.View#hasOnClickListeners`"
        errorLine1="        assertFalse(extractButton.hasOnClickListeners());"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiExtractTextLayoutTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `EmojiInputFilter`"
        errorLine1="        mInputFilter = new EmojiInputFilter(textView);"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiInputFilterTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `filter`"
        errorLine1="        assertNull(mInputFilter.filter(null, 0, 1, null, 0, 1));"
        errorLine2="                                ~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiInputFilterTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `filter`"
        errorLine1="        final CharSequence result = mInputFilter.filter(testString, 0, 1, null, 0, 1);"
        errorLine2="                                                 ~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiInputFilterTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `filter`"
        errorLine1="        final CharSequence result = mInputFilter.filter(testString, 0, 1, null, 0, 1);"
        errorLine2="                                                 ~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiInputFilterTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `filter`"
        errorLine1="        final CharSequence result = mInputFilter.filter(testString, 0, 1, null, 0, 1);"
        errorLine2="                                                 ~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiInputFilterTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `filter`"
        errorLine1="        final CharSequence result = mInputFilter.filter(testString, 0, 1, null, 0, 1);"
        errorLine2="                                                 ~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiInputFilterTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `filter`"
        errorLine1="        final CharSequence result = mInputFilter.filter(testString, 0, 1, null, 0, 1);"
        errorLine2="                                                 ~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiInputFilterTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Class requires API level 19 (current min is 14): `EmojiSpan`"
        errorLine1="            mSpans = ((Spanned) charSequence).getSpans(0, charSequence.length(), EmojiSpan.class);"
        errorLine2="                                                                                 ~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/util/EmojiMatcher.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Class requires API level 19 (current min is 14): `EmojiSpan`"
        errorLine1="            mSpans = ((Spanned) charSequence).getSpans(0, charSequence.length(), EmojiSpan.class);"
        errorLine2="                                                                                 ~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/util/EmojiMatcher.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Class requires API level 19 (current min is 14): `EmojiSpan`"
        errorLine1="            final EmojiSpan[] spans = spanned.getSpans(0, charSequence.length(), EmojiSpan.class);"
        errorLine2="                                                                                 ~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/util/EmojiMatcher.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `getId`"
        errorLine1="                    if (mResId == spans[index].getId()) {"
        errorLine2="                                               ~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/util/EmojiMatcher.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `getId`"
        errorLine1="                    if (mResId == -1 || mResId == spans[index].getId()) {"
        errorLine2="                                                               ~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/util/EmojiMatcher.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `EmojiTextWatcher`"
        errorLine1="        mTextWatcher = new EmojiTextWatcher(editText);"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTextWatcherTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `onTextChanged`"
        errorLine1="        mTextWatcher.onTextChanged(testString, 0, 0, 1);"
        errorLine2="                     ~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTextWatcherTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `onTextChanged`"
        errorLine1="        mTextWatcher.onTextChanged(testString, 0, 0, 1);"
        errorLine2="                     ~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTextWatcherTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `onTextChanged`"
        errorLine1="        mTextWatcher.onTextChanged(testString, 0, 0, 1);"
        errorLine2="                     ~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTextWatcherTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `getEmojiReplaceStrategy`"
        errorLine1="        assertEquals(EmojiCompat.REPLACE_STRATEGY_DEFAULT, mTextWatcher.getEmojiReplaceStrategy());"
        errorLine2="                                                                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTextWatcherTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `onTextChanged`"
        errorLine1="        mTextWatcher.onTextChanged(testString, 0, 0, 1);"
        errorLine2="                     ~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTextWatcherTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `setEmojiReplaceStrategy`"
        errorLine1="        mTextWatcher.setEmojiReplaceStrategy(EmojiCompat.REPLACE_STRATEGY_ALL);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTextWatcherTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `onTextChanged`"
        errorLine1="        mTextWatcher.onTextChanged(testString, 0, 0, 1);"
        errorLine2="                     ~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTextWatcherTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `onTextChanged`"
        errorLine1="        mTextWatcher.onTextChanged(testString, 0, 0, 1);"
        errorLine2="                     ~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTextWatcherTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `EmojiTransformationMethod`"
        errorLine1="        mTransformationMethod = new EmojiTransformationMethod(mWrappedTransformationMethod);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTransformationMethodTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `getTransformation`"
        errorLine1="        assertNull(mTransformationMethod.getTransformation(null, mView));"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTransformationMethodTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `getTransformation`"
        errorLine1="        mTransformationMethod.getTransformation(&quot;&quot;, null);"
        errorLine2="                              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTransformationMethodTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `EmojiTransformationMethod`"
        errorLine1="        mTransformationMethod = new EmojiTransformationMethod(null);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTransformationMethodTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `getTransformation`"
        errorLine1="        final CharSequence result = mTransformationMethod.getTransformation(mTestString, mView);"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTransformationMethodTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `getTransformation`"
        errorLine1="        final CharSequence result = mTransformationMethod.getTransformation(mTestString, mView);"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTransformationMethodTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `getTransformation`"
        errorLine1="        final CharSequence result = mTransformationMethod.getTransformation(mTestString, mView);"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTransformationMethodTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `getTransformation`"
        errorLine1="        final CharSequence result = mTransformationMethod.getTransformation(mTestString, mView);"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTransformationMethodTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `getTransformation`"
        errorLine1="        final CharSequence result = mTransformationMethod.getTransformation(mTestString, mView);"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/EmojiTransformationMethodTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Class requires API level 19 (current min is 14): `EmojiSpan`"
        errorLine1="        final EmojiSpan span = mock(EmojiSpan.class);"
        errorLine2="                                    ~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/SpannableBuilderTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Class requires API level 19 (current min is 14): `EmojiSpan`"
        errorLine1="        EmojiSpan[] spans = spannable.getSpans(0, spannable.length(), EmojiSpan.class);"
        errorLine2="                                                                      ~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/SpannableBuilderTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Class requires API level 19 (current min is 14): `EmojiSpan`"
        errorLine1="        final EmojiSpan span = mock(EmojiSpan.class);"
        errorLine2="                                    ~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/SpannableBuilderTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Class requires API level 19 (current min is 14): `EmojiSpan`"
        errorLine1="        EmojiSpan[] spans = spannable.getSpans(0, spannable.length(), EmojiSpan.class);"
        errorLine2="                                                                      ~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/widget/SpannableBuilderTest.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `MetadataRepo`"
        errorLine1="                            loaderCallback.onLoaded(new MetadataRepo());"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/text/TestConfigBuilder.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `create`"
        errorLine1="                            sMetadataRepo = MetadataRepo.create(assetManager, FONT_FILE);"
        errorLine2="                                                         ~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/text/TestConfigBuilder.java"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 19 (current min is 14): `create`"
        errorLine1="                    mMetadataRepo = MetadataRepo.create(assetManager, FONT_FILE);"
        errorLine2="                                                 ~~~~~~">
        <location
            file="src/androidTest/java/androidx/emoji/text/TestConfigBuilder.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.emoji.widget.EmojiButton is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="        super(context, attrs, defStyleAttr, defStyleRes);"
        errorLine2="        ~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiButton.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.emoji.widget.EmojiEditText is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="        super(context, attrs, defStyleAttr, defStyleRes);"
        errorLine2="        ~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiEditText.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.emoji.widget.EmojiExtractEditText is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="        super(context, attrs, defStyleAttr, defStyleRes);"
        errorLine2="        ~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractEditText.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.emoji.widget.EmojiExtractTextLayout is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="        super(context, attrs, defStyleAttr, defStyleRes);"
        errorLine2="        ~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractTextLayout.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.emoji.widget.EmojiTextView is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="        super(context, attrs, defStyleAttr, defStyleRes);"
        errorLine2="        ~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiTextView.java"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.emoji.widget.ExtractButtonCompat is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="        super(context, attrs, defStyleAttr, defStyleRes);"
        errorLine2="        ~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/ExtractButtonCompat.java"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="The getter return type (`int`) and setter parameter type (`boolean`) getter and setter methods for property `hasGlyph` should have exactly the same type to allow be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public int getHasGlyph() {"
        errorLine2="               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiMetadata.java"/>
        <location
            file="src/main/java/androidx/emoji/text/EmojiMetadata.java"
            message="Setter here"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EditTextAttributeHelper(@NonNull View view, AttributeSet attrs, int defStyleAttr,"
        errorLine2="                                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EditTextAttributeHelper.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiButton(Context context) {"
        errorLine2="                       ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiButton.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiButton(Context context, AttributeSet attrs) {"
        errorLine2="                       ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiButton.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiButton(Context context, AttributeSet attrs) {"
        errorLine2="                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiButton.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiButton(Context context, AttributeSet attrs, int defStyleAttr) {"
        errorLine2="                       ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiButton.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiButton(Context context, AttributeSet attrs, int defStyleAttr) {"
        errorLine2="                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiButton.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiButton(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {"
        errorLine2="                       ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiButton.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiButton(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {"
        errorLine2="                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiButton.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static EmojiCompat init(@NonNull final Config config) {"
        errorLine2="                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static EmojiCompat reset(@NonNull final Config config) {"
        errorLine2="                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static EmojiCompat reset(final EmojiCompat emojiCompat) {"
        errorLine2="                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static EmojiCompat reset(final EmojiCompat emojiCompat) {"
        errorLine2="                                          ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static EmojiCompat get() {"
        errorLine2="                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            final KeyEvent event) {"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public CharSequence process(@NonNull final CharSequence charSequence) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public CharSequence process(@NonNull final CharSequence charSequence,"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public CharSequence process(@NonNull final CharSequence charSequence,"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public CharSequence process(@NonNull final CharSequence charSequence,"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Config registerInitCallback(@NonNull InitCallback initCallback) {"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Config unregisterInitCallback(@NonNull InitCallback initCallback) {"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Config setReplaceAll(final boolean replaceAll) {"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Config setUseEmojiAsDefaultStyle(final boolean useEmojiAsDefaultStyle) {"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Config setUseEmojiAsDefaultStyle(final boolean useEmojiAsDefaultStyle,"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Config setEmojiSpanIndicatorEnabled(boolean emojiSpanIndicatorEnabled) {"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Config setEmojiSpanIndicatorColor(@ColorInt int color) {"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Config setMetadataLoadStrategy(@LoadStrategy int strategy) {"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        protected final MetadataRepoLoader getMetadataRepoLoader() {"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiEditText(Context context) {"
        errorLine2="                         ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiEditText.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiEditText(Context context, AttributeSet attrs) {"
        errorLine2="                         ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiEditText.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiEditText(Context context, AttributeSet attrs) {"
        errorLine2="                                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiEditText.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiEditText(Context context, AttributeSet attrs, int defStyleAttr) {"
        errorLine2="                         ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiEditText.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiEditText(Context context, AttributeSet attrs, int defStyleAttr) {"
        errorLine2="                                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiEditText.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiEditText(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {"
        errorLine2="                         ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiEditText.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiEditText(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {"
        errorLine2="                                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiEditText.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiExtractEditText(Context context) {"
        errorLine2="                                ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractEditText.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiExtractEditText(Context context, AttributeSet attrs) {"
        errorLine2="                                ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractEditText.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiExtractEditText(Context context, AttributeSet attrs) {"
        errorLine2="                                                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractEditText.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiExtractEditText(Context context, AttributeSet attrs, int defStyleAttr) {"
        errorLine2="                                ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractEditText.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiExtractEditText(Context context, AttributeSet attrs, int defStyleAttr) {"
        errorLine2="                                                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractEditText.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiExtractEditText(Context context, AttributeSet attrs, int defStyleAttr,"
        errorLine2="                                ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractEditText.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiExtractEditText(Context context, AttributeSet attrs, int defStyleAttr,"
        errorLine2="                                                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractEditText.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiExtractTextLayout(Context context) {"
        errorLine2="                                  ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractTextLayout.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiExtractTextLayout(Context context,"
        errorLine2="                                  ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractTextLayout.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiExtractTextLayout(Context context,"
        errorLine2="                                  ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractTextLayout.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiExtractTextLayout(Context context, AttributeSet attrs,"
        errorLine2="                                  ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractTextLayout.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiExtractTextLayout(Context context, AttributeSet attrs,"
        errorLine2="                                                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractTextLayout.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onUpdateExtractingViews(InputMethodService inputMethodService, EditorInfo ei) {"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractTextLayout.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onUpdateExtractingViews(InputMethodService inputMethodService, EditorInfo ei) {"
        errorLine2="                                                                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiExtractTextLayout.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            final int end, final Paint.FontMetricsInt fm) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/EmojiSpan.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiTextView(Context context) {"
        errorLine2="                         ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiTextView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiTextView(Context context, AttributeSet attrs) {"
        errorLine2="                         ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiTextView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiTextView(Context context, AttributeSet attrs) {"
        errorLine2="                                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiTextView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiTextView(Context context, AttributeSet attrs, int defStyleAttr) {"
        errorLine2="                         ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiTextView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiTextView(Context context, AttributeSet attrs, int defStyleAttr) {"
        errorLine2="                                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiTextView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiTextView(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {"
        errorLine2="                         ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiTextView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public EmojiTextView(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {"
        errorLine2="                                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/EmojiTextView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ExtractButtonCompat(Context context) {"
        errorLine2="                               ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/ExtractButtonCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ExtractButtonCompat(Context context, AttributeSet attrs) {"
        errorLine2="                               ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/ExtractButtonCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ExtractButtonCompat(Context context, AttributeSet attrs) {"
        errorLine2="                                                ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/ExtractButtonCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ExtractButtonCompat(Context context, AttributeSet attrs, int defStyleAttr) {"
        errorLine2="                               ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/ExtractButtonCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ExtractButtonCompat(Context context, AttributeSet attrs, int defStyleAttr) {"
        errorLine2="                                                ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/ExtractButtonCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ExtractButtonCompat(Context context, AttributeSet attrs, int defStyleAttr,"
        errorLine2="                               ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/ExtractButtonCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ExtractButtonCompat(Context context, AttributeSet attrs, int defStyleAttr,"
        errorLine2="                                                ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/ExtractButtonCompat.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FontRequestEmojiCompatConfig setHandler(Handler handler) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/FontRequestEmojiCompatConfig.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FontRequestEmojiCompatConfig setHandler(Handler handler) {"
        errorLine2="                                                   ~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/FontRequestEmojiCompatConfig.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FontRequestEmojiCompatConfig setRetryPolicy(RetryPolicy policy) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/FontRequestEmojiCompatConfig.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FontRequestEmojiCompatConfig setRetryPolicy(RetryPolicy policy) {"
        errorLine2="                                                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/FontRequestEmojiCompatConfig.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public FontFamilyResult fetchFonts(@NonNull Context context,"
        errorLine2="               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/FontRequestEmojiCompatConfig.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Typeface buildTypeface(@NonNull Context context,"
        errorLine2="               ~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/FontRequestEmojiCompatConfig.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static MetadataRepo create(@NonNull final Typeface typeface,"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/MetadataRepo.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static MetadataRepo create(@NonNull final Typeface typeface,"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/MetadataRepo.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static MetadataRepo create(@NonNull final AssetManager assetManager,"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/MetadataRepo.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            final String assetPath) throws IOException {"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/MetadataRepo.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public char[] getEmojiCharArray() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/MetadataRepo.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public MetadataList getMetadataList() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/MetadataRepo.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public CharSequence subSequence(int start, int end) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/SpannableBuilder.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public SpannableStringBuilder append(CharSequence text) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/SpannableBuilder.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public SpannableStringBuilder append(CharSequence text) {"
        errorLine2="                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/SpannableBuilder.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public SpannableStringBuilder append(char text) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/SpannableBuilder.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public SpannableStringBuilder append(CharSequence text, int start, int end) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/SpannableBuilder.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public SpannableStringBuilder append(CharSequence text, int start, int end) {"
        errorLine2="                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/widget/SpannableBuilder.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public TypefaceEmojiSpan(final EmojiMetadata metadata) {"
        errorLine2="                                   ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/emoji/text/TypefaceEmojiSpan.java"/>
    </issue>

</issues>
