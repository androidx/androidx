<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.3.0-beta01" type="baseline" client="gradle" dependencies="false" name="AGP (8.3.0-beta01)" variant="all" version="8.3.0-beta01">

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="                Thread.sleep(5000L);"
        errorLine2="                       ~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/InfiniteWorker.java"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="            Thread.sleep(200);"
        errorLine2="                   ~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/SleepWorker.java"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ListenableFutureKt.await can only be called from within the same library group (referenced groupId=`androidx.work` from groupId=`androidx.work.integration-tests`)"
        errorLine1="        remoteWorkManager.enqueue(listOf(request)).await()"
        errorLine2="                                                   ~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/RemoteService.kt"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ListenableFutureKt.await can only be called from within the same library group (referenced groupId=`androidx.work` from groupId=`androidx.work.integration-tests`)"
        errorLine1="        ).await()"
        errorLine2="          ~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/RemoteService.kt"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ListenableFutureKt.await can only be called from within the same library group (referenced groupId=`androidx.work` from groupId=`androidx.work.integration-tests`)"
        errorLine1="        ).await()"
        errorLine2="          ~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/RemoteService.kt"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ListenableFutureKt.await can only be called from within the same library group (referenced groupId=`androidx.work` from groupId=`androidx.work.integration-tests`)"
        errorLine1="            .await()"
        errorLine2="             ~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/RemoteService.kt"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ListenableFutureKt.await can only be called from within the same library group (referenced groupId=`androidx.work` from groupId=`androidx.work.integration-tests`)"
        errorLine1="        remoteWorkManager.cancelAllWorkByTag(WORK_TAG).await()"
        errorLine2="                                                       ~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/RemoteService.kt"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ListenableFutureKt.await can only be called from within the same library group (referenced groupId=`androidx.work` from groupId=`androidx.work.integration-tests`)"
        errorLine1="        remoteWorkManager.cancelAllWork().await()"
        errorLine2="                                          ~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/RemoteService.kt"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ListenableFutureKt.await can only be called from within the same library group (referenced groupId=`androidx.work` from groupId=`androidx.work.integration-tests`)"
        errorLine1="        val workInfoList: List&lt;WorkInfo> = remoteWorkManager.getWorkInfos(query).await()"
        errorLine2="                                                                                 ~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/RemoteService.kt"/>
    </issue>

    <issue
        id="RestrictedApiAndroidX"
        message="ListenableFutureKt.await can only be called from within the same library group (referenced groupId=`androidx.work` from groupId=`androidx.work.integration-tests`)"
        errorLine1="                    setProgressAsync(progress).await()"
        errorLine2="                                               ~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/RemoteWorker.kt"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected void onCreate(final Bundle savedInstanceState) {"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/sherlockholmes/AnalyzeSherlockHolmesActivity.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String mProcessedFilePath;"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/Image.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Bitmap mImage;"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/Image.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void insert(Image image);"
        errorLine2="                ~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/ImageDao.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    List&lt;Image> getImages();"
        errorLine2="    ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/ImageDao.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    int setProcessed(String originalAssetName, String processedFilePath);"
        errorLine2="                     ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/ImageDao.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    int setProcessed(String originalAssetName, String processedFilePath);"
        errorLine2="                                               ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/ImageDao.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    LiveData&lt;List&lt;Image>> getImagesLiveData();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/ImageDao.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected void onCreate(Bundle savedInstanceState) {"
        errorLine2="                            ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageProcessingActivity.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageRecyclerViewAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {"
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageRecyclerViewAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onBindViewHolder(ViewHolder holder, int position) {"
        errorLine2="                                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageRecyclerViewAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void onViewRecycled(ViewHolder holder) {"
        errorLine2="                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/imageprocessing/ImageRecyclerViewAdapter.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static String TAG = &quot;RecursiveWorker&quot;;"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/RecursiveWorker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static TestDatabase getInstance(Context context) {"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/TestDatabase.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static TestDatabase getInstance(Context context) {"
        errorLine2="                                           ~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/TestDatabase.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public abstract WordCountDao getWordCountDao();"
        errorLine2="                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/TestDatabase.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public abstract ImageDao getImageDao();"
        errorLine2="                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/TestDatabase.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static OneTimeWorkRequest.Builder create(String inputFile) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/sherlockholmes/TextMappingWorker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static OneTimeWorkRequest.Builder create(String inputFile) {"
        errorLine2="                                                    ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/sherlockholmes/TextMappingWorker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static OneTimeWorkRequest.Builder create(String message) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/ToastWorker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static OneTimeWorkRequest.Builder create(String message) {"
        errorLine2="                                                    ~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/ToastWorker.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void insertWordCount(WordCount wordCount);"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/WordCountDao.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    LiveData&lt;List&lt;WordCount>> getWordCounts();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/integration/testapp/db/WordCountDao.java"/>
    </issue>

</issues>
