/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id("AndroidXPlugin")
    id("com.android.application")
    id("kotlin-android")
}

android {
    buildTypes {
        getByName("release") {
            minifyEnabled = true
        }
    }
    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"
                ]
            }
        }
        vectorDrawables {
            useSupportLibrary = true
        }
    }
    namespace "androidx.work.integration.testapp"
}

dependencies {
    annotationProcessor(projectOrArtifact(":room:room-compiler"))
    implementation(projectOrArtifact(":room:room-runtime"))
    implementation(projectOrArtifact(":room:room-ktx"))

    implementation(libs.constraintLayout)
    implementation("androidx.core:core:1.12.0")
    implementation("androidx.lifecycle:lifecycle-service:2.6.2")
    implementation(project(":work:work-runtime-ktx"))
    implementation(project(":work:work-multiprocess"))
    implementation(project(":work:work-gcm"))
    implementation("androidx.concurrent:concurrent-futures-ktx:1.1.0")
    implementation("androidx.recyclerview:recyclerview:1.3.2")
    implementation("androidx.activity:activity:1.8.2")
    implementation(libs.material)
}

// Enable parameter names to support Room incremental when its a project() dep.
// See b/198431380
tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
}
