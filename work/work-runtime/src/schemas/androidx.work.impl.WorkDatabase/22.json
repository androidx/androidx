{
  "formatVersion": 1,
  "database": {
    "version": 22,
    "identityHash": "347835753abee7989f767d3ba5a5a2dd",
    "entities": [
      {
        "tableName": "Dependency",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`work_spec_id` TEXT NOT NULL, `prerequisite_id` TEXT NOT NULL, PRIMARY KEY(`work_spec_id`, `prerequisite_id`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`prerequisite_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "workSpecId",
            "columnName": "work_spec_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "prerequisiteId",
            "columnName": "prerequisite_id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "work_spec_id",
            "prerequisite_id"
          ]
        },
        "indices": [
          {
            "name": "index_Dependency_work_spec_id",
            "unique": false,
            "columnNames": [
              "work_spec_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Dependency_work_spec_id` ON `${TABLE_NAME}` (`work_spec_id`)"
          },
          {
            "name": "index_Dependency_prerequisite_id",
            "unique": false,
            "columnNames": [
              "prerequisite_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Dependency_prerequisite_id` ON `${TABLE_NAME}` (`prerequisite_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "WorkSpec",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "work_spec_id"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "WorkSpec",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "prerequisite_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "WorkSpec",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `state` INTEGER NOT NULL, `worker_class_name` TEXT NOT NULL, `input_merger_class_name` TEXT NOT NULL, `input` BLOB NOT NULL, `output` BLOB NOT NULL, `initial_delay` INTEGER NOT NULL, `interval_duration` INTEGER NOT NULL, `flex_duration` INTEGER NOT NULL, `run_attempt_count` INTEGER NOT NULL, `backoff_policy` INTEGER NOT NULL, `backoff_delay_duration` INTEGER NOT NULL, `last_enqueue_time` INTEGER NOT NULL DEFAULT -1, `minimum_retention_duration` INTEGER NOT NULL, `schedule_requested_at` INTEGER NOT NULL, `run_in_foreground` INTEGER NOT NULL, `out_of_quota_policy` INTEGER NOT NULL, `period_count` INTEGER NOT NULL DEFAULT 0, `generation` INTEGER NOT NULL DEFAULT 0, `next_schedule_time_override` INTEGER NOT NULL DEFAULT 9223372036854775807, `next_schedule_time_override_generation` INTEGER NOT NULL DEFAULT 0, `stop_reason` INTEGER NOT NULL DEFAULT -256, `required_network_type` INTEGER NOT NULL, `required_network_request` BLOB NOT NULL DEFAULT x'', `requires_charging` INTEGER NOT NULL, `requires_device_idle` INTEGER NOT NULL, `requires_battery_not_low` INTEGER NOT NULL, `requires_storage_not_low` INTEGER NOT NULL, `trigger_content_update_delay` INTEGER NOT NULL, `trigger_max_content_delay` INTEGER NOT NULL, `content_uri_triggers` BLOB NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "workerClassName",
            "columnName": "worker_class_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "inputMergerClassName",
            "columnName": "input_merger_class_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "input",
            "columnName": "input",
            "affinity": "BLOB",
            "notNull": true
          },
          {
            "fieldPath": "output",
            "columnName": "output",
            "affinity": "BLOB",
            "notNull": true
          },
          {
            "fieldPath": "initialDelay",
            "columnName": "initial_delay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "intervalDuration",
            "columnName": "interval_duration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "flexDuration",
            "columnName": "flex_duration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "runAttemptCount",
            "columnName": "run_attempt_count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "backoffPolicy",
            "columnName": "backoff_policy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "backoffDelayDuration",
            "columnName": "backoff_delay_duration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastEnqueueTime",
            "columnName": "last_enqueue_time",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "minimumRetentionDuration",
            "columnName": "minimum_retention_duration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleRequestedAt",
            "columnName": "schedule_requested_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "expedited",
            "columnName": "run_in_foreground",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "outOfQuotaPolicy",
            "columnName": "out_of_quota_policy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "periodCount",
            "columnName": "period_count",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "generation",
            "columnName": "generation",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "nextScheduleTimeOverride",
            "columnName": "next_schedule_time_override",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "9223372036854775807"
          },
          {
            "fieldPath": "nextScheduleTimeOverrideGeneration",
            "columnName": "next_schedule_time_override_generation",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "stopReason",
            "columnName": "stop_reason",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-256"
          },
          {
            "fieldPath": "constraints.requiredNetworkType",
            "columnName": "required_network_type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "constraints.requiredNetworkRequestCompat",
            "columnName": "required_network_request",
            "affinity": "BLOB",
            "notNull": true,
            "defaultValue": "x''"
          },
          {
            "fieldPath": "constraints.requiresCharging",
            "columnName": "requires_charging",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "constraints.requiresDeviceIdle",
            "columnName": "requires_device_idle",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "constraints.requiresBatteryNotLow",
            "columnName": "requires_battery_not_low",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "constraints.requiresStorageNotLow",
            "columnName": "requires_storage_not_low",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "constraints.contentTriggerUpdateDelayMillis",
            "columnName": "trigger_content_update_delay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "constraints.contentTriggerMaxDelayMillis",
            "columnName": "trigger_max_content_delay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "constraints.contentUriTriggers",
            "columnName": "content_uri_triggers",
            "affinity": "BLOB",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_WorkSpec_schedule_requested_at",
            "unique": false,
            "columnNames": [
              "schedule_requested_at"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_WorkSpec_schedule_requested_at` ON `${TABLE_NAME}` (`schedule_requested_at`)"
          },
          {
            "name": "index_WorkSpec_last_enqueue_time",
            "unique": false,
            "columnNames": [
              "last_enqueue_time"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_WorkSpec_last_enqueue_time` ON `${TABLE_NAME}` (`last_enqueue_time`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "WorkTag",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`tag` TEXT NOT NULL, `work_spec_id` TEXT NOT NULL, PRIMARY KEY(`tag`, `work_spec_id`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "tag",
            "columnName": "tag",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "workSpecId",
            "columnName": "work_spec_id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "tag",
            "work_spec_id"
          ]
        },
        "indices": [
          {
            "name": "index_WorkTag_work_spec_id",
            "unique": false,
            "columnNames": [
              "work_spec_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_WorkTag_work_spec_id` ON `${TABLE_NAME}` (`work_spec_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "WorkSpec",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "work_spec_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "SystemIdInfo",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`work_spec_id` TEXT NOT NULL, `generation` INTEGER NOT NULL DEFAULT 0, `system_id` INTEGER NOT NULL, PRIMARY KEY(`work_spec_id`, `generation`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "workSpecId",
            "columnName": "work_spec_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "generation",
            "columnName": "generation",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "systemId",
            "columnName": "system_id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "work_spec_id",
            "generation"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "WorkSpec",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "work_spec_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "WorkName",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`name` TEXT NOT NULL, `work_spec_id` TEXT NOT NULL, PRIMARY KEY(`name`, `work_spec_id`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "workSpecId",
            "columnName": "work_spec_id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "name",
            "work_spec_id"
          ]
        },
        "indices": [
          {
            "name": "index_WorkName_work_spec_id",
            "unique": false,
            "columnNames": [
              "work_spec_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_WorkName_work_spec_id` ON `${TABLE_NAME}` (`work_spec_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "WorkSpec",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "work_spec_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "WorkProgress",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`work_spec_id` TEXT NOT NULL, `progress` BLOB NOT NULL, PRIMARY KEY(`work_spec_id`), FOREIGN KEY(`work_spec_id`) REFERENCES `WorkSpec`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "workSpecId",
            "columnName": "work_spec_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "progress",
            "columnName": "progress",
            "affinity": "BLOB",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "work_spec_id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "WorkSpec",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "work_spec_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "Preference",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`key` TEXT NOT NULL, `long_value` INTEGER, PRIMARY KEY(`key`))",
        "fields": [
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "value",
            "columnName": "long_value",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "key"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '347835753abee7989f767d3ba5a5a2dd')"
    ]
  }
}